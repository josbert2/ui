/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-50: oklch(97.1% 0.013 17.38);
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-orange-100: oklch(95.4% 0.038 75.164);
    --color-orange-200: oklch(90.1% 0.076 70.697);
    --color-orange-400: oklch(75% 0.183 55.934);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-orange-800: oklch(47% 0.157 37.304);
    --color-orange-900: oklch(40.8% 0.123 38.172);
    --color-amber-300: oklch(87.9% 0.169 91.605);
    --color-yellow-100: oklch(97.3% 0.071 103.193);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-yellow-800: oklch(47.6% 0.114 61.907);
    --color-lime-400: oklch(84.1% 0.238 128.85);
    --color-lime-500: oklch(76.8% 0.233 130.85);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-200: oklch(92.5% 0.084 155.995);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-green-900: oklch(39.3% 0.095 152.535);
    --color-teal-100: oklch(95.3% 0.051 180.801);
    --color-teal-500: oklch(70.4% 0.14 182.503);
    --color-teal-600: oklch(60% 0.118 184.704);
    --color-teal-700: oklch(51.1% 0.096 186.391);
    --color-teal-800: oklch(43.7% 0.078 188.216);
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-sky-400: oklch(74.6% 0.16 232.661);
    --color-sky-500: oklch(68.5% 0.169 237.323);
    --color-blue-50: oklch(97% 0.014 254.604);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-200: oklch(88.2% 0.059 254.128);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-blue-950: oklch(28.2% 0.091 267.935);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-violet-600: oklch(54.1% 0.281 293.009);
    --color-purple-100: oklch(94.6% 0.033 307.174);
    --color-purple-400: oklch(71.4% 0.203 305.504);
    --color-fuchsia-400: oklch(74% 0.238 322.16);
    --color-rose-600: oklch(58.6% 0.253 17.585);
    --color-gray-50: var(--neutral-50);
    --color-gray-100: var(--neutral-100);
    --color-gray-200: var(--neutral-200);
    --color-gray-300: var(--neutral-300);
    --color-gray-400: var(--neutral-400);
    --color-gray-500: var(--neutral-500);
    --color-gray-600: var(--neutral-600);
    --color-gray-700: var(--neutral-700);
    --color-gray-800: var(--neutral-800);
    --color-gray-900: var(--neutral-900);
    --color-gray-950: var(--neutral-950);
    --color-zinc-50: oklch(98.5% 0 0);
    --color-zinc-100: oklch(96.7% 0.001 286.375);
    --color-zinc-200: oklch(92% 0.004 286.32);
    --color-zinc-300: oklch(87.1% 0.006 286.286);
    --color-zinc-400: oklch(70.5% 0.015 286.067);
    --color-zinc-500: oklch(55.2% 0.016 285.938);
    --color-zinc-700: oklch(37% 0.013 285.805);
    --color-zinc-800: oklch(27.4% 0.006 286.033);
    --color-zinc-900: oklch(21% 0.006 285.885);
    --color-zinc-950: oklch(14.1% 0.005 285.823);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-300: oklch(87% 0 0);
    --color-neutral-400: oklch(70.8% 0 0);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-600: oklch(43.9% 0 0);
    --color-neutral-700: oklch(37.1% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-neutral-900: oklch(20.5% 0 0);
    --color-neutral-950: oklch(14.5% 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-lg: 64rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-thin: 100;
    --font-weight-extralight: 200;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --font-weight-black: 900;
    --tracking-tighter: -0.05em;
    --tracking-tight: -0.025em;
    --tracking-normal: 0em;
    --tracking-wide: 0.025em;
    --tracking-wider: 0.05em;
    --tracking-widest: 0.1em;
    --leading-tight: 1.25;
    --leading-normal: 1.5;
    --leading-relaxed: 1.625;
    --leading-loose: 2;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --blur-xl: 24px;
    --blur-2xl: 40px;
    --blur-3xl: 64px;
    --perspective-normal: 500px;
    --aspect-video: 16 / 9;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-base-100: var(--base-100);
    --color-base-200: var(--colors-gray-200);
    --color-base-300: var(--base-300);
    --color-base-content: var(--colors-base-content);
    --color-gray: var(--neutral);
    --color-primary: var(--primary);
    --color-primary-50: var(--primary-50);
    --color-primary-100: var(--primary-100);
    --color-primary-200: var(--primary-200);
    --color-primary-300: var(--primary-300);
    --color-primary-400: var(--primary-400);
    --color-primary-500: var(--primary-500);
    --color-primary-600: var(--primary-600);
    --color-primary-700: var(--primary-700);
    --color-primary-800: var(--primary-800);
    --color-primary-900: var(--primary-900);
    --color-primary-950: var(--primary-950);
    --color-secondary: var(--secondary-500);
    --color-secondary-50: var(--secondary-50);
    --color-secondary-100: var(--secondary-100);
    --color-secondary-200: var(--secondary-200);
    --color-secondary-400: var(--secondary-400);
    --color-secondary-500: var(--secondary-500);
    --color-secondary-600: var(--secondary-600);
    --color-secondary-700: var(--secondary-700);
    --color-secondary-950: var(--secondary-950);
    --color-success: var(--success);
    --color-success-300: var(--success-300);
    --color-success-400: var(--success-400);
    --color-success-500: var(--success-500);
    --color-success-600: var(--success-600);
    --color-success-800: var(--success-800);
    --color-warning: var(--warning);
    --color-warning-50: var(--warning-50);
    --color-warning-200: var(--warning-200);
    --color-warning-300: var(--warning-300);
    --color-warning-400: var(--warning-400);
    --color-warning-500: var(--warning-500);
    --color-warning-600: var(--warning-600);
    --color-warning-700: var(--warning-700);
    --color-warning-800: var(--warning-800);
    --color-info: var(--info);
    --color-info-300: var(--info-300);
    --color-info-400: var(--info-400);
    --color-info-500: var(--info-500);
    --color-info-600: var(--info-600);
    --color-info-700: var(--info-700);
    --color-accent: var(--colors-accent-500);
    --color-accent-400: var(--colors-accent-400);
    --color-accent-500: var(--colors-accent-500);
    --color-accent-600: var(--colors-accent-600);
    --color-error: var(--colors-secondary-500);
    --color-neutral: var(--colors-gray-950);
    --color-ui-soft: var(--colors-gray-50);
    --color-ui: var(--colors-white);
    --spacing-5: 1.3125rem;
    --color-primary-content: var(--colors-primary-content);
    --color-secondary-content: var(--colors-secondary-content);
    --color-accent-content: var(--colors-accent-content);
    --color-info-content: var(--colors-info-content);
    --color-success-content: var(--colors-success-content);
    --color-warning-content: var(--colors-warning-content);
    --color-error-content: var(--colors-error-content);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
      -o-tab-size: 4;
         tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::-moz-placeholder {
    opacity: 1;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::-moz-placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    -webkit-appearance: button;
       -moz-appearance: button;
            appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .diff {
    position: relative;
    display: grid;
    width: 100%;
    overflow: hidden;
    container-type: inline-size;
    grid-template-columns: auto 1fr;
  }
  .modal {
    pointer-events: none;
    position: fixed;
    inset: calc(0.25rem * 0);
    z-index: 80;
    margin: calc(0.25rem * 0);
    display: grid;
    width: 100%;
    height: 100%;
    justify-items: center;
    overflow-x: hidden;
    overflow-y: auto;
    padding: calc(0.25rem * 4);
    opacity: 0%;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .carousel-prev {
    position: absolute;
    inset-block: calc(0.25rem * 0);
    margin-block: auto;
    display: inline-flex;
    height: -moz-max-content;
    height: max-content;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    &.disabled {
      pointer-events: none;
    }
    border-start-start-radius: var(--radius-2xl);
    border-end-start-radius: var(--radius-2xl);
  }
  .carousel-next {
    position: absolute;
    inset-block: calc(0.25rem * 0);
    margin-block: auto;
    display: inline-flex;
    height: -moz-max-content;
    height: max-content;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    &.disabled {
      pointer-events: none;
    }
    border-start-end-radius: var(--radius-2xl);
    border-end-end-radius: var(--radius-2xl);
  }
  .menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: calc(0.25rem * 0.5);
    border-radius: var(--radius-box);
    padding: calc(0.25rem * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --menu-active-fg: var(--color-primary);
    --menu-active-bg: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      --menu-active-bg: color-mix(in oklab, var(--color-primary) 10%, #0000);
    }
    --menu-hover-fg: var(--color-base-content);
    --menu-hover-bg: var(--color-neutral);
    @supports (color: color-mix(in lab, red, red)) {
      --menu-hover-bg: color-mix(in oklab, var(--color-neutral) 10%, #0000);
    }
    :where(li ul) {
      position: relative;
      white-space: nowrap;
    }
    :where(li:not(.dropdown) ul) {
      margin-inline-start: calc(0.25rem * 4);
      padding-inline-start: calc(0.25rem * 2);
      &:before {
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        top: calc(0.25rem * 3);
        bottom: calc(0.25rem * 2.5);
        background-color: var(--color-base-content);
        opacity: 10%;
        width: var(--border);
        content: "";
      }
    }
    :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
      display: none;
    }
    :where(.menu li:empty) {
      background-color: var(--color-base-content);
      opacity: 10%;
      margin: 0.5rem 1rem;
      height: 1px;
    }
    :where(li:not(.menu-title, .tooltip) > *:not(ul, .collapse, .accordion-content, .menu-title, .btn)) {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2.5);
      text-align: start;
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: var(--ease-out);
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 200ms;
      --tw-duration: 200ms;
      --tw-ease: var(--ease-out);
      text-wrap: balance;
    }
    :where(li:not(.menu-title) > *:not(ul, .collapse, .accordion-content, .menu-title, .btn)) {
      display: grid;
      grid-auto-flow: column;
      align-content: flex-start;
      align-items: center;
      gap: calc(0.25rem * 2);
      grid-auto-columns: minmax(auto, max-content) auto max-content;
      -webkit-user-select: none;
         -moz-user-select: none;
              user-select: none;
    }
    :where(li.tooltip) > * {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2.5);
      text-align: start;
    }
    :where(.menu li:not(.menu-title, .menu-disabled)) {
      color: var(--color-base-content);
    }
    :where( .menu li:not(.menu-title, .menu-disabled) > *:not(ul, .collapse, .accordion-content, .dropdown-active, .menu-title) ) {
      &:not(.btn):focus-visible {
        cursor: pointer;
        --tw-outline-style: none;
        outline-style: none;
        color: var(--menu-hover-fg);
        background-color: var(--menu-hover-bg);
      }
      &:hover {
        cursor: pointer;
        --tw-outline-style: none;
        outline-style: none;
        color: var(--menu-hover-fg);
        background-color: var(--menu-hover-bg);
      }
    }
    li:not(.menu-title, .menu-disabled) > :not(ul, .menu-title, .collapse, .accordion-content, .btn).menu-active {
      color: var(--menu-active-fg);
      background-color: var(--menu-active-bg);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
    }
    li.menu-disabled {
      pointer-events: none;
      opacity: 50%;
      webkit-user-select: none;
      -webkit-user-select: none;
         -moz-user-select: none;
              user-select: none;
    }
    :where(& li) {
      position: relative;
      display: flex;
      flex-shrink: 0;
      flex-direction: column;
      flex-wrap: wrap;
      align-items: stretch;
      .badge {
        justify-self: flex-end;
      }
    }
  }
  .input-floating-label {
    pointer-events: none;
    position: absolute;
    inset-inline-start: calc(0.25rem * 0);
    margin-inline-start: calc(0.25rem * 3);
    width: -moz-fit-content;
    width: fit-content;
    overflow: hidden;
    background-color: transparent;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    text-overflow: ellipsis;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
    top: calc(var(--size-field, 0.25rem) * 9.5 / 2);
    translate: 0 -50%;
    transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  }
  .link {
    --link-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --link-color: color-mix(in oklab, var(--color-base-content) 80%, #0000);
    }
    display: inline-block;
    cursor: pointer;
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    text-decoration-line: underline;
    color: var(--link-color);
    &:hover {
      color: var(--link-color);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--link-color) 80%, #000);
      }
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
    &:focus-visible {
      outline: 2px solid currentColor;
      outline-offset: 2px;
    }
    &.disabled, &[disabled], &:disabled {
      pointer-events: none;
      opacity: 50%;
    }
    &:where(.link-hover) {
      text-decoration-line: none;
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            text-decoration-line: underline;
          }
        }
      }
    }
    &:where(.link-animated) {
      position: relative;
      text-decoration-line: none;
      &::before {
        content: var(--tw-content);
        content: var(--tw-content);
        pointer-events: none;
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        bottom: calc(0.25rem * 0);
        height: 1px;
        width: 100%;
        background-color: currentColor;
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--ease-in-out);
        transition-duration: 300ms;
        --tw-duration: 300ms;
        --tw-ease: var(--ease-in-out);
        --tw-content: '';
      }
    }
    &:where(.link-animated)::before {
      transform-origin: 100% 50%;
      transform: scale3d(0, 1, 1);
    }
    &:where(.link-animated):hover::before {
      transform-origin: 0% 50%;
      transform: scale3d(1, 1, 1);
    }
  }
  .textarea-floating {
    .textarea:has(> &) {
      padding: calc(0.25rem * 0);
      :where(.textarea-floating:first-child) > textarea {
        padding-block: calc(0.25rem * 2);
        padding-inline-start: calc(0.25rem * 4);
      }
      :where(.textarea-floating:nth-child(2)) > textarea {
        padding-block: calc(0.25rem * 2);
      }
      :where(.textarea-floating:last-child) > textarea {
        padding-block: calc(0.25rem * 2);
        padding-inline-end: calc(0.25rem * 4);
      }
      :where(.textarea-floating:nth-child(2)) .textarea-floating-label, :where(.textarea-floating:last-child) .textarea-floating-label {
        margin-inline-start: calc(0.25rem * 0);
      }
      & * > textarea {
        width: 100%;
        height: 100%;
        min-height: calc(0.25rem * 20);
      }
    }
    .textarea:has(> &) textarea {
      &::-moz-placeholder {
        color: transparent;
      }
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::-moz-placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
    position: relative;
    display: block;
    width: 100%;
    .textarea {
      &::-moz-placeholder {
        color: transparent;
      }
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::-moz-placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
      field-sizing: content;
      &:has(> textarea[disabled]), &:is(:disabled, [disabled]) {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
        background-color: transparent;
        opacity: 50%;
        &::-moz-placeholder {
          color: transparent;
        }
        &::placeholder {
          color: transparent;
        }
        & ~ .textarea-floating-label {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
          }
        }
      }
    }
    &:not(:has(textarea:-moz-placeholder-shown)) {
      .textarea-floating-label {
        pointer-events: auto;
        top: calc(0.25rem * 0);
        background-color: var(--color-base-100);
        padding-inline: calc(0.25rem * 1);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
        translate: -12.5% calc(-50% - 0.125em);
        scale: 0.75;
      }
    }
    &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
      .textarea-floating-label {
        pointer-events: auto;
        top: calc(0.25rem * 0);
        background-color: var(--color-base-100);
        padding-inline: calc(0.25rem * 1);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
        translate: -12.5% calc(-50% - 0.125em);
        scale: 0.75;
      }
    }
    &:focus-within, &:has(.textarea:focus) {
      .textarea-floating-label {
        --input-color: var(--color-primary);
        color: var(--input-color);
      }
    }
    &:has(.textarea-xs) .textarea-floating-label {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
    &:has(.textarea-sm) .textarea-floating-label {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    &:has(.textarea-md) .textarea-floating-label {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    &:has(.textarea-lg) .textarea-floating-label {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
    &:has(.textarea-xl) .textarea-floating-label {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .input-floating {
    .input:has(> &) input {
      &::-moz-placeholder {
        color: transparent;
      }
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::-moz-placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
    position: relative;
    display: block;
    width: 100%;
    .input {
      &::-moz-placeholder {
        color: transparent;
      }
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::-moz-placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
      &:has(> input[disabled]), &:is(:disabled, [disabled]) {
        border-style: var(--tw-border-style);
        border-width: 1px;
        background-color: transparent;
        opacity: 50%;
        & ~ .input-floating-label {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
          }
        }
      }
    }
    &:not(:has(input:-moz-placeholder-shown)) {
      .input-floating-label {
        pointer-events: auto;
        top: calc(0.25rem * 0);
        background-color: var(--color-base-100);
        padding-inline: calc(0.25rem * 1);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
        translate: -12.5% calc(-50% - 0.125em);
        scale: 0.75;
      }
    }
    &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
      .input-floating-label {
        pointer-events: auto;
        top: calc(0.25rem * 0);
        background-color: var(--color-base-100);
        padding-inline: calc(0.25rem * 1);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
        translate: -12.5% calc(-50% - 0.125em);
        scale: 0.75;
      }
    }
    &:focus-within, &:has(.input:focus) {
      .input-floating-label {
        --input-color: var(--color-primary);
        color: var(--input-color);
      }
    }
    &:has(.input-xs) .input-floating-label {
      margin-inline-start: calc(0.25rem * 2.5);
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
      top: calc(var(--size-field, 0.25rem) * 6 / 2);
    }
    &:has(.input-sm) .input-floating-label {
      margin-inline-start: calc(0.25rem * 2.5);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      top: calc(var(--size-field, 0.25rem) * 7.5 / 2);
    }
    &:has(.input-md) .input-floating-label {
      margin-inline-start: calc(0.25rem * 3);
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      top: calc(var(--size-field, 0.25rem) * 9.5 / 2);
    }
    &:has(.input-lg) .input-floating-label {
      margin-inline-start: calc(0.25rem * 4);
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
      top: calc(var(--size-field, 0.25rem) * 11.5 / 2);
    }
    &:has(.input-xl) .input-floating-label {
      margin-inline-start: calc(0.25rem * 4.5);
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
      top: calc(var(--size-field, 0.25rem) * 14 / 2);
    }
  }
  .range {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    webkit-appearance: none;
    --range-color: var(--color-base-content);
    --range-thumb-border-width: 3px;
    --range-track-height: 8px;
    --range-thumb-size: 16px;
    position: relative;
    width: 100%;
    border-radius: calc(infinity * 1px);
    background-color: transparent;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    height: var(--range-track-height);
    &::-webkit-slider-runnable-track {
      width: 100%;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      height: var(--range-track-height);
    }
    &::-moz-range-track {
      width: 100%;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      height: var(--range-track-height);
    }
    &::-webkit-slider-thumb {
      position: relative;
      top: calc(1/2 * 100%);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
      border-radius: calc(infinity * 1px);
      background-color: var(--color-base-100);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-shadow-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
      -webkit-transition-property: all;
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: var(--ease-in-out);
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 150ms;
      --tw-duration: 150ms;
      --tw-ease: var(--ease-in-out);
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 125%;
          --tw-scale-y: 125%;
          --tw-scale-z: 125%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
        cursor: grab;
        box-shadow: 0 0 0 2px var(--range-color);
      }
      &:active {
        --tw-scale-x: 125%;
        --tw-scale-y: 125%;
        --tw-scale-z: 125%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
        cursor: grabbing;
        box-shadow: 0 0 0 3px var(--range-color);
      }
      -webkit-appearance: none;
              appearance: none;
      box-sizing: border-box;
      webkit-appearance: none;
      color: var(--range-color);
      border-color: var(--range-color);
      border-style: solid;
      border-width: var(--range-thumb-border-width);
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
    }
    &::-moz-range-thumb {
      position: relative;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-base-100);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      -moz-transition-property: all;
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: var(--ease-in-out);
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 150ms;
      --tw-duration: 150ms;
      --tw-ease: var(--ease-in-out);
      top: 50%;
      color: var(--range-color);
      box-sizing: border-box;
      border-color: var(--range-color);
      border-style: solid;
      border-width: var(--range-thumb-border-width);
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
      &:hover {
        cursor: grab;
        box-shadow: 0 0 0 2px var(--range-color);
      }
      &:active {
        cursor: grabbing;
        box-shadow: 0 0 0 3px var(--range-color);
      }
    }
    &:focus {
      outline: none;
    }
    &.disabled {
      pointer-events: none;
      opacity: 50%;
    }
    &:disabled {
      pointer-events: none;
      opacity: 50%;
    }
    &[disabled] {
      pointer-events: none;
      opacity: 50%;
    }
    [dir="rtl"] &::-webkit-slider-thumb {
      transform: scaleX(-1);
    }
    [dir="rtl"] &::-moz-range-thumb {
      transform: scaleX(-1);
    }
    [dir="rtl"] &::-webkit-slider-runnable-track {
      direction: rtl;
    }
    [dir="rtl"] &::-moz-range-track {
      direction: rtl;
    }
  }
  .tab {
    .tabs-lifted > &:focus-visible {
      border-end-end-radius: 0;
      border-end-start-radius: 0;
    }
    position: relative;
    display: inline-flex;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    height: var(--size);
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    --tab-p: 1rem;
    --tab-bg: var(--color-base-100);
    --tab-border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --tab-border-color: color-mix(in oklab, var(--color-base-content), #0000 90%);
    }
    padding-inline: var(--tab-p, 1rem);
    &:focus, &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    &[disabled] {
      pointer-events: none;
      opacity: 40%;
    }
    @media (hover: hover) {
      &[disabled]:hover {
        pointer-events: none;
        opacity: 40%;
      }
    }
    .tabs-bordered > & {
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--color-primary);
            @supports (color: color-mix(in lab, red, red)) {
              border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
            }
          }
        }
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-primary);
          }
        }
      }
      border-style: solid;
      border-bottom-width: calc(var(--border, 1px) + 1px);
    }
    .tabs-lifted > & {
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--color-primary);
            @supports (color: color-mix(in lab, red, red)) {
              border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
            }
          }
        }
      }
      @media (hover:hover) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-primary);
          }
        }
      }
      border: var(--tab-border, 1px) solid transparent;
      border-width: 0 0 var(--tab-border, 1px) 0;
      border-radius: var(--radius-field, 0.375rem);
      border-bottom-color: var(--tab-border-color);
      padding-inline-start: var(--tab-p, 1rem);
      padding-inline-end: var(--tab-p, 1rem);
      padding-top: var(--tab-border, 1px);
    }
    .tabs-lifted > &.tab-active:not([disabled]) {
      background-color: var(--tab-bg);
      border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
      border-color: var(--tab-border-color);
      border-end-start-radius: 0;
      border-end-end-radius: 0;
      padding-inline-start: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
      padding-inline-end: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
      padding-bottom: var(--tab-border, 1px);
      padding-top: 0;
    }
    .tabs-lifted > &.tab-active:not([disabled]):before {
      content: "";
      display: block;
      position: absolute;
      z-index: 1;
      width: calc(100% + var(--radius-field, 0.375rem) * 2);
      height: var(--radius-field, 0.375rem);
      bottom: 0;
      background-size: var(--radius-field, 0.375rem);
      background-repeat: no-repeat;
      background-position: top left, top right;
      --tab-grad: calc(69% - var(--tab-border, 1px));
      --radius-start: radial-gradient(
    circle at top left,
    transparent var(--tab-grad),
    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
  );
      --radius-end: radial-gradient(
    circle at top right,
    transparent var(--tab-grad),
    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
  );
      background-image: var(--radius-start), var(--radius-end);
    }
    .tabs-lifted > &.tab-active:not([disabled]):first-child:before {
      background-image: var(--radius-end);
      background-position: top right;
    }
    .tabs-lifted > &.tab-active:not([disabled]):last-child:before {
      background-image: var(--radius-start);
      background-position: top left;
    }
    [dir="rtl"] .tabs-lifted > &.tab-active:not([disabled]):first-child:before {
      background-image: var(--radius-start);
      background-position: top left;
    }
    [dir="rtl"] .tabs-lifted > &.tab-active:not([disabled]):last-child:before {
      background-image: var(--radius-end);
      background-position: top right;
    }
    .tabs-xl :where(&) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
      --size: calc(var(--size-field, 0.25rem) * 14);
      --tab-p: 1.5rem;
    }
    .tabs-lg :where(&) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
      --size: calc(var(--size-field, 0.25rem) * 11.5);
      --tab-p: 1.25rem;
    }
    .tabs-md :where(&) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      --size: calc(var(--size-field, 0.25rem) * 9.5);
      --tab-p: 1rem;
    }
    .tabs-sm :where(&) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      --size: calc(var(--size-field, 0.25rem) * 7.5);
      --tab-p: 0.75rem;
    }
    .tabs-xs :where(&) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      --size: calc(var(--size-field, 0.25rem) * 6);
      --tab-p: 0.5rem;
    }
  }
  .btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 2);
    text-align: center;
    vertical-align: middle;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    text-decoration-line: none;
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    @media (prefers-reduced-motion: reduce) {
      transition-property: none;
    }
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    height: var(--size);
    outline-color: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, var(--color-base-100));
    }
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.96, 1.03);
    transition-duration: 0.25s;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--btn-noise);
    border: var(--border) solid var(--btn-border);
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 8%)) inset, var(--btn-shadow);
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    --btn-bg: var(--btn-color, var(--color-neutral));
    --btn-fg: var(--color-neutral-content);
    --btn-p: 1rem;
    --btn-border: var(--btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
    }
    --btn-shadow: 0px 1px 3px 0px var(--color-base-300),
    0px 1px 2px -1px var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-shadow: 0px 1px 3px 0px color-mix(in oklab, var(--color-base-300) 40%, #0000),
    0px 1px 2px -1px color-mix(in oklab, var(--color-base-300) 40%, #0000);
    }
    --btn-noise: var(--fx-noise);
    @media (hover: hover) {
      &:hover {
        --btn-bg: var(--btn-color, var(--color-neutral));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 90%, #000);
        }
      }
    }
    &:active:hover:not(.btn-active), &:active:focus:not(.btn-active) {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
      transition-property: transform, translate, scale, rotate;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: ease-out;
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 300ms;
      --tw-duration: 300ms;
    }
    &:focus-visible {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)), #000 10%);
      }
      outline-width: 2px;
      outline-style: solid;
    }
    &:is(:disabled, [disabled], .btn-disabled) {
      pointer-events: none;
      opacity: 50%;
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:is(input[type="checkbox"], input[type="radio"]) {
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      &::after {
        content: attr(aria-label);
      }
      &:checked {
        background: var(--color-primary);
        color: var(--color-primary-content);
        outline-color: var(--color-primary);
        --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
        isolation: isolate;
      }
    }
  }
  .pin-input {
    border-radius: var(--radius-field);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
    }
    background-color: var(--color-base-100);
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    &::-moz-placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
      }
    }
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
      }
    }
    height: var(--size);
    width: var(--size);
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &:hover:not(:focus, :focus-within) {
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
    }
    &:focus, &:focus-within {
      border-color: var(--color-primary);
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-shadow-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--color-primary) 30%, #0000);
      }
      outline: 1px solid var(--color-primary);
      isolation: isolate;
    }
    &.disabled, &:disabled, &[disabled] {
      pointer-events: none;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
      }
      background-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
      }
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
      &::-moz-placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
      }
    }
  }
  .dropdown-item {
    clear: both;
    display: flex;
    width: 100%;
    align-items: center;
    -moz-column-gap: calc(0.25rem * 2);
         column-gap: calc(0.25rem * 2);
    border-radius: var(--radius-field);
    background-color: transparent;
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 2.5);
    color: var(--color-base-content);
    text-decoration-line: none;
    text-decoration-thickness: 0px;
    text-align: inherit;
    &:hover:not(.dropdown-active), &:focus:not(.dropdown-active), &:focus-within:not(.dropdown-active), &:focus-visible:not(.dropdown-active) {
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
    }
    &.dropdown-disabled, &:disabled, &[disabled] {
      pointer-events: none;
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 5%, transparent);
      }
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
  }
  .loading {
    pointer-events: none;
    display: inline-block;
    aspect-ratio: 1 / 1;
    background-color: currentColor;
    vertical-align: middle;
    width: calc(var(--size-selector, 0.25rem) * 6);
    -webkit-mask-size: 100%;
            mask-size: 100%;
    -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat;
    -webkit-mask-position: center;
            mask-position: center;
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
            mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
  }
  .modal-content {
    pointer-events: auto;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-lg);
    background-color: var(--color-base-100);
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
    max-height: calc(100vh - 2rem);
    overscroll-behavior: contain;
  }
  .accordion-toggle {
    width: 100%;
    cursor: pointer;
    padding-inline: calc(0.25rem * 5);
    padding-block: calc(0.25rem * 4);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);
    &:disabled {
      pointer-events: none;
      opacity: 50%;
    }
  }
  .disabled {
    .range& {
      pointer-events: none;
      opacity: 50%;
    }
  }
  .disabled {
    .carousel-prev& {
      pointer-events: none;
    }
    .carousel-next& {
      pointer-events: none;
    }
  }
  .pointer-events-auto {
    pointer-events: auto;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .tooltip-content {
    visibility: hidden;
    position: absolute;
    display: inline-block;
    padding: calc(0.25rem * 2);
    opacity: 0%;
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    width: -moz-max-content;
    width: max-content;
    z-index: 20;
  }
  .collapse {
    visibility: collapse;
  }
  .collapse {
    &:not(td):not(tr):not(colgroup) {
      visibility: visible;
    }
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .indicator {
    position: relative;
    display: inline-flex;
    width: -moz-max-content;
    width: max-content;
    :where(.indicator-item) {
      z-index: 1;
      position: absolute;
      white-space: nowrap;
      top: var(--indicator-t, 0);
      bottom: var(--indicator-b, auto);
      inset-inline-start: var(--indicator-s, auto);
      inset-inline-end: var(--indicator-e, 0);
      translate: var(--indicator-x, 50%) var(--indicator-y, -50%);
      [dir="rtl"] & {
        --indicator-x: -50%;
      }
    }
  }
  .chat {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    -moz-column-gap: calc(0.25rem * 4);
         column-gap: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 1);
    .chat-avatar {
      grid-row: span 2 / span 2;
      align-self: flex-end;
    }
    .chat-header {
      grid-row-start: 1;
      margin-bottom: calc(0.25rem * 1);
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
    .chat-footer {
      grid-row-start: 3;
      margin-top: calc(0.25rem * 1);
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
    .chat-bubble {
      position: relative;
      display: block;
      width: -moz-fit-content;
      width: fit-content;
      border-radius: var(--radius-box);
      padding: calc(0.25rem * 3);
      max-width: 90%;
      min-height: 2.75rem;
      min-width: 2.75rem;
      &:before {
        position: absolute;
        bottom: calc(0.25rem * 0);
        width: calc(0.25rem * 4);
        height: calc(0.25rem * 4);
        background-color: inherit;
        content: "";
        -webkit-mask-size: contain;
                mask-size: contain;
        -webkit-mask-repeat: no-repeat;
                mask-repeat: no-repeat;
        -webkit-mask-position: center;
                mask-position: center;
      }
    }
    &.chat-receiver {
      place-items: start;
      grid-template-columns: auto 1fr;
      .chat-header {
        grid-column-start: 2;
      }
      .chat-footer {
        grid-column-start: 2;
      }
      .chat-avatar {
        grid-column-start: 1;
      }
      .chat-bubble {
        grid-column-start: 2;
        border-end-start-radius: 0;
        background-color: var(--color-base-100);
        color: var(--color-base-content);
        &:before {
          inset-inline-start: -0.749rem;
          -webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
                  mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
        }
        [dir="rtl"] &:before {
          -webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
                  mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
        }
      }
    }
    &.chat-sender {
      place-items: end;
      grid-template-columns: 1fr auto;
      .chat-header {
        grid-column-start: 1;
      }
      .chat-footer {
        grid-column-start: 1;
      }
      .chat-avatar {
        grid-column-start: 2;
      }
      .chat-bubble {
        grid-column-start: 1;
        border-end-end-radius: 0;
        background-color: var(--color-primary);
        text-align: end;
        color: var(--color-primary-content);
        &:before {
          inset-inline-start: 99.9%;
          -webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
                  mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
        }
        [dir="rtl"] &:before {
          -webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
                  mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
        }
      }
    }
  }
  .switch {
    border: var(--border) solid #0000;
    color: var(--color-base-100);
    position: relative;
    display: inline-grid;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    @media print {
      outline: .25rem solid;
    }
    grid-template-columns: 0fr 1fr 1fr;
    padding: var(--switch-p);
    box-shadow: 0 1px currentColor inset;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
    }
    background-color: var(--input-color);
    --radius-selector-max: calc(var(--radius-selector) + var(--radius-selector) + var(--radius-selector));
    border-radius: calc( var(--radius-selector) + min(var(--switch-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) );
    transition: color 0.3s, grid-template-columns 0.2s;
    --input-color: var(--color-neutral);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-neutral) 22%, #0000);
    }
    --switch-p: 0.1875rem;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: calc((var(--size) * 2) - (var(--border) + var(--switch-p)) * 2);
    height: var(--size);
    &:before {
      position: relative;
      inset-inline-start: calc(0.25rem * 0);
      grid-column-start: 2;
      grid-row-start: 1;
      aspect-ratio: 1 / 1;
      height: 100%;
      border-radius: var(--radius-selector);
      background-color: currentColor;
      @media print {
        outline: .25rem solid;
      }
      @media print {
        outline-offset: -1rem;
      }
      translate: 0;
      --tw-content: "";
      content: var(--tw-content);
      transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;
      box-shadow: 0 -1px oklch(59.99% 0 0 / calc(var(--depth) * 0.08)) inset, 0 8px 0 -4px oklch(59.99% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px 2px 0 oklch(0% 0 0 / 0.2);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
      @media (forced-colors: active) {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
        outline-offset: calc(1px * -1);
      }
    }
    &:focus-visible, &:has(:focus-visible) {
      outline: 2px solid var(--input-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        outline: 2px solid color-mix(in oklab, var(--input-color, var(--color-neutral)) 30%, #0000);
      }
      outline-offset: 0px;
    }
    &:checked, &[aria-checked="true"], &:has(> input:checked) {
      grid-template-columns: 1fr 1fr 0fr;
      --input-color: var(--color-neutral);
      background-color: var(--input-color);
      &:before {
        background-color: currentColor;
        @starting-style {
          opacity: 0;
        }
      }
    }
    &:indeterminate {
      grid-template-columns: 0.5fr 1fr 0.5fr;
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 50%;
      &:before {
        background-color: transparent;
      }
    }
  }
  .table {
    position: relative;
    width: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    border-radius: var(--radius-box);
    text-align: left;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      text-align: right;
    }
    tr.row-hover {
      &, &:nth-child(even) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-base-200);
            @supports (color: color-mix(in lab, red, red)) {
              background-color: color-mix(in oklab, var(--color-base-200) 80%, transparent);
            }
          }
        }
      }
    }
    tr.row-active {
      &, &:nth-child(even) {
        background-color: var(--color-base-200);
      }
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 5);
      padding-block: calc(0.25rem * 3);
      vertical-align: middle;
      text-wrap: nowrap;
    }
    :where(thead, tfoot) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      white-space: nowrap;
      color: var(--color-base-content);
      text-transform: uppercase;
      letter-spacing: 1px;
    }
    :where(th) {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
    :where(.table-pin-rows thead tr) {
      position: sticky;
      top: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.table-pin-rows tfoot tr) {
      position: sticky;
      bottom: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.table-pin-cols tr th) {
      position: sticky;
      right: calc(0.25rem * 0);
      left: calc(0.25rem * 0);
      background-color: var(--color-base-100);
    }
    :where(thead tr) {
      border-bottom: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 25%, #0000);
      }
    }
    :where(tbody tr:not(:last-child)) {
      border-bottom: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 10%, #0000);
      }
    }
    :where(tfoot) {
      border-top: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 25%, #0000);
      }
    }
  }
  .avatar-away-top {
    &:before {
      content: "";
      position: absolute;
      z-index: 10;
      display: block;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-warning);
      outline-style: var(--tw-outline-style);
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-width: 2px;
      outline-color: var(--color-base-100);
      width: 20%;
      height: 20%;
      top: 3%;
      right: 3%;
    }
  }
  .avatar-busy-top {
    &:before {
      content: "";
      position: absolute;
      z-index: 10;
      display: block;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-error);
      outline-style: var(--tw-outline-style);
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-width: 2px;
      outline-color: var(--color-base-100);
      width: 20%;
      height: 20%;
      top: 3%;
      right: 3%;
    }
  }
  .avatar-offline-top {
    &:before {
      content: "";
      position: absolute;
      z-index: 10;
      display: block;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-base-200);
      outline-style: var(--tw-outline-style);
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-width: 2px;
      outline-color: var(--color-base-100);
      width: 20%;
      height: 20%;
      top: 3%;
      right: 3%;
    }
  }
  .avatar-online-top {
    &:before {
      content: "";
      position: absolute;
      z-index: 10;
      display: block;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-success);
      outline-style: var(--tw-outline-style);
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-width: 2px;
      outline-color: var(--color-base-100);
      width: 20%;
      height: 20%;
      top: 3%;
      right: 3%;
    }
  }
  .avatar-away-bottom {
    &:before {
      content: "";
      position: absolute;
      z-index: 10;
      display: block;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-warning);
      outline-style: var(--tw-outline-style);
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-width: 2px;
      outline-color: var(--color-base-100);
      width: 20%;
      height: 20%;
      bottom: 3%;
      right: 3%;
    }
  }
  .avatar-busy-bottom {
    &:before {
      content: "";
      position: absolute;
      z-index: 10;
      display: block;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-error);
      outline-style: var(--tw-outline-style);
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-width: 2px;
      outline-color: var(--color-base-100);
      width: 20%;
      height: 20%;
      bottom: 3%;
      right: 3%;
    }
  }
  .avatar-offline-bottom {
    &:before {
      content: "";
      position: absolute;
      z-index: 10;
      display: block;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-base-200);
      outline-style: var(--tw-outline-style);
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-width: 2px;
      outline-color: var(--color-base-100);
      width: 20%;
      height: 20%;
      bottom: 3%;
      right: 3%;
    }
  }
  .avatar-online-bottom {
    &:before {
      content: "";
      position: absolute;
      z-index: 10;
      display: block;
      border-radius: calc(infinity * 1px);
      background-color: var(--color-success);
      outline-style: var(--tw-outline-style);
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-width: 2px;
      outline-color: var(--color-base-100);
      width: 20%;
      height: 20%;
      bottom: 3%;
      right: 3%;
    }
  }
  .select {
    position: relative;
    display: inline-flex;
    width: 100%;
    flex-shrink: 1;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 3);
    padding-inline-end: calc(0.25rem * 10);
    vertical-align: middle;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    height: var(--size);
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'><path fill='none' stroke='%239293AE' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");
    background-size: 1.3em;
    background-position: calc(100% - 0.5rem) center;
    background-repeat: no-repeat;
    touch-action: manipulation;
    text-overflow: ellipsis;
    border: var(--border) solid #0000;
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &:hover:not(:focus, :focus-within), &:has(:hover):not(:focus, :focus-within) {
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
    }
    [dir="rtl"] & {
      background-position: calc(0% + 1.3em) center;
    }
    select {
      margin-inline-end: calc(0.25rem * -10);
      height: 100%;
      width: calc(100% + 2.75rem);
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      padding-inline-start: calc(0.25rem * 3);
      padding-inline-end: calc(0.25rem * 10);
      background-color: transparent;
      border-style: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    &[multiple] {
      background-image: none;
    }
    &:focus, &:focus-within {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --input-color: var(--color-primary);
      --tw-shadow-color: var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
      }
      outline: 1px solid var(--input-color);
      border-color: var(--input-color);
      isolation: isolate;
    }
    &:has(> select[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-style: var(--tw-border-style);
      border-width: 0px;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
      &::-moz-placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
      }
    }
    &:has(> select[disabled]) > select[disabled] {
      cursor: not-allowed;
    }
    .input > & {
      height: auto;
      border-style: var(--tw-border-style);
      border-width: 0px;
      &:focus, &:focus-within {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        outline-style: var(--tw-outline-style);
        outline-width: 0px;
      }
    }
    &:has(> .select-floating) select {
      &::-moz-placeholder {
        color: transparent;
      }
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::-moz-placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
  }
  .advance-select-toggle {
    position: relative;
    display: inline-flex;
    width: 100%;
    flex-shrink: 1;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    align-items: center;
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 3);
    padding-inline-end: calc(0.25rem * 10);
    vertical-align: middle;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    height: var(--size);
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    text-overflow: ellipsis;
    border: var(--border) solid #0000;
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &:focus, &:focus-within {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --input-color: var(--color-primary);
      --tw-shadow-color: var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
      }
      outline: 1px solid var(--input-color);
      border-color: var(--input-color);
      isolation: isolate;
    }
    &:focus-visible {
      outline: unset;
    }
  }
  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-box);
    --tw-border-style: solid;
    border-style: solid;
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
    background-color: var(--color-base-100);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
    --tw-outline-style: none;
    outline-style: none;
    box-shadow: var( --card-shadow, 0 1px 3px 0 var(--color-base-300), 0 1px 2px -1px var(--color-base-300) );
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: var( --card-shadow, 0 1px 3px 0 color-mix(in oklab, var(--color-base-300) 20%, #0000), 0 1px 2px -1px color-mix(in oklab, var(--color-base-300) 20%, #0000) );
    }
    border-width: var(--card-border, 0px);
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    :where(figure:first-child) {
      overflow: hidden;
      border-start-start-radius: inherit;
      border-start-end-radius: inherit;
      border-end-start-radius: unset;
      border-end-end-radius: unset;
    }
    :where(figure:last-child) {
      overflow: hidden;
      border-start-start-radius: unset;
      border-start-end-radius: unset;
      border-end-start-radius: inherit;
      border-end-end-radius: inherit;
    }
    &:where(.card-border) {
      border: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border: var(--border) solid color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
    }
    &.image-full {
      display: grid;
      &:before {
        position: relative;
        grid-column-start: 1;
        grid-row-start: 1;
        border-radius: var(--radius-box);
        background-color: var(--color-neutral);
        opacity: 75%;
        content: "";
      }
      > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
      > .card-body {
        position: relative;
        color: var(--color-neutral-content);
      }
      :where(figure) {
        overflow: hidden;
        border-radius: inherit;
      }
      > figure img {
        height: 100%;
        -o-object-fit: cover;
           object-fit: cover;
      }
    }
    figure {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
      cursor: pointer;
      -webkit-user-select: none;
         -moz-user-select: none;
              user-select: none;
    }
    &:has(> :checked) {
      outline: 2px solid currentColor;
    }
    & .card-alert {
      border-radius: 0;
      &:first-child {
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
      }
      &:last-child {
        border-bottom-right-radius: var(--radius-box);
        border-bottom-left-radius: var(--radius-box);
      }
    }
  }
  .swap {
    position: relative;
    display: inline-grid;
    cursor: pointer;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    input {
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      border: none;
    }
    > * {
      grid-column-start: 1;
      grid-row-start: 1;
      transition-property: transform, rotate, opacity;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
    .swap-on, .swap-indeterminate, input:indeterminate ~ .swap-on {
      opacity: 0%;
    }
    input:is(:checked, :indeterminate) {
      & ~ .swap-off {
        opacity: 0%;
      }
    }
    input:checked ~ .swap-on, input:indeterminate ~ .swap-indeterminate {
      opacity: 100%;
      backface-visibility: visible;
    }
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .select-floating {
    .select:has(> &) select {
      &::-moz-placeholder {
        color: transparent;
      }
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::-moz-placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
    position: relative;
    display: block;
    width: 100%;
    .select {
      &::-moz-placeholder {
        color: transparent;
      }
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::-moz-placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
      &:has(> select[disabled]), &:is(:disabled, [disabled]) {
        border-style: var(--tw-border-style);
        border-width: 1px;
        background-color: transparent;
        opacity: 50%;
        & ~ .select-floating-label {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
          }
        }
      }
    }
    &:focus-within, &:has(.select:focus) {
      .select-floating-label {
        --input-color: var(--color-primary);
        color: var(--input-color);
      }
    }
    &:has(.select-xs) .select-floating-label {
      margin-inline-start: calc(0.25rem * 2.5);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    &:has(.select-sm) .select-floating-label {
      margin-inline-start: calc(0.25rem * 2.5);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    &:has(.select-md) .select-floating-label {
      margin-inline-start: calc(0.25rem * 3);
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    &:has(.select-lg) .select-floating-label {
      margin-inline-start: calc(0.25rem * 4);
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
    &:has(.select-xl) .select-floating-label {
      margin-inline-start: calc(0.25rem * 4.5);
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .avatar {
    position: relative;
    display: inline-flex;
    vertical-align: middle;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    & > div {
      display: block;
      aspect-ratio: 1 / 1;
      overflow: hidden;
    }
    & > span {
      display: block;
      aspect-ratio: 1 / 1;
      overflow: hidden;
    }
    :where(&) img {
      height: 100%;
      width: 100%;
      -o-object-fit: cover;
         object-fit: cover;
    }
  }
  .checkbox {
    position: relative;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border-radius: var(--radius-selector);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    color: var(--color-neutral-content);
    border: var(--border) solid var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    --input-color: var(--color-neutral);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
    transition: background-color 0.2s, box-shadow 0.2s;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    &:before {
      --tw-content: "";
      content: var(--tw-content);
      display: block;
      width: 100%;
      height: 100%;
      rotate: 45deg;
      background-color: currentColor;
      opacity: 0%;
      transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
      transition-delay: 0.1s;
      clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
      box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      font-size: 1rem;
      line-height: 0.75;
    }
    &:focus-visible {
      outline: 2px solid var(--input-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        outline: 2px solid color-mix(in oklab, var(--input-color, var(--color-neutral)) 30%, #0000);
      }
      outline-offset: 0px;
    }
    &:checked, &[aria-checked="true"] {
      background-color: var(--input-color, #0000);
      border-color: var(--input-color, #0000);
      box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 2px 0 var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 2px 0 color-mix(in oklab, var(--color-base-300) 20%, #0000);
      }
      &:before {
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
        opacity: 100%;
      }
      @media (forced-colors: active) {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
      @media print {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
    }
    &:indeterminate {
      background-color: var(--color-neutral);
      &:before {
        rotate: 0deg;
        opacity: 100%;
        translate: 0 -35%;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 50%;
    }
  }
  .radio {
    position: relative;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border-radius: calc(infinity * 1px);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    border: var(--border) solid var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    color: var(--input-color, var(--color-neutral));
    &:before {
      display: block;
      width: 100%;
      height: 100%;
      border-radius: calc(infinity * 1px);
      --tw-content: "";
      content: var(--tw-content);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
    }
    &:focus-visible {
      outline: 2px solid var(--input-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        outline: 2px solid color-mix(in oklab, var(--input-color, var(--color-neutral)) 30%, #0000);
      }
      outline-offset: 0px;
    }
    &:checked, &[aria-checked="true"] {
      animation: radio 0.2s ease-out;
      border-color: currentColor;
      background-color: var(--color-base-100);
      box-shadow: 0 1px 2px 0 var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px 2px 0 color-mix(in oklab, var(--color-base-300) 30%, #0000);
      }
      &:before {
        background-color: currentColor;
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
      }
      @media (forced-colors: active) {
        &:before {
          outline-style: var(--tw-outline-style);
          outline-width: 1px;
          outline-offset: calc(1px * -1);
        }
      }
      @media print {
        &:before {
          outline: 0.25rem solid;
          outline-offset: -1rem;
        }
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 50%;
    }
  }
  .modal-header {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: calc(0.25rem * 6);
    :where(&) + .modal-body {
      padding-top: 0;
    }
  }
  .carousel {
    position: relative;
    width: 100%;
    overflow: hidden;
    border-radius: var(--radius-2xl);
  }
  .alert {
    position: relative;
    width: 100%;
    border-radius: var(--radius-box);
    padding: calc(0.25rem * 4);
    color: var(--color-neutral-content);
    text-align: start;
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    background-color: var(--alert-bg);
    border: var(--border) solid var(--alert-border);
    box-shadow: 0 0.1875rem 0 -0.125rem oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset;
    --alert-bg: var(--alert-color, var(--color-neutral));
    --alert-border: var(--alert-color, var(--color-neutral));
    &.alert-outline {
      color: var(--alert-color, var(--color-neutral));
      --alert-bg: transparent;
      box-shadow: none;
      background-image: none;
    }
    &.alert-soft {
      color: var(--alert-color, var(--color-neutral));
      --alert-bg: var(--alert-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --alert-bg: color-mix(in oklab, var(--alert-color, var(--color-neutral)) 10%, var(--color-base-100));
      }
      box-shadow: none;
      background-image: none;
    }
  }
  .\!sticky {
    position: sticky !important;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .-inset-1 {
    inset: calc(var(--spacing) * -1);
  }
  .-inset-4 {
    inset: calc(var(--spacing) * -4);
  }
  .-inset-16 {
    inset: calc(var(--spacing) * -16);
  }
  .-inset-20 {
    inset: calc(var(--spacing) * -20);
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-4 {
    inset: calc(var(--spacing) * 4);
  }
  .inset-20 {
    inset: calc(var(--spacing) * 20);
  }
  .inset-64 {
    inset: calc(var(--spacing) * 64);
  }
  .inset-\[3px\] {
    inset: 3px;
  }
  .-inset-x-14 {
    inset-inline: calc(var(--spacing) * -14);
  }
  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }
  .inset-x-2 {
    inset-inline: calc(var(--spacing) * 2);
  }
  .inset-x-4 {
    inset-inline: calc(var(--spacing) * 4);
  }
  .inset-x-\[1px\] {
    inset-inline: 1px;
  }
  .-inset-y-0 {
    inset-block: calc(var(--spacing) * -0);
  }
  .-inset-y-4 {
    inset-block: calc(var(--spacing) * -4);
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .inset-y-1 {
    inset-block: calc(var(--spacing) * 1);
  }
  .inset-y-4 {
    inset-block: calc(var(--spacing) * 4);
  }
  .-start-3 {
    inset-inline-start: calc(var(--spacing) * -3);
  }
  .start-0 {
    inset-inline-start: calc(var(--spacing) * 0);
  }
  .end-0 {
    inset-inline-end: calc(var(--spacing) * 0);
  }
  .end-2 {
    inset-inline-end: calc(var(--spacing) * 2);
  }
  .end-3 {
    inset-inline-end: calc(var(--spacing) * 3);
  }
  .-top-1\/2 {
    top: calc(calc(1/2 * 100%) * -1);
  }
  .-top-3 {
    top: calc(var(--spacing) * -3);
  }
  .-top-8 {
    top: calc(var(--spacing) * -8);
  }
  .-top-12 {
    top: calc(var(--spacing) * -12);
  }
  .-top-14 {
    top: calc(var(--spacing) * -14);
  }
  .-top-\[6\.5px\] {
    top: calc(6.5px * -1);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1 {
    top: calc(var(--spacing) * 1);
  }
  .top-1\.5 {
    top: calc(var(--spacing) * 1.5);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-2 {
    top: calc(var(--spacing) * 2);
  }
  .top-3 {
    top: calc(var(--spacing) * 3);
  }
  .top-3\.5 {
    top: calc(var(--spacing) * 3.5);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-6 {
    top: calc(var(--spacing) * 6);
  }
  .top-10 {
    top: calc(var(--spacing) * 10);
  }
  .top-12 {
    top: calc(var(--spacing) * 12);
  }
  .top-16 {
    top: calc(var(--spacing) * 16);
  }
  .top-20 {
    top: calc(var(--spacing) * 20);
  }
  .top-24 {
    top: calc(var(--spacing) * 24);
  }
  .top-28 {
    top: calc(var(--spacing) * 28);
  }
  .top-\[--fx-popper-placement-y\] {
    top: --fx-popper-placement-y;
  }
  .top-\[1px\] {
    top: 1px;
  }
  .top-\[3\.3rem\] {
    top: 3.3rem;
  }
  .top-\[4\.1rem\] {
    top: 4.1rem;
  }
  .top-\[4\.5rem\] {
    top: 4.5rem;
  }
  .top-\[5\.78rem\] {
    top: 5.78rem;
  }
  .top-\[50\%\] {
    top: 50%;
  }
  .top-\[60\%\] {
    top: 60%;
  }
  .top-auto {
    top: auto;
  }
  .top-full {
    top: 100%;
  }
  .-right-2 {
    right: calc(var(--spacing) * -2);
  }
  .-right-12 {
    right: calc(var(--spacing) * -12);
  }
  .-right-20 {
    right: calc(var(--spacing) * -20);
  }
  .-right-\[6\.5px\] {
    right: calc(6.5px * -1);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-1 {
    right: calc(var(--spacing) * 1);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-2\.5 {
    right: calc(var(--spacing) * 2.5);
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .right-5 {
    right: var(--spacing-5);
  }
  .right-6 {
    right: calc(var(--spacing) * 6);
  }
  .right-\[-71px\] {
    right: -71px;
  }
  .-bottom-1 {
    bottom: calc(var(--spacing) * -1);
  }
  .-bottom-12 {
    bottom: calc(var(--spacing) * -12);
  }
  .-bottom-14 {
    bottom: calc(var(--spacing) * -14);
  }
  .-bottom-\[6\.5px\] {
    bottom: calc(6.5px * -1);
  }
  .-bottom-px {
    bottom: -1px;
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }
  .bottom-6 {
    bottom: calc(var(--spacing) * 6);
  }
  .bottom-12 {
    bottom: calc(var(--spacing) * 12);
  }
  .bottom-20 {
    bottom: calc(var(--spacing) * 20);
  }
  .bottom-full {
    bottom: 100%;
  }
  .-left-2 {
    left: calc(var(--spacing) * -2);
  }
  .-left-6 {
    left: calc(var(--spacing) * -6);
  }
  .-left-12 {
    left: calc(var(--spacing) * -12);
  }
  .-left-20 {
    left: calc(var(--spacing) * -20);
  }
  .-left-\[6\.5px\] {
    left: calc(6.5px * -1);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1 {
    left: calc(var(--spacing) * 1);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .left-2 {
    left: calc(var(--spacing) * 2);
  }
  .left-3 {
    left: calc(var(--spacing) * 3);
  }
  .left-4 {
    left: calc(var(--spacing) * 4);
  }
  .left-5 {
    left: var(--spacing-5);
  }
  .left-\[--clip-percentage\] {
    left: --clip-percentage;
  }
  .left-\[--fx-popper-placement-x\] {
    left: --fx-popper-placement-x;
  }
  .left-\[50\%\] {
    left: 50%;
  }
  .left-\[61\.2\%\] {
    left: 61.2%;
  }
  .input {
    display: inline-flex;
    width: 100%;
    flex-shrink: 1;
    cursor: text;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 3);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
    &::-moz-placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    border: var(--border) solid #0000;
    height: var(--size);
    touch-action: manipulation;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &:hover:not(:focus, :focus-within), &:has(:hover):not(:focus, :focus-within) {
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
    }
    &:where(input) {
      display: inline-block;
    }
    :where(input:not([type="checkbox"]):not([type="radio"])) {
      display: inline-block;
      height: 100%;
      width: 100%;
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within, &:focus-visible {
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    &:focus, &:focus-within {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --input-color: var(--color-primary);
      --tw-shadow-color: var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
      }
      outline: 1px solid var(--input-color);
      isolation: isolate;
    }
    &:has(> input[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-style: var(--tw-border-style);
      border-width: 0px;
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
      box-shadow: none;
    }
    &:has(> input[disabled]) > input[disabled] {
      cursor: not-allowed;
    }
    &::-webkit-date-and-time-value {
      text-align: inherit;
    }
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
    &:has(> .input-floating) input {
      &::-moz-placeholder {
        color: transparent;
      }
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::-moz-placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
  }
  .textarea {
    display: inline-flex;
    min-height: calc(0.25rem * 20);
    width: 100%;
    flex-shrink: 1;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    &::-moz-placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
        }
      }
    }
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    border: var(--border) solid #0000;
    border-color: var(--input-color);
    touch-action: manipulation;
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
    }
    :where(textarea) {
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
      }
    }
    &:focus, &:focus-within {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --input-color: var(--color-primary);
      --tw-shadow-color: var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
      }
      outline: 1px solid var(--input-color);
      border-color: var(--input-color);
      isolation: isolate;
    }
    &:has(> textarea[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      &::-moz-placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
    }
    &:has(> textarea[disabled]) > textarea[disabled] {
      cursor: not-allowed;
    }
    &:has(> textarea) {
      padding: calc(0.25rem * 0);
      textarea {
        height: auto;
        min-height: calc(0.25rem * 20);
        width: 100%;
        &:first-child {
          padding-block: calc(0.25rem * 2);
          padding-inline-start: calc(0.25rem * 4);
        }
        &:nth-child(2) {
          padding-block: calc(0.25rem * 2);
        }
        &:last-child {
          padding-block: calc(0.25rem * 2);
          padding-inline-end: calc(0.25rem * 4);
        }
      }
    }
    &:has(> .textarea-floating) {
      padding: calc(0.25rem * 0);
      :where(.textarea-floating:first-child) > textarea {
        padding-block: calc(0.25rem * 2);
        padding-inline-start: calc(0.25rem * 4);
      }
      :where(.textarea-floating:nth-child(2)) > textarea {
        padding-block: calc(0.25rem * 2);
      }
      :where(.textarea-floating:last-child) > textarea {
        padding-block: calc(0.25rem * 2);
        padding-inline-end: calc(0.25rem * 4);
      }
      :where(.textarea-floating:nth-child(2)) .textarea-floating-label, :where(.textarea-floating:last-child) .textarea-floating-label {
        margin-inline-start: calc(0.25rem * 0);
      }
      & * > textarea {
        width: 100%;
        height: 100%;
        min-height: calc(0.25rem * 20);
      }
    }
    &:has(> .textarea-floating) textarea {
      &::-moz-placeholder {
        color: transparent;
      }
      &::placeholder {
        color: transparent;
      }
      &:focus {
        &::-moz-placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
          }
        }
      }
    }
  }
  .btn-active {
    --btn-bg: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 90%, #000);
    }
    isolation: isolate;
    .btn-soft& {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
      }
    }
    .btn-outline& {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
    .btn-text& {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
    .btn-gradient& {
      --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
    0px 2px 4px -2px var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
    0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
      }
      background-position: 99% center;
    }
  }
  .isolate {
    isolation: isolate;
  }
  .stack {
    display: inline-grid;
    place-items: center;
    align-items: flex-end;
    & > * {
      grid-column-start: 1;
      grid-row-start: 1;
      height: 100%;
      width: 100%;
      opacity: 60%;
      transform: translateY(14%) scale(0.9);
      z-index: 1;
    }
    & > *:nth-child(2) {
      opacity: 80%;
      transform: translateY(7%) scale(0.95);
      z-index: 2;
    }
    & > *:nth-child(1) {
      opacity: 100%;
      transform: translateY(0) scale(1) translateX(0);
      z-index: 3;
    }
  }
  .dropdown-menu {
    z-index: 10;
    margin-top: calc(0.25rem * 2);
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(0.25rem * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(0.25rem * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
    border-radius: var(--radius-box);
    background-color: var(--color-base-100);
    padding: calc(0.25rem * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    text-wrap: nowrap;
    opacity: 0%;
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
    transition-property: opacity,margin;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 300ms;
    --tw-duration: 300ms;
  }
  .advance-select-menu {
    z-index: 10;
    width: 100%;
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(0.25rem * 0.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(0.25rem * 0.5) * calc(1 - var(--tw-space-y-reverse)));
    }
    border-radius: var(--radius-box);
    background-color: var(--color-base-100);
    background-image: none;
    padding: calc(0.25rem * 2);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .pull-up {
    .avatar {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-timing-function: var(--ease-in);
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      transition-duration: 250ms;
      --tw-duration: 250ms;
      --tw-ease: var(--ease-in);
      &:hover {
        z-index: 30;
        --tw-translate-y: calc(0.25rem * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
        transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
        border-radius: calc(infinity * 1px);
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        --tw-shadow-color: var(--color-base-300);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .stack-end {
    & > * {
      transform: translateX(14%) scale(0.9);
      z-index: 1;
    }
    & > *:nth-child(2) {
      transform: translateX(7%) scale(0.95);
      z-index: 2;
    }
  }
  .stack-start {
    & > * {
      transform: translateX(-14%) scale(0.9);
      z-index: 1;
    }
    & > *:nth-child(2) {
      transform: translateX(-7%) scale(0.95);
      z-index: 2;
    }
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .-z-20 {
    z-index: calc(20 * -1);
  }
  .-z-50 {
    z-index: calc(50 * -1);
  }
  .-z-\[1\] {
    z-index: calc(1 * -1);
  }
  .z-0 {
    z-index: 0;
  }
  .z-1 {
    z-index: 1;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-30 {
    z-index: 30;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .z-\[-1\] {
    z-index: -1;
  }
  .z-\[-2\] {
    z-index: -2;
  }
  .z-\[1\] {
    z-index: 1;
  }
  .z-\[2\] {
    z-index: 2;
  }
  .z-\[3\] {
    z-index: 3;
  }
  .z-\[4\] {
    z-index: 4;
  }
  .z-\[9\] {
    z-index: 9;
  }
  .z-\[11\] {
    z-index: 11;
  }
  .z-\[51\] {
    z-index: 51;
  }
  .z-\[55\] {
    z-index: 55;
  }
  .z-\[100\] {
    z-index: 100;
  }
  .z-\[101\] {
    z-index: 101;
  }
  .order-first {
    order: -9999;
  }
  .order-last {
    order: 9999;
  }
  .col-\[1\] {
    grid-column: 1;
  }
  .col-\[2\] {
    grid-column: 2;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-span-full {
    grid-column: 1 / -1;
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .col-start-2 {
    grid-column-start: 2;
  }
  .row-\[1\/span_2\] {
    grid-row: 1/span 2;
  }
  .row-\[1\] {
    grid-row: 1;
  }
  .row-\[2\] {
    grid-row: 2;
  }
  .row-span-2 {
    grid-row: span 2 / span 2;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .row-start-2 {
    grid-row-start: 2;
  }
  .row-end-2 {
    grid-row-end: 2;
  }
  .row-end-3 {
    grid-row-end: 3;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .-m-\[1\.5px\] {
    margin: calc(1.5px * -1);
  }
  .m-1 {
    margin: calc(var(--spacing) * 1);
  }
  .m-auto {
    margin: auto;
  }
  .filter {
    display: flex;
    flex-wrap: wrap;
    input[type="radio"] {
      width: auto;
    }
    input {
      overflow: hidden;
      opacity: 100%;
      scale: 1;
      border-width: 0;
      transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
      &:not(:last-child) {
        margin-inline-end: calc(0.25rem * 1);
      }
      &.filter-reset {
        aspect-ratio: 1 / 1;
        &::after {
          content: "×";
        }
      }
    }
    &:not(:has(input:checked:not(.filter-reset))) {
      .filter-reset, input[type="reset"] {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
    &:has(input:checked:not(.filter-reset)) {
      input:not(:checked, .filter-reset, input[type="reset"]) {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
  }
  .modal-dialog {
    margin-inline: auto;
    width: 100%;
    @media (width >= 40rem) {
      max-width: calc(0.25rem * 128);
    }
  }
  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }
  .-mx-2 {
    margin-inline: calc(var(--spacing) * -2);
  }
  .-mx-3 {
    margin-inline: calc(var(--spacing) * -3);
  }
  .-mx-3\.5 {
    margin-inline: calc(var(--spacing) * -3.5);
  }
  .-mx-6 {
    margin-inline: calc(var(--spacing) * -6);
  }
  .-mx-8 {
    margin-inline: calc(var(--spacing) * -8);
  }
  .-mx-\[--feedback-padding\] {
    margin-inline: calc(--feedback-padding * -1);
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-3 {
    margin-inline: calc(var(--spacing) * 3);
  }
  .mx-3\.5 {
    margin-inline: calc(var(--spacing) * 3.5);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .input-md {
    padding-inline: calc(0.25rem * 3);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .input-sm {
    padding-inline: calc(0.25rem * 2.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --size: calc(var(--size-field, 0.25rem) * 7.5);
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -2);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .input-xl {
    padding-inline: calc(0.25rem * 4.5);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --size: calc(var(--size-field, 0.25rem) * 14);
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -4);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
  }
  .accordion-item {
    .accordion-shadow :where(&) {
      margin-block: calc(0.25rem * 2);
      border-radius: var(--radius-box);
      background-color: var(--color-base-100);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-shadow-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
      .accordion-item:first-of-type {
        margin-top: calc(0.25rem * 0);
      }
      .accordion-item:last-of-type {
        margin-bottom: calc(0.25rem * 0);
      }
      & > *:first-child {
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
      }
      & > *:last-child {
        border-bottom-right-radius: var(--radius-box);
        border-bottom-left-radius: var(--radius-box);
      }
    }
  }
  .my-0 {
    margin-block: calc(var(--spacing) * 0);
  }
  .my-0\.5 {
    margin-block: calc(var(--spacing) * 0.5);
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .my-10 {
    margin-block: calc(var(--spacing) * 10);
  }
  .my-auto {
    margin-block: auto;
  }
  .\!ms-auto {
    margin-inline-start: auto !important;
  }
  .ms-0\.5 {
    margin-inline-start: calc(var(--spacing) * 0.5);
  }
  .ms-1 {
    margin-inline-start: calc(var(--spacing) * 1);
  }
  .ms-2 {
    margin-inline-start: calc(var(--spacing) * 2);
  }
  .ms-auto {
    margin-inline-start: auto;
  }
  .input {
    &::file-selector-button {
      margin-inline-end: calc(0.25rem * 4);
      display: inline-flex;
      height: 100%;
      flex-shrink: 0;
      cursor: pointer;
      flex-wrap: wrap;
      align-items: center;
      justify-content: center;
      border-style: var(--tw-border-style);
      border-width: 0px;
      background-color: var(--color-primary);
      padding-inline: calc(0.25rem * 4);
      text-align: center;
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      --tw-leading: 1;
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
      color: var(--color-primary-content);
      text-transform: uppercase;
      text-decoration-line: none;
      webkit-user-select: none;
      -webkit-user-select: none;
         -moz-user-select: none;
              user-select: none;
      --input-color: var(--color-primary);
      &.input-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
      }
      &.input-md {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
      }
      &.input-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
      }
      &.input-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
      }
    }
    &[type="file"] {
      overflow: hidden;
      padding-inline-start: calc(0.25rem * 0);
    }
    .input-floating &::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-inline-end: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
      }
      outline: none;
    }
  }
  .select-xl {
    --size: calc(var(--size-field, 0.25rem) * 14);
    padding-inline: calc(0.25rem * 4.5);
    padding-inline-end: calc(0.25rem * 10);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    select {
      margin-inline-end: calc(0.25rem * -10);
      padding-inline-start: calc(0.25rem * 4.5);
      padding-inline-end: calc(0.25rem * 10);
    }
  }
  .select-md {
    --size: calc(var(--size-field, 0.25rem) * 9.5);
    padding-inline-start: calc(0.25rem * 3);
    padding-inline-end: calc(0.25rem * 10);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    select {
      margin-inline-end: calc(0.25rem * -10);
      padding-inline-start: calc(0.25rem * 3);
      padding-inline-end: calc(0.25rem * 10);
    }
  }
  .\!me-1\.5 {
    margin-inline-end: calc(var(--spacing) * 1.5) !important;
  }
  .-me-0\.5 {
    margin-inline-end: calc(var(--spacing) * -0.5);
  }
  .me-3 {
    margin-inline-end: calc(var(--spacing) * 3);
  }
  .\!mt-1 {
    margin-top: calc(var(--spacing) * 1) !important;
  }
  .\!mt-4 {
    margin-top: calc(var(--spacing) * 4) !important;
  }
  .-mt-3\.5 {
    margin-top: calc(var(--spacing) * -3.5);
  }
  .-mt-4 {
    margin-top: calc(var(--spacing) * -4);
  }
  .-mt-5 {
    margin-top: calc(var(--spacing-5) * -1);
  }
  .-mt-6 {
    margin-top: calc(var(--spacing) * -6);
  }
  .-mt-16 {
    margin-top: calc(var(--spacing) * -16);
  }
  .-mt-24 {
    margin-top: calc(var(--spacing) * -24);
  }
  .-mt-\[3px\] {
    margin-top: calc(3px * -1);
  }
  .-mt-\[5px\] {
    margin-top: calc(5px * -1);
  }
  .-mt-px {
    margin-top: -1px;
  }
  .mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }
  .mt-0\.5 {
    margin-top: calc(var(--spacing) * 0.5);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-1\.5 {
    margin-top: calc(var(--spacing) * 1.5);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-14 {
    margin-top: calc(var(--spacing) * 14);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }
  .mt-24 {
    margin-top: calc(var(--spacing) * 24);
  }
  .mt-\[--card-padding\] {
    margin-top: --card-padding;
  }
  .mt-auto {
    margin-top: auto;
  }
  .mt-px {
    margin-top: 1px;
  }
  .-mr-1 {
    margin-right: calc(var(--spacing) * -1);
  }
  .-mr-2 {
    margin-right: calc(var(--spacing) * -2);
  }
  .-mr-2\.5 {
    margin-right: calc(var(--spacing) * -2.5);
  }
  .-mr-12 {
    margin-right: calc(var(--spacing) * -12);
  }
  .-mr-16 {
    margin-right: calc(var(--spacing) * -16);
  }
  .-mr-\[0\.5px\] {
    margin-right: calc(0.5px * -1);
  }
  .-mr-\[calc\(var\(--card-padding\)\+1px\)\] {
    margin-right: calc(calc(var(--card-padding) + 1px) * -1);
  }
  .-mr-px {
    margin-right: -1px;
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-5 {
    margin-right: var(--spacing-5);
  }
  .footer-title {
    margin-bottom: calc(0.25rem * 1);
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);
  }
  .\!mb-1 {
    margin-bottom: calc(var(--spacing) * 1) !important;
  }
  .\!mb-3 {
    margin-bottom: calc(var(--spacing) * 3) !important;
  }
  .\!mb-5 {
    margin-bottom: var(--spacing-5) !important;
  }
  .-mb-2 {
    margin-bottom: calc(var(--spacing) * -2);
  }
  .-mb-3 {
    margin-bottom: calc(var(--spacing) * -3);
  }
  .-mb-4 {
    margin-bottom: calc(var(--spacing) * -4);
  }
  .-mb-\[--card-padding\] {
    margin-bottom: calc(--card-padding * -1);
  }
  .-mb-\[--feedback-padding\] {
    margin-bottom: calc(--feedback-padding * -1);
  }
  .-mb-\[calc\(var\(--card-padding\)\+1px\)\] {
    margin-bottom: calc(calc(var(--card-padding) + 1px) * -1);
  }
  .-mb-px {
    margin-bottom: -1px;
  }
  .mb-0 {
    margin-bottom: calc(var(--spacing) * 0);
  }
  .mb-0\.5 {
    margin-bottom: calc(var(--spacing) * 0.5);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-1\.5 {
    margin-bottom: calc(var(--spacing) * 1.5);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: var(--spacing-5);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }
  .mb-20 {
    margin-bottom: calc(var(--spacing) * 20);
  }
  .mb-32 {
    margin-bottom: calc(var(--spacing) * 32);
  }
  .-ml-2 {
    margin-left: calc(var(--spacing) * -2);
  }
  .-ml-4 {
    margin-left: calc(var(--spacing) * -4);
  }
  .-ml-6 {
    margin-left: calc(var(--spacing) * -6);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-5 {
    margin-left: var(--spacing-5);
  }
  .ml-\[calc\(50\%-1rem\)\] {
    margin-left: calc(50% - 1rem);
  }
  .ml-auto {
    margin-left: auto;
  }
  .ml-px {
    margin-left: 1px;
  }
  .status {
    display: inline-block;
    aspect-ratio: 1 / 1;
    width: calc(0.25rem * 2.5);
    height: calc(0.25rem * 2.5);
    border-radius: calc(infinity * 1px);
    background-color: var(--color-neutral);
    background-position: center;
    background-repeat: no-repeat;
    vertical-align: middle;
    color: var(--color-neutral);
    background-image: radial-gradient(circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000);
    box-shadow: 0 2px 3px -1px currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
    }
  }
  .divider {
    display: flex;
    width: 100%;
    align-items: center;
    align-self: stretch;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    white-space: nowrap;
    &:not(:empty) {
      gap: calc(0.25rem * 4);
    }
    &:before {
      content: "";
      height: 1px;
      width: 100%;
      flex-grow: 1;
      border-inline-end-style: var(--tw-border-style);
      border-inline-end-width: 0px;
      border-top-style: var(--tw-border-style);
      border-top-width: 1px;
      --tw-border-style: solid;
      border-style: solid;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
    }
    &:after {
      content: "";
      height: 1px;
      width: 100%;
      flex-grow: 1;
      border-inline-end-style: var(--tw-border-style);
      border-inline-end-width: 0px;
      border-top-style: var(--tw-border-style);
      border-top-width: 1px;
      --tw-border-style: solid;
      border-style: solid;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
    }
  }
  .badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 1.5);
    border-radius: var(--radius-selector);
    text-align: center;
    vertical-align: middle;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    border: var(--border) solid var(--badge-border);
    padding-inline: calc(0.25rem * 3);
    width: -moz-fit-content;
    width: fit-content;
    color: var(--badge-fg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    background-color: var(--badge-bg);
    --badge-border: var(--badge-color, var(--color-neutral));
    --badge-bg: var(--badge-color, var(--color-neutral));
    --badge-fg: var(--color-neutral-content);
    --size: calc(var(--size-selector, 0.25rem) * 6);
    height: var(--size);
    &.badge-outline {
      --badge-fg: var(--badge-color, var(--color-neutral));
      --badge-bg: transparent;
      background-image: none;
    }
    &.badge-soft {
      --badge-border: none;
      --badge-fg: var(--badge-color, var(--color-neutral));
      --badge-bg: var(--badge-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --badge-bg: color-mix(in oklab, var(--badge-color, var(--color-neutral)) 10%, var(--color-base-100));
      }
      background-image: none;
    }
  }
  .progress {
    display: flex;
    height: calc(0.25rem * 1.5);
    width: 100%;
    overflow: hidden;
    border-radius: var(--radius-box);
    background-color: var(--color-base-200);
  }
  .icon-\[tabler--alert-triangle\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 9v4m-1.637-9.409L2.257 17.125a1.914 1.914 0 0 0 1.636 2.871h16.214a1.914 1.914 0 0 0 1.636-2.87L13.637 3.59a1.914 1.914 0 0 0-3.274 0zM12 16h.01'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--brand-facebook\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M7 10v4h3v7h4v-7h3l1-4h-4V8a1 1 0 0 1 1-1h3V3h-3a5 5 0 0 0-5 5v2z'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--brand-github\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 19c-4.3 1.4-4.3-2.5-6-3m12 5v-3.5c0-1 .1-1.4-.5-2c2.8-.3 5.5-1.4 5.5-6a4.6 4.6 0 0 0-1.3-3.2a4.2 4.2 0 0 0-.1-3.2s-1.1-.3-3.5 1.3a12.3 12.3 0 0 0-6.2 0C6.5 2.8 5.4 3.1 5.4 3.1a4.2 4.2 0 0 0-.1 3.2A4.6 4.6 0 0 0 4 9.5c0 4.6 2.7 5.7 5.5 6c-.6.6-.6 1.2-.5 2V21'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--brand-linkedin\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M8 11v5m0-8v.01M12 16v-5m4 5v-3a2 2 0 1 0-4 0'/%3E%3Cpath d='M3 7a4 4 0 0 1 4-4h10a4 4 0 0 1 4 4v10a4 4 0 0 1-4 4H7a4 4 0 0 1-4-4z'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--brand-x\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m4 4l11.733 16H20L8.267 4zm0 16l6.768-6.768m2.46-2.46L20 4'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--caret-up-down\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m18 10l-6-6l-6 6zm0 4l-6 6l-6-6z'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--check\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m5 12l5 5L20 7'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--chevron-down\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--chevron-up\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 15l6-6l6 6'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--circle-check\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0'/%3E%3Cpath d='m9 12l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--clipboard-copy\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h3m9-9V7a2 2 0 0 0-2-2h-2m-2 12v-1a1 1 0 0 1 1-1h1m3 0h1a1 1 0 0 1 1 1v1m0 3v1a1 1 0 0 1-1 1h-1m-3 0h-1a1 1 0 0 1-1-1v-1'/%3E%3Cpath d='M9 5a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v0a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--dots-vertical\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M11 12a1 1 0 1 0 2 0a1 1 0 1 0-2 0m0 7a1 1 0 1 0 2 0a1 1 0 1 0-2 0m0-14a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--download\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2M7 11l5 5l5-5m-5-7v12'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--file-excel\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2m-7-9l4 5m-4 0l4-5'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--file-type-csv\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M5 12V5a2 2 0 0 1 2-2h7l5 5v4M7 16.5a1.5 1.5 0 0 0-3 0v3a1.5 1.5 0 0 0 3 0m3 .75c0 .414.336.75.75.75H12a1 1 0 0 0 1-1v-1a1 1 0 0 0-1-1h-1a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h1.25a.75.75 0 0 1 .75.75m3-.75l2 6l2-6'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--file-type-pdf\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M5 12V5a2 2 0 0 1 2-2h7l5 5v4M5 18h1.5a1.5 1.5 0 0 0 0-3H5v6m12-3h2m1-3h-3v6m-6-6v6h1a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2z'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--info-circle\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 0 0-18 0m9-3h.01'/%3E%3Cpath d='M11 12h1v4h1'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--minus\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 12h14'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--pencil\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 20h4L18.5 9.5a2.828 2.828 0 1 0-4-4L4 16zm9.5-13.5l4 4'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--plus\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 5v14m-7-7h14'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--printer\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M17 17h2a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h2m10-8V5a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v4'/%3E%3Cpath d='M7 15a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2z'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--quote\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 11H6a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v6q0 4-4 5m13-7h-4a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v6q0 4-4 5'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--search\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 10a7 7 0 1 0 14 0a7 7 0 1 0-14 0m18 11l-6-6'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--star\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m12 17.75l-6.172 3.245l1.179-6.873l-5-4.867l6.9-1l3.086-6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--trash\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7h16m-10 4v6m4-6v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--trending-down\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 7l6 6l4-4l8 8'/%3E%3Cpath d='M21 10v7h-7'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--trending-up\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 17l6-6l4 4l8-8'/%3E%3Cpath d='M14 7h7v7'/%3E%3C/g%3E%3C/svg%3E");
  }
  .icon-\[tabler--user\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0a4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2'/%3E%3C/svg%3E");
  }
  .icon-\[tabler--x\] {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M18 6L6 18M6 6l12 12'/%3E%3C/svg%3E");
  }
  .kbd {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-field);
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 20%, transparent);
    }
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    padding-left: 0.5em;
    padding-right: 0.5em;
    border: var(--border) solid var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid color-mix(in oklab, var(--color-base-content) 25%, #0000);
    }
    border-bottom-width: calc(var(--border) + 1px);
    --size: calc(var(--size-selector, 0.25rem) * 6.5);
    height: var(--size);
    min-width: var(--size);
  }
  .tabs {
    display: flex;
    --tabs-height: auto;
    --tabs-direction: row;
    height: var(--tabs-height);
    flex-direction: var(--tabs-direction);
  }
  .progress-bar {
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    border-radius: var(--radius-box);
    background-color: var(--color-neutral);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    white-space: nowrap;
    color: var(--color-neutral-content);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-timing-function: var(--ease-in-out);
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 500ms;
    --tw-duration: 500ms;
    --tw-ease: var(--ease-in-out);
    &.progress-indeterminate {
      width: 100%;
      background: linear-gradient(90deg, rgba(0, 0, 0, 0) 50%, var(--progress-color) 50%);
      background-size: 50% 100%;
      background-repeat: no-repeat;
      animation: indeterminate-progress 4s infinite ease-in-out;
    }
  }
  .footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    -moz-column-gap: calc(0.25rem * 4);
         column-gap: calc(0.25rem * 4);
    row-gap: calc(0.25rem * 10);
    @media (width >= 48rem) {
      grid-auto-flow: column;
    }
    & > * {
      display: grid;
      place-items: start;
      gap: calc(0.25rem * 3);
    }
    &.footer-center {
      place-items: center;
      text-align: center;
      @media (width >= 48rem) {
        grid-auto-flow: row dense;
      }
      & > * {
        place-items: center;
      }
    }
    :where(.link) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
  }
  .stat {
    display: inline-grid;
    width: 100%;
    -moz-column-gap: calc(0.25rem * 4);
         column-gap: calc(0.25rem * 4);
    row-gap: calc(0.25rem * 1);
    padding-inline: calc(0.25rem * 6);
    padding-block: calc(0.25rem * 4);
    grid-template-columns: repeat(1, 1fr);
    border-color: inherit;
  }
  .navbar {
    display: flex;
    width: 100%;
    align-items: center;
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 6);
    padding-block: calc(0.25rem * 3);
  }
  .stats {
    display: inline-grid;
    grid-auto-flow: column;
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 0;
      border-inline-style: var(--tw-border-style);
      border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
      border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(0px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
    }
    overflow-x: auto;
    border-radius: var(--radius-box);
    --tw-border-style: solid;
    border-style: solid;
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
    background-color: var(--color-base-100);
    box-shadow: var( --card-shadow, 0 1px 3px 0 var(--color-base-300), 0 1px 2px -1px var(--color-base-300) );
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: var( --card-shadow, 0 1px 3px 0 color-mix(in oklab, var(--color-base-300) 20%, #0000), 0 1px 2px -1px color-mix(in oklab, var(--color-base-300) 20%, #0000) );
    }
    border-width: var(--card-border, 0px);
    &:where(.stats-border) {
      border: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border: var(--border) solid color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
    }
  }
  .carousel-body {
    display: flex;
    flex-wrap: nowrap;
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 700ms;
    --tw-duration: 700ms;
  }
  .modal-footer {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: calc(0.25rem * 3);
    padding: calc(0.25rem * 6);
    :where(.modal-body) + & {
      padding-top: 0;
    }
  }
  .avatar-placeholder {
    & > div {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    & > span {
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
  .join {
    display: inline-flex;
    align-items: stretch;
    --join-ss: 0;
    --join-se: 0;
    --join-es: 0;
    --join-ee: 0;
    :where(.join-item) {
      border-start-start-radius: var(--join-ss, 0);
      border-start-end-radius: var(--join-se, 0);
      border-end-start-radius: var(--join-es, 0);
      border-end-end-radius: var(--join-ee, 0);
      * {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
    > .join-item:where(:first-child) {
      --join-ss: var(--radius-field);
      --join-se: 0;
      --join-es: var(--radius-field);
      --join-ee: 0;
    }
    :first-child:not(:last-child) {
      :where(.join-item) {
        --join-ss: var(--radius-field);
        --join-se: 0;
        --join-es: var(--radius-field);
        --join-ee: 0;
      }
    }
    > .join-item:where(:last-child) {
      --join-ss: 0;
      --join-se: var(--radius-field);
      --join-es: 0;
      --join-ee: var(--radius-field);
    }
    :last-child:not(:first-child) {
      :where(.join-item) {
        --join-ss: 0;
        --join-se: var(--radius-field);
        --join-es: 0;
        --join-ee: var(--radius-field);
      }
    }
    > .join-item:where(:only-child) {
      --join-ss: var(--radius-field);
      --join-se: var(--radius-field);
      --join-es: var(--radius-field);
      --join-ee: var(--radius-field);
    }
    :only-child {
      :where(.join-item) {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
  }
  .avatar-group {
    display: flex;
    :where(.avatar) {
      overflow: hidden;
      border-radius: calc(infinity * 1px);
      border: 2px solid var(--color-base-100);
    }
  }
  .line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
  .error-message {
    display: none;
    padding: calc(0.25rem * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-error);
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
  }
  .helper-text {
    display: block;
    padding: calc(0.25rem * 1);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
  }
  .tooltip {
    display: inline-block;
    text-align: center;
  }
  .error-message {
    .validate *:invalid ~ & {
      display: block;
    }
    .validate *:has(:invalid) ~ & {
      display: block;
    }
  }
  .\!flex {
    display: flex !important;
  }
  .\[display\:var\(--icon-display\)\] {
    display: var(--icon-display);
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .aspect-\[1\.618\/1\] {
    aspect-ratio: 1.618/1;
  }
  .aspect-\[16\/10\] {
    aspect-ratio: 16/10;
  }
  .aspect-auto {
    aspect-ratio: auto;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .aspect-video {
    aspect-ratio: var(--aspect-video);
  }
  .progress-horizontal {
    height: calc(0.25rem * 1.5);
    width: 100%;
    flex-direction: row;
    justify-content: flex-start;
    border-radius: var(--radius-box);
  }
  .btn-circle {
    border-radius: calc(infinity * 1px);
    padding-inline: calc(0.25rem * 0);
    width: var(--size);
    height: var(--size);
  }
  .btn-square {
    padding-inline: calc(0.25rem * 0);
    width: var(--size);
    height: var(--size);
  }
  .\!size-4 {
    width: calc(var(--spacing) * 4) !important;
    height: calc(var(--spacing) * 4) !important;
  }
  .size-1\.5 {
    width: calc(var(--spacing) * 1.5);
    height: calc(var(--spacing) * 1.5);
  }
  .size-2 {
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
  }
  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-4\.5 {
    width: calc(var(--spacing) * 4.5);
    height: calc(var(--spacing) * 4.5);
  }
  .size-5 {
    width: var(--spacing-5);
    height: var(--spacing-5);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-7 {
    width: calc(var(--spacing) * 7);
    height: calc(var(--spacing) * 7);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }
  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }
  .size-12 {
    width: calc(var(--spacing) * 12);
    height: calc(var(--spacing) * 12);
  }
  .size-14 {
    width: calc(var(--spacing) * 14);
    height: calc(var(--spacing) * 14);
  }
  .size-16 {
    width: calc(var(--spacing) * 16);
    height: calc(var(--spacing) * 16);
  }
  .size-20 {
    width: calc(var(--spacing) * 20);
    height: calc(var(--spacing) * 20);
  }
  .size-32 {
    width: calc(var(--spacing) * 32);
    height: calc(var(--spacing) * 32);
  }
  .size-36 {
    width: calc(var(--spacing) * 36);
    height: calc(var(--spacing) * 36);
  }
  .size-\[1\.125rem\] {
    width: 1.125rem;
    height: 1.125rem;
  }
  .size-fit {
    width: -moz-fit-content;
    width: fit-content;
    height: -moz-fit-content;
    height: fit-content;
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .input {
    & > .select {
      height: auto;
      border-style: var(--tw-border-style);
      border-width: 0px;
      &:focus, &:focus-within {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        outline-style: var(--tw-outline-style);
        outline-width: 0px;
      }
    }
  }
  .\!h-2\.5 {
    height: calc(var(--spacing) * 2.5) !important;
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-0\.5 {
    height: calc(var(--spacing) * 0.5);
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-1\.5 {
    height: calc(var(--spacing) * 1.5);
  }
  .h-1\/2 {
    height: calc(1/2 * 100%);
  }
  .h-1\/3 {
    height: calc(1/3 * 100%);
  }
  .h-1\/4 {
    height: calc(1/4 * 100%);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-2\.5 {
    height: calc(var(--spacing) * 2.5);
  }
  .h-2\/5 {
    height: calc(2/5 * 100%);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-3\.5 {
    height: calc(var(--spacing) * 3.5);
  }
  .h-3\/4 {
    height: calc(3/4 * 100%);
  }
  .h-3\/5 {
    height: calc(3/5 * 100%);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: var(--spacing-5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-11 {
    height: calc(var(--spacing) * 11);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-40 {
    height: calc(var(--spacing) * 40);
  }
  .h-56 {
    height: calc(var(--spacing) * 56);
  }
  .h-96 {
    height: calc(var(--spacing) * 96);
  }
  .h-\[--accordion-content-height\] {
    height: --accordion-content-height;
  }
  .h-\[1\.5px\] {
    height: 1.5px;
  }
  .h-\[1\.125rem\] {
    height: 1.125rem;
  }
  .h-\[1px\] {
    height: 1px;
  }
  .h-\[3\.5rem\] {
    height: 3.5rem;
  }
  .h-\[3\.55rem\] {
    height: 3.55rem;
  }
  .h-\[1280px\] {
    height: 1280px;
  }
  .h-\[1380px\] {
    height: 1380px;
  }
  .h-\[calc\(100dvh-5\.75rem\)\] {
    height: calc(100dvh - 5.75rem);
  }
  .h-\[calc\(100vh-5\.75rem\)\] {
    height: calc(100vh - 5.75rem);
  }
  .h-\[var\(--radix-navigation-menu-viewport-height\)\] {
    height: var(--radix-navigation-menu-viewport-height);
  }
  .h-\[var\(--radix-select-trigger-height\)\] {
    height: var(--radix-select-trigger-height);
  }
  .h-auto {
    height: auto;
  }
  .h-fit {
    height: -moz-fit-content;
    height: fit-content;
  }
  .h-full {
    height: 100%;
  }
  .h-max {
    height: -moz-max-content;
    height: max-content;
  }
  .h-min {
    height: -moz-min-content;
    height: min-content;
  }
  .h-px {
    height: 1px;
  }
  .h-svh {
    height: 100svh;
  }
  .max-h-96 {
    max-height: calc(var(--spacing) * 96);
  }
  .max-h-\[32rem\] {
    max-height: 32rem;
  }
  .max-h-\[40rem\] {
    max-height: 40rem;
  }
  .max-h-\[300px\] {
    max-height: 300px;
  }
  .max-h-\[calc\(20rem-37px\)\] {
    max-height: calc(20rem - 37px);
  }
  .max-h-\[calc\(45rem-37px\)\] {
    max-height: calc(45rem - 37px);
  }
  .max-h-\[calc\(100vh-26rem\)\] {
    max-height: calc(100vh - 26rem);
  }
  .max-h-screen {
    max-height: 100vh;
  }
  .min-h-0 {
    min-height: calc(var(--spacing) * 0);
  }
  .min-h-32 {
    min-height: calc(var(--spacing) * 32);
  }
  .min-h-130 {
    min-height: calc(var(--spacing) * 130);
  }
  .min-h-\[45rem\] {
    min-height: 45rem;
  }
  .min-h-\[80px\] {
    min-height: 80px;
  }
  .min-h-\[200px\] {
    min-height: 200px;
  }
  .min-h-\[calc\(100vh-4rem\)\] {
    min-height: calc(100vh - 4rem);
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .min-h-svh {
    min-height: 100svh;
  }
  .btn-wide {
    width: 100%;
    max-width: calc(0.25rem * 64);
  }
  .advance-select-option {
    width: 100%;
    cursor: pointer;
    border-radius: var(--radius-field);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 2.5);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }
      }
    }
    &:focus {
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .advance-select-sm {
    --size: calc(var(--size-field, 0.25rem) * 7.5);
    padding-inline-start: calc(0.25rem * 2.5);
    padding-inline-end: calc(0.25rem * 8);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    & ~ .advance-select-menu {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      & .advance-select-option {
        width: 100%;
        cursor: pointer;
        padding-inline: calc(0.25rem * 2);
        padding-block: calc(0.25rem * 1.5);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
      }
    }
  }
  .modal-body {
    overflow-x: hidden;
    overflow-y: auto;
    padding: calc(0.25rem * 6);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    &::-webkit-scrollbar {
      width: calc(0.25rem * 2);
    }
    :where(.modal-header) + & {
      padding-top: 0;
    }
    :where(&) + .modal-footer {
      padding-top: 0;
    }
  }
  .\!w-2\.5 {
    width: calc(var(--spacing) * 2.5) !important;
  }
  .btn-block {
    width: 100%;
  }
  .loading-md {
    width: calc(var(--size-selector, 0.25rem) * 6);
  }
  .loading-xl {
    width: calc(var(--size-selector, 0.25rem) * 8);
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-0\.5 {
    width: calc(var(--spacing) * 0.5);
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\.5 {
    width: calc(var(--spacing) * 1.5);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-1\/3 {
    width: calc(1/3 * 100%);
  }
  .w-1\/5 {
    width: calc(1/5 * 100%);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-2\.5 {
    width: calc(var(--spacing) * 2.5);
  }
  .w-2\/3 {
    width: calc(2/3 * 100%);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-3\.5 {
    width: calc(var(--spacing) * 3.5);
  }
  .w-3\/4 {
    width: calc(3/4 * 100%);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-4\/5 {
    width: calc(4/5 * 100%);
  }
  .w-5 {
    width: var(--spacing-5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-11 {
    width: calc(var(--spacing) * 11);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-13 {
    width: calc(var(--spacing) * 13);
  }
  .w-14 {
    width: calc(var(--spacing) * 14);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-56 {
    width: calc(var(--spacing) * 56);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-72 {
    width: calc(var(--spacing) * 72);
  }
  .w-\[--sidebar-width\] {
    width: --sidebar-width;
  }
  .w-\[1\.125rem\] {
    width: 1.125rem;
  }
  .w-\[1px\] {
    width: 1px;
  }
  .w-\[20\%\] {
    width: 20%;
  }
  .w-\[22\%\] {
    width: 22%;
  }
  .w-\[28\%\] {
    width: 28%;
  }
  .w-\[42\%\] {
    width: 42%;
  }
  .w-\[60\%\] {
    width: 60%;
  }
  .w-\[66\%\] {
    width: 66%;
  }
  .w-\[100px\] {
    width: 100px;
  }
  .w-\[200vw\] {
    width: 200vw;
  }
  .w-\[240px\] {
    width: 240px;
  }
  .w-\[560px\] {
    width: 560px;
  }
  .w-\[calc\(50\%\+0\.875rem\)\] {
    width: calc(50% + 0.875rem);
  }
  .w-\[calc\(100\%-3\.25rem\)\] {
    width: calc(100% - 3.25rem);
  }
  .w-auto {
    width: auto;
  }
  .w-fit {
    width: -moz-fit-content;
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: -moz-max-content;
    width: max-content;
  }
  .w-px {
    width: 1px;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-3xl {
    max-width: var(--container-3xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-6xl {
    max-width: var(--container-6xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-60 {
    max-width: calc(var(--spacing) * 60);
  }
  .max-w-\[--skeleton-width\] {
    max-width: --skeleton-width;
  }
  .max-w-\[18rem\] {
    max-width: 18rem;
  }
  .max-w-\[29rem\] {
    max-width: 29rem;
  }
  .max-w-\[76rem\] {
    max-width: 76rem;
  }
  .max-w-\[84rem\] {
    max-width: 84rem;
  }
  .max-w-\[calc\(80rem-6px\)\] {
    max-width: calc(80rem - 6px);
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-max {
    max-width: -moz-max-content;
    max-width: max-content;
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .modal-dialog-md {
    max-width: calc(0.25rem * 128);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-5 {
    min-width: var(--spacing-5);
  }
  .min-w-9 {
    min-width: calc(var(--spacing) * 9);
  }
  .min-w-10 {
    min-width: calc(var(--spacing) * 10);
  }
  .min-w-11 {
    min-width: calc(var(--spacing) * 11);
  }
  .min-w-28 {
    min-width: calc(var(--spacing) * 28);
  }
  .min-w-48 {
    min-width: calc(var(--spacing) * 48);
  }
  .min-w-60 {
    min-width: calc(var(--spacing) * 60);
  }
  .min-w-\[8rem\] {
    min-width: 8rem;
  }
  .min-w-\[12rem\] {
    min-width: 12rem;
  }
  .min-w-\[var\(--radix-select-trigger-width\)\] {
    min-width: var(--radix-select-trigger-width);
  }
  .min-w-full {
    min-width: 100%;
  }
  .min-w-max {
    min-width: -moz-max-content;
    min-width: max-content;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-\[1_0_0\] {
    flex: 1 0 0;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .grow {
    flex-grow: 1;
  }
  .grow-0 {
    flex-grow: 0;
  }
  .basis-full {
    flex-basis: 100%;
  }
  .table-auto {
    table-layout: auto;
  }
  .caption-bottom {
    caption-side: bottom;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .border-separate {
    border-collapse: separate;
  }
  .border-spacing-x-3 {
    --tw-border-spacing-x: calc(var(--spacing) * 3);
    border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
  }
  .origin-\[top_center\] {
    transform-origin: top center;
  }
  .origin-bottom {
    transform-origin: bottom;
  }
  .origin-left {
    transform-origin: left;
  }
  .origin-top {
    transform-origin: top;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-2 {
    --tw-translate-x: calc(var(--spacing) * -2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-20 {
    --tw-translate-x: calc(var(--spacing) * -20);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-px {
    --tw-translate-x: -1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-2 {
    --tw-translate-x: calc(var(--spacing) * 2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-12 {
    --tw-translate-x: calc(var(--spacing) * 12);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-\[calc\(100\%-6px\)\] {
    --tw-translate-x: calc(100% - 6px);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-px {
    --tw-translate-x: 1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-2\.5 {
    --tw-translate-y: calc(var(--spacing) * -2.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-3 {
    --tw-translate-y: calc(var(--spacing) * -3);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-\[350px\] {
    --tw-translate-y: calc(350px * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-px {
    --tw-translate-y: -1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-2 {
    --tw-translate-y: calc(var(--spacing) * 2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-4 {
    --tw-translate-y: calc(var(--spacing) * 4);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-6 {
    --tw-translate-y: calc(var(--spacing) * 6);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-8 {
    --tw-translate-y: calc(var(--spacing) * 8);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[-0\.3px\] {
    --tw-translate-y: -0.3px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[13\.5px\] {
    --tw-translate-y: 13.5px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[21\.5px\] {
    --tw-translate-y: 21.5px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .\[translate\:-180\%\,-70\%\] {
    translate: -180%,-70%;
  }
  .\[translate\:5\%_-50\%\] {
    translate: 5% -50%;
  }
  .scale-0 {
    --tw-scale-x: 0%;
    --tw-scale-y: 0%;
    --tw-scale-z: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-75 {
    --tw-scale-x: 75%;
    --tw-scale-y: 75%;
    --tw-scale-z: 75%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-105 {
    --tw-scale-x: 105%;
    --tw-scale-y: 105%;
    --tw-scale-z: 105%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-150 {
    --tw-scale-x: 150%;
    --tw-scale-y: 150%;
    --tw-scale-z: 150%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-x-0 {
    --tw-scale-x: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-\[2\] {
    scale: 2;
  }
  .-rotate-45 {
    rotate: calc(45deg * -1);
  }
  .-rotate-180 {
    rotate: calc(180deg * -1);
  }
  .rotate-0 {
    rotate: 0deg;
  }
  .rotate-45 {
    rotate: 45deg;
  }
  .rotate-90 {
    rotate: 90deg;
  }
  .rotate-180 {
    rotate: 180deg;
  }
  .\[transform\:rotateX\(20deg\)\] {
    transform: rotateX(20deg);
  }
  .\[transform\:skewX\(\.36rad\)\] {
    transform: skewX(.36rad);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .radio-inset {
    &:checked, &[aria-checked="true"] {
      animation: radio-inset 0.2s ease-out;
      background-color: currentColor;
      box-shadow: 0 6px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)), 0 1px 2px 0 var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 6px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)), 0 1px 2px 0 color-mix(in oklab, var(--color-base-content) 30%, #0000);
      }
      &:before {
        background-color: var(--color-base-100);
        box-shadow: none;
      }
    }
  }
  .animate-pulse {
    animation: var(--animate-pulse);
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .touch-none {
    touch-action: none;
  }
  .resize {
    resize: both;
  }
  .snap-x {
    scroll-snap-type: x var(--tw-scroll-snap-strictness);
  }
  .snap-mandatory {
    --tw-scroll-snap-strictness: mandatory;
  }
  .snap-center {
    scroll-snap-align: center;
  }
  .scroll-my-2 {
    scroll-margin-block: calc(var(--spacing) * 2);
  }
  .scroll-my-32 {
    scroll-margin-block: calc(var(--spacing) * 32);
  }
  .scroll-py-32 {
    scroll-padding-block: calc(var(--spacing) * 32);
  }
  .list-inside {
    list-style-position: inside;
  }
  .list-outside {
    list-style-position: outside;
  }
  .list-decimal {
    list-style-type: decimal;
  }
  .list-disc {
    list-style-type: disc;
  }
  .list-none {
    list-style-type: none;
  }
  .list-image-\[url\(\/dark-check\.svg\)\] {
    list-style-image: url(/dark-check.svg);
  }
  .appearance-none {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
  }
  .stats-horizontal {
    grid-auto-flow: column;
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 0;
      border-inline-style: var(--tw-border-style);
      border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
      border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(0px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
    }
    overflow-x: auto;
  }
  .\[grid-template-columns\:1fr_auto\] {
    grid-template-columns: 1fr auto;
  }
  .\[grid-template-columns\:1fr_auto_1fr\] {
    grid-template-columns: 1fr auto 1fr;
  }
  .\[grid-template-columns\:auto_1fr\] {
    grid-template-columns: auto 1fr;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
  .grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }
  .grid-cols-9 {
    grid-template-columns: repeat(9, minmax(0, 1fr));
  }
  .grid-cols-\[1\.618fr_minmax\(0\,1fr\)\] {
    grid-template-columns: 1.618fr minmax(0,1fr);
  }
  .grid-cols-\[var\(--width-gutter\)_auto_var\(--width-gutter\)\] {
    grid-template-columns: var(--width-gutter) auto var(--width-gutter);
  }
  .\[grid-template-rows\:1fr_auto\] {
    grid-template-rows: 1fr auto;
  }
  .\[grid-template-rows\:auto_1fr\] {
    grid-template-rows: auto 1fr;
  }
  .grid-rows-\[1fr_1\.618fr\] {
    grid-template-rows: 1fr 1.618fr;
  }
  .grid-rows-\[auto_1fr_auto\] {
    grid-template-rows: auto 1fr auto;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .content-end {
    align-content: flex-end;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .items-stretch {
    align-items: stretch;
  }
  .\!justify-between {
    justify-content: space-between !important;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-3\.5 {
    gap: calc(var(--spacing) * 3.5);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .gap-px {
    gap: 1px;
  }
  .\!space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0 !important;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse)) !important;
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse))) !important;
    }
  }
  .space-y-0\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-1\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2.5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-10 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 10) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 10) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-12 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 12) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 12) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-16 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 16) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 16) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-20 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 20) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 20) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-1 {
    -moz-column-gap: calc(var(--spacing) * 1);
         column-gap: calc(var(--spacing) * 1);
  }
  .gap-x-2 {
    -moz-column-gap: calc(var(--spacing) * 2);
         column-gap: calc(var(--spacing) * 2);
  }
  .gap-x-3 {
    -moz-column-gap: calc(var(--spacing) * 3);
         column-gap: calc(var(--spacing) * 3);
  }
  .gap-x-4 {
    -moz-column-gap: calc(var(--spacing) * 4);
         column-gap: calc(var(--spacing) * 4);
  }
  .gap-x-6 {
    -moz-column-gap: calc(var(--spacing) * 6);
         column-gap: calc(var(--spacing) * 6);
  }
  .gap-x-12 {
    -moz-column-gap: calc(var(--spacing) * 12);
         column-gap: calc(var(--spacing) * 12);
  }
  .-space-x-0\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -0.5) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -0.5) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .-space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .-space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .-space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .-space-x-5 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing-5) * -1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing-5) * -1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .gap-y-1 {
    row-gap: calc(var(--spacing) * 1);
  }
  .gap-y-2 {
    row-gap: calc(var(--spacing) * 2);
  }
  .gap-y-6 {
    row-gap: calc(var(--spacing) * 6);
  }
  .gap-y-8 {
    row-gap: calc(var(--spacing) * 8);
  }
  .gap-y-12 {
    row-gap: calc(var(--spacing) * 12);
  }
  .divide-x {
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 0;
      border-inline-style: var(--tw-border-style);
      border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
      border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    }
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .accordion {
    &:where(.accordion-bordered) {
      :where(& > :not(:last-child)) {
        --tw-divide-y-reverse: 0;
        border-bottom-style: var(--tw-border-style);
        border-top-style: var(--tw-border-style);
        border-top-width: calc(1px * var(--tw-divide-y-reverse));
        border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
        border-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
        }
      }
      border-radius: var(--radius-box);
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
      }
      background-color: var(--color-base-100);
    }
  }
  .divide-dashed {
    :where(& > :not(:last-child)) {
      --tw-border-style: dashed;
      border-style: dashed;
    }
  }
  .divide-gray-200 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-gray-200);
    }
  }
  .divide-gray-800 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-gray-800);
    }
  }
  .divide-neutral\/20 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
      }
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .\!overflow-visible {
    overflow: visible !important;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-clip {
    overflow: clip;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-visible {
    overflow: visible;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .overflow-x-scroll {
    overflow-x: scroll;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .overflow-y-scroll {
    overflow-y: scroll;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .card-alert {
    .card & {
      border-radius: 0;
      &:first-child {
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
      }
      &:last-child {
        border-bottom-right-radius: var(--radius-box);
        border-bottom-left-radius: var(--radius-box);
      }
    }
  }
  .skeleton {
    border-radius: var(--radius-box);
    background-color: var(--color-base-200);
    will-change: background-position;
    background-image: linear-gradient(105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100%);
    background-size: 200% auto;
    background-repeat: no-repeat;
    background-position-x: -50%;
  }
  .tooltip-body {
    --tooltip-color: var(--color-neutral);
    --tooltip-text-color: var(--color-neutral-content);
    border-radius: var(--radius-selector);
    padding-inline: calc(0.25rem * 3);
    padding-block: calc(0.25rem * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    line-height: calc(0.25rem * 5);
    --tw-leading: calc(0.25rem * 5);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
    background-color: var(--tooltip-color);
    color: var(--tooltip-text-color);
  }
  .collapse {
    :where(.menu-horizontal > li:not(.menu-title) > & > ul) {
      border-radius: var(--radius-box);
      background-color: var(--color-base-100);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-shadow-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .menu-md {
    :where(li:not(.menu-title) > *:not(ul, .collapse, .accordion-content, .menu-title)) {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2.5);
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    .menu-title {
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2);
    }
  }
  .menu-xl {
    :where(li:not(.menu-title) > *:not(ul, .collapse, .accordion-content, .menu-title)) {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 6);
      padding-block: calc(0.25rem * 3.5);
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
    .menu-title {
      padding-inline: calc(0.25rem * 6);
      padding-block: calc(0.25rem * 3);
    }
  }
  .\!rounded-full {
    border-radius: calc(infinity * 1px) !important;
  }
  .\!rounded-xs {
    border-radius: var(--radius-xs) !important;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-\[--annonce-radius\] {
    border-radius: --annonce-radius;
  }
  .rounded-\[--avatar-radius\] {
    border-radius: --avatar-radius;
  }
  .rounded-\[--badge-radius\] {
    border-radius: --badge-radius;
  }
  .rounded-\[--btn-border-radius\] {
    border-radius: --btn-border-radius;
  }
  .rounded-\[--btn-radius\] {
    border-radius: --btn-radius;
  }
  .rounded-\[--card-radius\] {
    border-radius: --card-radius;
  }
  .rounded-\[--input-radius\] {
    border-radius: --input-radius;
  }
  .rounded-\[2px\] {
    border-radius: 2px;
  }
  .rounded-\[2rem\] {
    border-radius: 2rem;
  }
  .rounded-\[20px\] {
    border-radius: 20px;
  }
  .rounded-\[100\%\] {
    border-radius: 100%;
  }
  .rounded-\[calc\(var\(--avatar-radius\)\+8px\)\] {
    border-radius: calc(var(--avatar-radius) + 8px);
  }
  .rounded-\[calc\(var\(--avatar-radius\)-2px\)\] {
    border-radius: calc(var(--avatar-radius) - 2px);
  }
  .rounded-\[calc\(var\(--btn-radius\)\+0\.5rem\)\] {
    border-radius: calc(var(--btn-radius) + 0.5rem);
  }
  .rounded-\[calc\(var\(--btn-radius\)\+0\.25rem\)\] {
    border-radius: calc(var(--btn-radius) + 0.25rem);
  }
  .rounded-\[calc\(var\(--btn-radius\)\+0\.75rem\)\] {
    border-radius: calc(var(--btn-radius) + 0.75rem);
  }
  .rounded-\[calc\(var\(--btn-radius\)\+6px\)\] {
    border-radius: calc(var(--btn-radius) + 6px);
  }
  .rounded-\[calc\(var\(--btn-radius\)-2px\)\] {
    border-radius: calc(var(--btn-radius) - 2px);
  }
  .rounded-\[calc\(var\(--btn-radius\)-3px\)\] {
    border-radius: calc(var(--btn-radius) - 3px);
  }
  .rounded-\[calc\(var\(--card-radius\)\+6px\)\] {
    border-radius: calc(var(--card-radius) + 6px);
  }
  .rounded-\[calc\(var\(--card-radius\)-4px\)\] {
    border-radius: calc(var(--card-radius) - 4px);
  }
  .rounded-\[calc\(var\(--card-radius\)-8px\)\] {
    border-radius: calc(var(--card-radius) - 8px);
  }
  .rounded-\[inherit\] {
    border-radius: inherit;
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-field {
    border-radius: var(--radius-field);
  }
  .rounded-field {
    border-radius: var(--radius-field);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-none {
    border-radius: 0;
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-t {
    border-top-left-radius: 0.25rem;
    border-top-right-radius: 0.25rem;
  }
  .rounded-t-2xl {
    border-top-left-radius: var(--radius-2xl);
    border-top-right-radius: var(--radius-2xl);
  }
  .rounded-t-\[--btn-radius\] {
    border-top-left-radius: --btn-radius;
    border-top-right-radius: --btn-radius;
  }
  .rounded-t-\[--card-radius\] {
    border-top-left-radius: --card-radius;
    border-top-right-radius: --card-radius;
  }
  .rounded-t-\[7px\] {
    border-top-left-radius: 7px;
    border-top-right-radius: 7px;
  }
  .rounded-t-\[10px\] {
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
  }
  .rounded-t-\[calc\(var\(--card-radius\)-1\.5px\)\] {
    border-top-left-radius: calc(var(--card-radius) - 1.5px);
    border-top-right-radius: calc(var(--card-radius) - 1.5px);
  }
  .rounded-t-\[calc\(var\(--card-radius\)-1px\)\] {
    border-top-left-radius: calc(var(--card-radius) - 1px);
    border-top-right-radius: calc(var(--card-radius) - 1px);
  }
  .rounded-t-full {
    border-top-left-radius: calc(infinity * 1px);
    border-top-right-radius: calc(infinity * 1px);
  }
  .rounded-t-lg {
    border-top-left-radius: var(--radius-lg);
    border-top-right-radius: var(--radius-lg);
  }
  .rounded-t-md {
    border-top-left-radius: var(--radius-md);
    border-top-right-radius: var(--radius-md);
  }
  .rounded-l-\[--card-radius\] {
    border-top-left-radius: --card-radius;
    border-bottom-left-radius: --card-radius;
  }
  .rounded-l-\[calc\(var\(--btn-radius\)\+8px\)\] {
    border-top-left-radius: calc(var(--btn-radius) + 8px);
    border-bottom-left-radius: calc(var(--btn-radius) + 8px);
  }
  .rounded-tl-sm {
    border-top-left-radius: var(--radius-sm);
  }
  .rounded-r-\[--btn-radius\] {
    border-top-right-radius: --btn-radius;
    border-bottom-right-radius: --btn-radius;
  }
  .rounded-r-\[--card-radius\] {
    border-top-right-radius: --card-radius;
    border-bottom-right-radius: --card-radius;
  }
  .rounded-b-\[--card-border-radius\] {
    border-bottom-right-radius: --card-border-radius;
    border-bottom-left-radius: --card-border-radius;
  }
  .rounded-b-\[--card-radius\] {
    border-bottom-right-radius: --card-radius;
    border-bottom-left-radius: --card-radius;
  }
  .text-border-primary {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-primary);
    background-color: var(--color-base-100);
    color: var(--color-primary);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-\[1\.5px\] {
    border-style: var(--tw-border-style);
    border-width: 1.5px;
  }
  .btn-gradient {
    border-width: 2px;
    transition-property: background-position, box-shadow;
    transition-timing-function: ease-in-out;
    transition-duration: 0.4s;
    background-color: transparent;
    --btn-shadow: 0px 1px 3px 0px var(--btn-color, var(--color-neutral)),
    0px 1px 2px -1px var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --btn-shadow: 0px 1px 3px 0px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
    0px 1px 2px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
    }
    --btn-border: var(--btn-color, var(--color-neutral));
    --dark-shade: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --dark-shade: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 80%, black);
    }
    background-size: 200% auto;
    background-image: linear-gradient( 102deg, var(--btn-color, var(--color-neutral)) 0%, var(--dark-shade) 51%, var(--btn-color, var(--color-neutral)) 100% );
    @media (hover: hover) {
      &:hover {
        --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
        0px 2px 4px -2px var(--btn-color, var(--color-neutral));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
        0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
        }
        background-position: 99% center;
      }
    }
    &:focus-visible {
      --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
      0px 2px 4px -2px var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
      0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
      }
      background-position: 99% center;
    }
    &.btn-active {
      --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
    0px 2px 4px -2px var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
    0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
      }
      background-position: 99% center;
    }
  }
  .btn-text {
    --btn-shadow: "";
    color: var(--btn-color, var(--color-neutral));
    --btn-bg: "";
    --btn-border: "";
    --btn-noise: none;
    border-width: 0;
    outline-color: var(--btn-color, var(--color-neutral));
    @media (hover: hover) {
      &:hover {
        --btn-bg: var(--btn-color, var(--color-neutral));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
        }
      }
    }
    &:focus-visible {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
    &.btn-active {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
  }
  .btn-soft {
    --btn-shadow: "";
    color: var(--btn-color, var(--color-neutral));
    --btn-bg: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, var(--color-base-100));
    }
    border-width: 0;
    --btn-noise: none;
    &:focus-visible {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
      }
    }
    @media (hover: hover) {
      &:hover {
        --btn-bg: var(--btn-color, var(--color-neutral));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
        }
      }
    }
    &.btn-active {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
      }
    }
  }
  .border-x {
    border-inline-style: var(--tw-border-style);
    border-inline-width: 1px;
  }
  .border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }
  .border-y-0 {
    border-block-style: var(--tw-border-style);
    border-block-width: 0px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-r-0 {
    border-right-style: var(--tw-border-style);
    border-right-width: 0px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-0 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-l-0 {
    border-left-style: var(--tw-border-style);
    border-left-width: 0px;
  }
  .border-l-2 {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
  }
  .border-l-\[1\.5px\] {
    border-left-style: var(--tw-border-style);
    border-left-width: 1.5px;
  }
  .\!border-none {
    --tw-border-style: none !important;
    border-style: none !important;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .input {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      border-color: var(--color-success);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-success);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      border-color: var(--color-error);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-error);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    &.is-valid::file-selector-button {
      background-color: var(--color-success);
      color: var(--color-success-content);
      --input-color: var(--color-success);
    }
    .validate &:valid::file-selector-button {
      background-color: var(--color-success);
      color: var(--color-success-content);
      --input-color: var(--color-success);
    }
    &.is-invalid::file-selector-button {
      background-color: var(--color-error);
      color: var(--color-error-content);
      --input-color: var(--color-error);
    }
    .validate &:invalid::file-selector-button {
      background-color: var(--color-error);
      color: var(--color-error-content);
      --input-color: var(--color-error);
    }
    .input-floating > &.is-valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    .validate .input-floating > &:valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    .input-floating > &.is-invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    .validate .input-floating > &:invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
  }
  .input-floating {
    & > .input.is-valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    .validate & > .input:valid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    & > .input.is-invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    .validate & > .input:invalid::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    &:has(.is-valid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      .input-floating-label {
        color: var(--color-success);
      }
      &:not(:has(input:-moz-placeholder-shown)) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
    }
    .validate &:has(:valid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      .input-floating-label {
        color: var(--color-success);
      }
      &:not(:has(input:-moz-placeholder-shown)) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
    }
    &:has(.is-invalid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      .input-floating-label {
        color: var(--color-error);
      }
      &:not(:has(input:-moz-placeholder-shown)) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
    }
    .validate &:has(:invalid) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      .input-floating-label {
        color: var(--color-error);
      }
      &:not(:has(input:-moz-placeholder-shown)) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
    }
  }
  .is-invalid {
    .input&::file-selector-button {
      background-color: var(--color-error);
      color: var(--color-error-content);
      --input-color: var(--color-error);
    }
    .input-floating > .input&::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-error);
    }
    .label-text:has(~ &) {
      color: var(--color-error);
    }
    .label-text:has(~ * &) {
      color: var(--color-error);
    }
    :is(&) ~ .helper-text {
      color: var(--color-error);
    }
    *:has(&) ~ .helper-text {
      color: var(--color-error);
    }
    :is(&) ~ .label-text {
      color: var(--color-error);
    }
    :is(&) ~ .label-text * {
      color: var(--color-error);
    }
    :is(&) ~ * >.label-text {
      color: var(--color-error);
    }
    select& + .advance-select-toggle {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    .advance-select-tag:has(> &) {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    .input-floating:has(&) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      .input-floating-label {
        color: var(--color-error);
      }
      &:not(:has(input:-moz-placeholder-shown)) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-error);
        }
      }
    }
    .textarea-floating:has(&) {
      .textarea-floating-label {
        color: var(--color-error);
      }
      &:not(:has(textarea:-moz-placeholder-shown)) {
        .textarea-floating-label {
          color: var(--color-error);
        }
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-error);
        }
      }
    }
    .select-floating:has(&) {
      .select-floating-label {
        color: var(--color-error);
      }
      &:not(:has(select:-moz-placeholder-shown)) {
        .select-floating-label {
          color: var(--color-error);
        }
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-error);
        }
      }
    }
  }
  .is-valid {
    .input&::file-selector-button {
      background-color: var(--color-success);
      color: var(--color-success-content);
      --input-color: var(--color-success);
    }
    .input-floating > .input&::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-success);
    }
    .label-text:has(~ &) {
      color: var(--color-success);
    }
    .label-text:has(~ * &) {
      color: var(--color-success);
    }
    :is(&) ~ .helper-text {
      color: var(--color-success);
    }
    *:has(&) ~ .helper-text {
      color: var(--color-success);
    }
    :is(&) ~ .label-text {
      color: var(--color-success);
    }
    :is(&) ~ .label-text * {
      color: var(--color-success);
    }
    :is(&) ~ * >.label-text {
      color: var(--color-success);
    }
    select& + .advance-select-toggle {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    .advance-select-tag:has(> &) {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    .input-floating:has(&) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      .input-floating-label {
        color: var(--color-success);
      }
      &:not(:has(input:-moz-placeholder-shown)) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
      &:focus-within, &:not(:has(input:placeholder-shown)), &:has(.input:focus) {
        .input-floating-label {
          color: var(--color-success);
        }
      }
    }
    .textarea-floating:has(&) {
      .textarea-floating-label {
        color: var(--color-success);
      }
      &:not(:has(textarea:-moz-placeholder-shown)) {
        .textarea-floating-label {
          color: var(--color-success);
        }
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-success);
        }
      }
    }
    .select-floating:has(&) {
      .select-floating-label {
        color: var(--color-success);
      }
      &:not(:has(select:-moz-placeholder-shown)) {
        .select-floating-label {
          color: var(--color-success);
        }
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-success);
        }
      }
    }
  }
  .checkbox {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      --input-color: var(--color-success);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      --input-color: var(--color-error);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-error);
      }
    }
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      color: var(--color-success-content);
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      color: var(--color-error-content);
    }
  }
  .select {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      border-color: var(--color-success);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-success);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      border-color: var(--color-error);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-error);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .textarea {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      border-color: var(--color-success);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-success);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-success);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      border-color: var(--color-error);
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-error);
        }
      }
      &:has(:hover):not(:focus, :focus-within) {
        border-color: var(--color-error);
      }
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .radio {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      --input-color: var(--color-success);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      --input-color: var(--color-error);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-error);
      }
    }
  }
  .radio-inset {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      --input-color: var(--color-success);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      --input-color: var(--color-error);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-error);
      }
    }
  }
  .switch {
    &.is-valid, &:has(.is-valid), .validate &:valid, .validate &:has(:valid) {
      --input-color: var(--color-success);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-success);
      }
    }
    &.is-invalid, &:has(.is-invalid), .validate &:invalid, .validate &:has(:invalid) {
      --input-color: var(--color-error);
      border-color: var(--input-color);
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        --input-color: var(--color-error);
      }
    }
  }
  .\!border-base-content\/40 {
    border-color: var(--color-base-content) !important;
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 40%, transparent) !important;
    }
  }
  .\!border-gray-200 {
    border-color: var(--color-gray-200) !important;
  }
  .\!border-gray-800 {
    border-color: var(--color-gray-800) !important;
  }
  .border-\[--color-border\] {
    border-color: --color-border;
  }
  .border-\[--input-border\] {
    border-color: --input-border;
  }
  .border-\[--ui-bg\] {
    border-color: --ui-bg;
  }
  .border-\[--ui-border-color\] {
    border-color: --ui-border-color;
  }
  .border-\[var\(--ui-border-color\)\] {
    border-color: var(--ui-border-color);
  }
  .border-base-content\/20 {
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .border-base-content\/25 {
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
    }
  }
  .border-base-content\/40 {
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }
  .border-error {
    border-color: var(--color-error);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-500\/15 {
    border-color: var(--color-gray-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-gray-500) 15%, transparent);
    }
  }
  .border-gray-500\/20 {
    border-color: var(--color-gray-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-gray-500) 20%, transparent);
    }
  }
  .border-gray-700 {
    border-color: var(--color-gray-700);
  }
  .border-gray-800 {
    border-color: var(--color-gray-800);
  }
  .border-gray-950 {
    border-color: var(--color-gray-950);
  }
  .border-gray-950\/5 {
    border-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-gray-950) 5%, transparent);
    }
  }
  .border-gray-950\/10 {
    border-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-gray-950) 10%, transparent);
    }
  }
  .border-gray-950\/\[0\.07\] {
    border-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-gray-950) 7.000000000000001%, transparent);
    }
  }
  .border-info {
    border-color: var(--color-info);
  }
  .border-info-500 {
    border-color: var(--color-info-500);
  }
  .border-info-500\/15 {
    border-color: var(--color-info-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-info-500) 15%, transparent);
    }
  }
  .border-info-500\/20 {
    border-color: var(--color-info-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-info-500) 20%, transparent);
    }
  }
  .border-primary {
    border-color: var(--color-primary);
  }
  .border-primary-200 {
    border-color: var(--color-primary-200);
  }
  .border-primary-500\/15 {
    border-color: var(--color-primary-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-primary-500) 15%, transparent);
    }
  }
  .border-primary-500\/20 {
    border-color: var(--color-primary-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-primary-500) 20%, transparent);
    }
  }
  .border-primary-600 {
    border-color: var(--color-primary-600);
  }
  .border-primary-700 {
    border-color: var(--color-primary-700);
  }
  .border-secondary {
    border-color: var(--color-secondary);
  }
  .border-secondary-500\/15 {
    border-color: var(--color-secondary-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-secondary-500) 15%, transparent);
    }
  }
  .border-secondary-600 {
    border-color: var(--color-secondary-600);
  }
  .border-secondary-700 {
    border-color: var(--color-secondary-700);
  }
  .border-secondary\/15 {
    border-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-secondary) 15%, transparent);
    }
  }
  .border-success {
    border-color: var(--color-success);
  }
  .border-success-500\/15 {
    border-color: var(--color-success-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-success-500) 15%, transparent);
    }
  }
  .border-success-500\/25 {
    border-color: var(--color-success-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-success-500) 25%, transparent);
    }
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-warning {
    border-color: var(--color-warning);
  }
  .border-warning-500\/15 {
    border-color: var(--color-warning-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-warning-500) 15%, transparent);
    }
  }
  .border-warning-500\/25 {
    border-color: var(--color-warning-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-warning-500) 25%, transparent);
    }
  }
  .border-white\/5 {
    border-color: color-mix(in srgb, #fff 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }
  .border-white\/10 {
    border-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .border-white\/50 {
    border-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .border-t-transparent {
    border-top-color: transparent;
  }
  .border-t-white {
    border-top-color: var(--color-white);
  }
  .border-b-gray-200 {
    border-bottom-color: var(--color-gray-200);
  }
  .border-b-gray-950 {
    border-bottom-color: var(--color-gray-950);
  }
  .border-l-transparent {
    border-left-color: transparent;
  }
  .glass {
    border: none;
    -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
            backdrop-filter: blur(var(--glass-blur, 40px));
    background-color: #0000;
    background-image: linear-gradient(135deg, oklch(100% 0 0 / var(--glass-opacity, 30%)) 0%, oklch(0% 0 0 / 0%) 100%), linear-gradient( var(--glass-reflect-degree, 100deg), oklch(100% 0 0 / var(--glass-reflect-opacity, 5%)) 25%, oklch(0% 0 0 / 0%) 25% );
    box-shadow: 0 0 0 1px oklch(100% 0 0 / var(--glass-border-opacity, 20%)) inset, 0 0 0 2px oklch(0% 0 0 / 5%);
    text-shadow: 0 1px oklch(0% 0 0 / var(--glass-text-shadow-opacity, 5%));
  }
  .input-floating {
    & .input::file-selector-button {
      background-color: var(--color-base-100);
      color: var(--color-base-content);
      border-inline-end: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-inline-end: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
      }
      outline: none;
    }
  }
  .dropdown-active {
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
    color: var(--color-primary);
  }
  .progress-primary {
    background-color: var(--color-primary);
    color: var(--color-primary-content);
  }
  .text-bg-primary {
    background-color: var(--color-primary);
    color: var(--color-primary-content);
  }
  .text-bg-soft-primary {
    color: var(--color-primary);
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 10%, var(--color-base-100));
    }
  }
  .\!bg-base-100 {
    background-color: var(--color-base-100) !important;
  }
  .\!bg-gray-950 {
    background-color: var(--color-gray-950) !important;
  }
  .\!bg-transparent {
    background-color: transparent !important;
  }
  .\!bg-white {
    background-color: var(--color-white) !important;
  }
  .bg-\[\#28282D\] {
    background-color: #28282D;
  }
  .bg-\[\#F7F7F7\] {
    background-color: #F7F7F7;
  }
  .bg-\[\#a3e635\] {
    background-color: #a3e635;
  }
  .bg-\[\#efefef\] {
    background-color: #efefef;
  }
  .bg-\[\#f87171\] {
    background-color: #f87171;
  }
  .bg-\[\#fbbf24\] {
    background-color: #fbbf24;
  }
  .bg-\[\#ff9066\] {
    background-color: #ff9066;
  }
  .bg-\[--color-bg\] {
    background-color: --color-bg;
  }
  .bg-\[--ui-bg\] {
    background-color: --ui-bg;
  }
  .bg-\[--ui-border-color\] {
    background-color: --ui-border-color;
  }
  .bg-\[--ui-soft-bg\] {
    background-color: --ui-soft-bg;
  }
  .bg-accent {
    background-color: var(--color-accent);
  }
  .bg-accent-400 {
    background-color: var(--color-accent-400);
  }
  .bg-base-100 {
    background-color: var(--color-base-100);
  }
  .bg-base-200 {
    background-color: var(--color-base-200);
  }
  .bg-base-200\/20 {
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 20%, transparent);
    }
  }
  .bg-base-300\/60 {
    background-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-300) 60%, transparent);
    }
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/80 {
    background-color: color-mix(in srgb, #000 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
  }
  .bg-error {
    background-color: var(--color-error);
  }
  .bg-error\/10 {
    background-color: var(--color-error);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-error) 10%, transparent);
    }
  }
  .bg-gray {
    background-color: var(--color-gray);
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-100\/50 {
    background-color: var(--color-gray-100);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-100) 50%, transparent);
    }
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-gray-500\/5 {
    background-color: var(--color-gray-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-500) 5%, transparent);
    }
  }
  .bg-gray-500\/10 {
    background-color: var(--color-gray-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-500) 10%, transparent);
    }
  }
  .bg-gray-500\/15 {
    background-color: var(--color-gray-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-500) 15%, transparent);
    }
  }
  .bg-gray-600 {
    background-color: var(--color-gray-600);
  }
  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }
  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }
  .bg-gray-950 {
    background-color: var(--color-gray-950);
  }
  .bg-gray-950\/5 {
    background-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-950) 5%, transparent);
    }
  }
  .bg-gray-950\/10 {
    background-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-950) 10%, transparent);
    }
  }
  .bg-gray-950\/\[0\.07\] {
    background-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-950) 7.000000000000001%, transparent);
    }
  }
  .bg-info {
    background-color: var(--color-info);
  }
  .bg-info-500\/15 {
    background-color: var(--color-info-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-info-500) 15%, transparent);
    }
  }
  .bg-info\/10 {
    background-color: var(--color-info);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-info) 10%, transparent);
    }
  }
  .bg-neutral {
    background-color: var(--color-neutral);
  }
  .bg-neutral-500 {
    background-color: var(--color-neutral-500);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-primary-50 {
    background-color: var(--color-primary-50);
  }
  .bg-primary-300 {
    background-color: var(--color-primary-300);
  }
  .bg-primary-500 {
    background-color: var(--color-primary-500);
  }
  .bg-primary-500\/5 {
    background-color: var(--color-primary-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary-500) 5%, transparent);
    }
  }
  .bg-primary-500\/15 {
    background-color: var(--color-primary-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary-500) 15%, transparent);
    }
  }
  .bg-primary-600 {
    background-color: var(--color-primary-600);
  }
  .bg-primary-600\/10 {
    background-color: var(--color-primary-600);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary-600) 10%, transparent);
    }
  }
  .bg-primary-950 {
    background-color: var(--color-primary-950);
  }
  .bg-primary\/10 {
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
  }
  .bg-primary\/75 {
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 75%, transparent);
    }
  }
  .bg-secondary {
    background-color: var(--color-secondary);
  }
  .bg-secondary-50 {
    background-color: var(--color-secondary-50);
  }
  .bg-secondary-500 {
    background-color: var(--color-secondary-500);
  }
  .bg-secondary-500\/15 {
    background-color: var(--color-secondary-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary-500) 15%, transparent);
    }
  }
  .bg-secondary-600 {
    background-color: var(--color-secondary-600);
  }
  .bg-secondary\/10 {
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
    }
  }
  .bg-secondary\/15 {
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 15%, transparent);
    }
  }
  .bg-success {
    background-color: var(--color-success);
  }
  .bg-success-500\/15 {
    background-color: var(--color-success-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success-500) 15%, transparent);
    }
  }
  .bg-success-600 {
    background-color: var(--color-success-600);
  }
  .bg-success\/10 {
    background-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success) 10%, transparent);
    }
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-ui {
    background-color: var(--color-ui);
  }
  .bg-ui-soft {
    background-color: var(--color-ui-soft);
  }
  .bg-warning {
    background-color: var(--color-warning);
  }
  .bg-warning-50 {
    background-color: var(--color-warning-50);
  }
  .bg-warning-500\/5 {
    background-color: var(--color-warning-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning-500) 5%, transparent);
    }
  }
  .bg-warning-500\/15 {
    background-color: var(--color-warning-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning-500) 15%, transparent);
    }
  }
  .bg-warning-600 {
    background-color: var(--color-warning-600);
  }
  .bg-warning\/10 {
    background-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/10 {
    background-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .bg-white\/50 {
    background-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .bg-white\/75 {
    background-color: color-mix(in srgb, #fff 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 75%, transparent);
    }
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-l {
    --tw-gradient-position: to left in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-tl {
    --tw-gradient-position: to top left in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .gradient-bg {
    --darker-shade: var(--gradient-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --darker-shade: color-mix(in oklab, var(--gradient-color, var(--color-neutral)) 80%, black);
    }
    background-image: linear-gradient( var(--gradient-angle, 135deg), var(--gradient-color, var(--color-neutral)) 0%, var(--darker-shade) 100% );
  }
  .\[background-image\:linear-gradient\(-45deg\,var\(--stripes-color\)_25\%\,transparent_25\%\,transparent_50\%\,var\(--stripes-color\)_50\%\,var\(--stripes-color\)_75\%\,transparent_75\%\,transparent\)\] {
    background-image: linear-gradient(-45deg,var(--stripes-color) 25%,transparent 25%,transparent 50%,var(--stripes-color) 50%,var(--stripes-color) 75%,transparent 75%,transparent);
  }
  .\[background-image\:linear-gradient\(to_bottom\,transparent_98\%\,theme\(colors\.gray\.200\/75\%\)_98\%\)\,linear-gradient\(to_right\,transparent_94\%\,_theme\(colors\.gray\.200\/75\%\)_94\%\)\] {
    background-image: linear-gradient(to bottom,transparent 98%,var(--neutral-200) 98%),linear-gradient(to right,transparent 94%, var(--neutral-200) 94%);
    @supports (color: color-mix(in lab, red, red)) {
      background-image: linear-gradient(to bottom,transparent 98%,color-mix(in oklab, var(--neutral-200) 75%, transparent) 98%),linear-gradient(to right,transparent 94%, color-mix(in oklab, var(--neutral-200) 75%, transparent) 94%);
    }
  }
  .\[background-image\:radial-gradient\(76\%_151\%_at_52\%_-52\%\,rgba\(255\,255\,255\,var\(--outline-radial-opacity\)\)_0\%\,transparent_100\%\)\] {
    background-image: radial-gradient(76% 151% at 52% -52%,rgba(255,255,255,var(--outline-radial-opacity)) 0%,transparent 100%);
  }
  .bg-\[image\:repeating-linear-gradient\(315deg\,_var\(--color\)_0\,_var\(--color\)_1px\,_transparent_0\,_transparent_50\%\)\] {
    background-image: repeating-linear-gradient(315deg, var(--color) 0, var(--color) 1px, transparent 0, transparent 50%);
  }
  .bg-\[linear-gradient\(to_right\,var\(--ui-border-color\)_1px\,transparent_1px\)\,linear-gradient\(to_bottom\,var\(--ui-border-color\)_1px\,transparent_1px\)\] {
    background-image: linear-gradient(to right,var(--ui-border-color) 1px,transparent 1px),linear-gradient(to bottom,var(--ui-border-color) 1px,transparent 1px);
  }
  .bg-\[radial-gradient\(\#e5e7eb_1px\,transparent_1px\)\] {
    background-image: radial-gradient(#e5e7eb 1px,transparent 1px);
  }
  .bg-\[radial-gradient\(50\%_50\%_at_50\%_50\%\,hsla\(0\,0\%\,85\%\,\.04\)_0\,hsla\(0\,0\%\,45\%\,\.02\)_80\%\,transparent_100\%\)\] {
    background-image: radial-gradient(50% 50% at 50% 50%,hsla(0,0%,85%,.04) 0,hsla(0,0%,45%,.02) 80%,transparent 100%);
  }
  .bg-\[radial-gradient\(50\%_50\%_at_50\%_50\%\,hsla\(0\,0\%\,85\%\,\.06\)_0\,hsla\(0\,0\%\,45\%\,\.02\)_80\%\,transparent_100\%\)\] {
    background-image: radial-gradient(50% 50% at 50% 50%,hsla(0,0%,85%,.06) 0,hsla(0,0%,45%,.02) 80%,transparent 100%);
  }
  .bg-\[radial-gradient\(68\.54\%_68\.72\%_at_55\.02\%_31\.46\%\,hsla\(0\,0\%\,85\%\,\.08\)_0\,hsla\(0\,0\%\,55\%\,\.02\)_50\%\,hsla\(0\,0\%\,45\%\,0\)_80\%\)\] {
    background-image: radial-gradient(68.54% 68.72% at 55.02% 31.46%,hsla(0,0%,85%,.08) 0,hsla(0,0%,55%,.02) 50%,hsla(0,0%,45%,0) 80%);
  }
  .bg-\[radial-gradient\(ellipse_80\%_70\%_at_20\%_-20\%\,var\(--bg-color\)\,bg-transparent\)\] {
    background-image: radial-gradient(ellipse 80% 70% at 20% -20%,var(--bg-color),bg-transparent);
  }
  .bg-\[radial-gradient\(ellipse_80\%_90\%_at_20\%_-5\%\,var\(--bg-color\)\,bg-transparent\)\] {
    background-image: radial-gradient(ellipse 80% 90% at 20% -5%,var(--bg-color),bg-transparent);
  }
  .bg-\[radial-gradient\(var\(--bg-color\)_1px\,transparent_1px\)\] {
    background-image: radial-gradient(var(--bg-color) 1px,transparent 1px);
  }
  .bg-\[repeating-linear-gradient\(-45deg\,var\(--stripes-color\)\,var\(--stripes-color\)_0\.5px\,bg-transparent_0\.5px\,bg-transparent_6px\)\] {
    background-image: repeating-linear-gradient(-45deg,var(--stripes-color),var(--stripes-color) 0.5px,bg-transparent 0.5px,bg-transparent 6px);
  }
  .bg-none {
    background-image: none;
  }
  .from-\[--title-text-color\] {
    --tw-gradient-from: --title-text-color;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[--ui-bg\] {
    --tw-gradient-from: --ui-bg;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[--ui-border-color\] {
    --tw-gradient-from: --ui-border-color;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[--ui-soft-bg\] {
    --tw-gradient-from: --ui-soft-bg;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-accent-500\/10 {
    --tw-gradient-from: var(--color-accent-500);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-accent-500) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-accent-600 {
    --tw-gradient-from: var(--color-accent-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-base-100\/10 {
    --tw-gradient-from: var(--color-base-100);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-base-100) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-500 {
    --tw-gradient-from: var(--color-blue-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-50 {
    --tw-gradient-from: var(--color-gray-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-100 {
    --tw-gradient-from: var(--color-gray-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-300\/75 {
    --tw-gradient-from: var(--color-gray-300);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-300) 75%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-400 {
    --tw-gradient-from: var(--color-gray-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-500 {
    --tw-gradient-from: var(--color-gray-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-700 {
    --tw-gradient-from: var(--color-gray-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-800 {
    --tw-gradient-from: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-950\/\[0\.07\] {
    --tw-gradient-from: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-950) 7.000000000000001%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-info-500 {
    --tw-gradient-from: var(--color-info-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-primary {
    --tw-gradient-from: var(--color-primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-primary-300 {
    --tw-gradient-from: var(--color-primary-300);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-primary-500 {
    --tw-gradient-from: var(--color-primary-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-primary-600 {
    --tw-gradient-from: var(--color-primary-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-purple-400 {
    --tw-gradient-from: var(--color-purple-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-secondary-500 {
    --tw-gradient-from: var(--color-secondary-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-success-500 {
    --tw-gradient-from: var(--color-success-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-warning-500 {
    --tw-gradient-from: var(--color-warning-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white {
    --tw-gradient-from: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/15 {
    --tw-gradient-from: color-mix(in srgb, #fff 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-85\% {
    --tw-gradient-from-position: 85%;
  }
  .via-\[--ui-border-color\] {
    --tw-gradient-via: --ui-border-color;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-primary-600\/75 {
    --tw-gradient-via: var(--color-primary-600);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-primary-600) 75%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-transparent {
    --tw-gradient-via: transparent;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-white {
    --tw-gradient-via: var(--color-white);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-\[--ui-bg\] {
    --tw-gradient-to: --ui-bg;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[--ui-border-color\] {
    --tw-gradient-to: --ui-border-color;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[--ui-soft-bg\] {
    --tw-gradient-to: --ui-soft-bg;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-accent-400 {
    --tw-gradient-to: var(--color-accent-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-accent-500 {
    --tw-gradient-to: var(--color-accent-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-blue-600 {
    --tw-gradient-to: var(--color-blue-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-error {
    --tw-gradient-to: var(--color-error);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-gray-50 {
    --tw-gradient-to: var(--color-gray-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-gray-400\/50 {
    --tw-gradient-to: var(--color-gray-400);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-gray-400) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-gray-600 {
    --tw-gradient-to: var(--color-gray-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-gray-900 {
    --tw-gradient-to: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-gray-950 {
    --tw-gradient-to: var(--color-gray-950);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-gray-950\/95 {
    --tw-gradient-to: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-gray-950) 95%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-info-400 {
    --tw-gradient-to: var(--color-info-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-primary-500 {
    --tw-gradient-to: var(--color-primary-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-primary-600 {
    --tw-gradient-to: var(--color-primary-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-primary-700 {
    --tw-gradient-to: var(--color-primary-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-primary-900 {
    --tw-gradient-to: var(--color-primary-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-primary\/10 {
    --tw-gradient-to: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-secondary-600 {
    --tw-gradient-to: var(--color-secondary-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-white {
    --tw-gradient-to: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-75\% {
    --tw-gradient-to-position: 75%;
  }
  .loading-spinner {
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
            mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
  }
  .mask-decagon {
    -webkit-mask-image: url("data:image/svg+xml,%3csvg width='192' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 58.779 19.098 36.327 50v61.804l-36.327 50L96 200l-58.779-19.098-36.327-50V69.098l36.327-50z' fill-rule='evenodd'/%3e%3c/svg%3e");
            mask-image: url("data:image/svg+xml,%3csvg width='192' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 58.779 19.098 36.327 50v61.804l-36.327 50L96 200l-58.779-19.098-36.327-50V69.098l36.327-50z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-heart {
    -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
            mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
  }
  .mask-hexagon-2 {
    -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
            mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
  }
  .\[background-size\:5px_5px\] {
    background-size: 5px 5px;
  }
  .\[background-size\:6px_6px\] {
    background-size: 6px 6px;
  }
  .\[background-size\:16px_16px\] {
    background-size: 16px 16px;
  }
  .\[background-size\:16px_35px\] {
    background-size: 16px 35px;
  }
  .bg-\[size\:10px_10px\] {
    background-size: 10px 10px;
  }
  .bg-\[size\:24px_24px\] {
    background-size: 24px 24px;
  }
  .bg-fixed {
    background-attachment: fixed;
  }
  .bg-clip-text {
    -webkit-background-clip: text;
            background-clip: text;
  }
  .mask {
    -webkit-mask-size: contain;
            mask-size: contain;
    -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat;
    -webkit-mask-position: center;
            mask-position: center;
  }
  .fill-black {
    fill: var(--color-black);
  }
  .fill-current {
    fill: currentcolor;
  }
  .fill-gray-200 {
    fill: var(--color-gray-200);
  }
  .fill-gray-500 {
    fill: var(--color-gray-500);
  }
  .fill-red-500 {
    fill: var(--color-red-500);
  }
  .fill-white {
    fill: var(--color-white);
  }
  .fill-white\/70 {
    fill: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      fill: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .object-cover {
    -o-object-fit: cover;
       object-fit: cover;
  }
  .object-top {
    -o-object-position: top;
       object-position: top;
  }
  .checkbox-md {
    padding: calc(0.25rem * 0.5);
    --size: calc(var(--size-selector, 0.25rem) * 6);
  }
  .checkbox-sm {
    padding: calc(0.25rem * 0.5);
    --size: calc(var(--size-selector, 0.25rem) * 5);
  }
  .checkbox-xl {
    padding: calc(0.25rem * 1.5);
    --size: calc(var(--size-selector, 0.25rem) * 8);
  }
  .radio-md {
    padding: 0.25rem;
    &:is([type="radio"]) {
      --size: calc(var(--size-selector, 0.25rem) * 6);
    }
  }
  .radio-xl {
    padding: 0.375rem;
    &:is([type="radio"]) {
      --size: calc(var(--size-selector, 0.25rem) * 8);
    }
  }
  .\!p-0 {
    padding: calc(var(--spacing) * 0) !important;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-0\.5 {
    padding: calc(var(--spacing) * 0.5);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-2\.5 {
    padding: calc(var(--spacing) * 2.5);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: var(--spacing-5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-9 {
    padding: calc(var(--spacing) * 9);
  }
  .p-\[--card-padding\] {
    padding: --card-padding;
  }
  .p-\[--feedback-padding\] {
    padding: --feedback-padding;
  }
  .p-\[1px\] {
    padding: 1px;
  }
  .p-\[58px\] {
    padding: 58px;
  }
  .p-\[calc\(var\(--card-padding\)\/2\)\] {
    padding: calc(var(--card-padding) / 2);
  }
  .p-px {
    padding: 1px;
  }
  .table-xl {
    :where(thead, tfoot) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    :not(thead, tfoot) tr {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 6);
      padding-block: calc(0.25rem * 5);
    }
  }
  .badge-md {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --size: calc(var(--size-selector, 0.25rem) * 6);
    padding-inline: calc(0.25rem * 3);
  }
  .badge-sm {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --size: calc(var(--size-selector, 0.25rem) * 5);
    padding-inline: calc(0.25rem * 2);
  }
  .badge-xl {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --size: calc(var(--size-selector, 0.25rem) * 8);
    padding-inline: calc(0.25rem * 4);
  }
  .\!px-0 {
    padding-inline: calc(var(--spacing) * 0) !important;
  }
  .\!px-1 {
    padding-inline: calc(var(--spacing) * 1) !important;
  }
  .\!px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5) !important;
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-3\.5 {
    padding-inline: calc(var(--spacing) * 3.5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: var(--spacing-5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-7 {
    padding-inline: calc(var(--spacing) * 7);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-\[--card-padding\] {
    padding-inline: --card-padding;
  }
  .\!py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5) !important;
  }
  .\!py-px {
    padding-block: 1px !important;
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-3\.5 {
    padding-block: calc(var(--spacing) * 3.5);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .py-24 {
    padding-block: calc(var(--spacing) * 24);
  }
  .py-28 {
    padding-block: calc(var(--spacing) * 28);
  }
  .py-32 {
    padding-block: calc(var(--spacing) * 32);
  }
  .py-36 {
    padding-block: calc(var(--spacing) * 36);
  }
  .py-px {
    padding-block: 1px;
  }
  .ps-3 {
    padding-inline-start: calc(var(--spacing) * 3);
  }
  .ps-9 {
    padding-inline-start: calc(var(--spacing) * 9);
  }
  .pe-0 {
    padding-inline-end: calc(var(--spacing) * 0);
  }
  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }
  .pt-0\.5 {
    padding-top: calc(var(--spacing) * 0.5);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-1\.5 {
    padding-top: calc(var(--spacing) * 1.5);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pt-2\.5 {
    padding-top: calc(var(--spacing) * 2.5);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-12 {
    padding-top: calc(var(--spacing) * 12);
  }
  .pt-16 {
    padding-top: calc(var(--spacing) * 16);
  }
  .pt-20 {
    padding-top: calc(var(--spacing) * 20);
  }
  .pt-24 {
    padding-top: calc(var(--spacing) * 24);
  }
  .pt-\[52px\] {
    padding-top: 52px;
  }
  .pt-\[56px\] {
    padding-top: 56px;
  }
  .pt-px {
    padding-top: 1px;
  }
  .\!pr-1 {
    padding-right: calc(var(--spacing) * 1) !important;
  }
  .\!pr-12 {
    padding-right: calc(var(--spacing) * 12) !important;
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pr-2\.5 {
    padding-right: calc(var(--spacing) * 2.5);
  }
  .pr-3 {
    padding-right: calc(var(--spacing) * 3);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pr-5 {
    padding-right: var(--spacing-5);
  }
  .pr-6 {
    padding-right: calc(var(--spacing) * 6);
  }
  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }
  .\!pb-0 {
    padding-bottom: calc(var(--spacing) * 0) !important;
  }
  .pb-0\.5 {
    padding-bottom: calc(var(--spacing) * 0.5);
  }
  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }
  .pb-1\.5 {
    padding-bottom: calc(var(--spacing) * 1.5);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pb-12 {
    padding-bottom: calc(var(--spacing) * 12);
  }
  .pb-16 {
    padding-bottom: calc(var(--spacing) * 16);
  }
  .pb-36 {
    padding-bottom: calc(var(--spacing) * 36);
  }
  .pb-40 {
    padding-bottom: calc(var(--spacing) * 40);
  }
  .pb-px {
    padding-bottom: 1px;
  }
  .pl-0\.5 {
    padding-left: calc(var(--spacing) * 0.5);
  }
  .pl-1 {
    padding-left: calc(var(--spacing) * 1);
  }
  .pl-1\.5 {
    padding-left: calc(var(--spacing) * 1.5);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-2\.5 {
    padding-left: calc(var(--spacing) * 2.5);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-5 {
    padding-left: var(--spacing-5);
  }
  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }
  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }
  .pl-11 {
    padding-left: calc(var(--spacing) * 11);
  }
  .pl-12 {
    padding-left: calc(var(--spacing) * 12);
  }
  .pl-16 {
    padding-left: calc(var(--spacing) * 16);
  }
  .pl-56 {
    padding-left: calc(var(--spacing) * 56);
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .text-justify {
    text-align: justify;
  }
  .text-left {
    text-align: left;
  }
  .text-start {
    text-align: start;
  }
  .align-baseline {
    vertical-align: baseline;
  }
  .align-bottom {
    vertical-align: bottom;
  }
  .align-middle {
    vertical-align: middle;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .modal-title {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-base-content);
  }
  .card-lg {
    --card-p: 2rem;
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    .card-title {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .card-md {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --card-p: 1.5rem;
    .card-title {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .card-sm {
    --card-p: 1rem;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    .card-title {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .card-xl {
    --card-p: 2.5rem;
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    .card-title {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .card-xs {
    --card-p: 0.5rem;
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    .card-title {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .btn-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --btn-p: 1.25rem;
    --size: calc(var(--size-field, 0.25rem) * 11.5);
  }
  .btn-md {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --btn-p: 1rem;
    --size: calc(var(--size-field, 0.25rem) * 9.5);
  }
  .btn-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --btn-p: 0.75rem;
    --size: calc(var(--size-field, 0.25rem) * 7.5);
  }
  .btn-xl {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --btn-p: 1.5rem;
    --size: calc(var(--size-field, 0.25rem) * 14);
  }
  .btn-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --btn-p: 0.5rem;
    --size: calc(var(--size-field, 0.25rem) * 6);
  }
  .pin-input-md {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --size: calc(var(--size-field, 0.25rem) * 9.5);
  }
  .pin-input-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --size: calc(var(--size-field, 0.25rem) * 14);
  }
  .pin-input-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --size: calc(var(--size-field, 0.25rem) * 6);
  }
  .\!text-sm {
    font-size: var(--text-sm) !important;
    line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
  }
  .input-md {
    &::file-selector-button {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .input-sm {
    &::file-selector-button {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .input-xl {
    &::file-selector-button {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .textarea-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .textarea-md {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .textarea-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .textarea-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .textarea-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[0\.8rem\] {
    font-size: 0.8rem;
  }
  .text-\[10px\] {
    font-size: 10px;
  }
  .text-\[11px\] {
    font-size: 11px;
  }
  .text-\[14px\] {
    font-size: 14px;
  }
  .text-\[15px\] {
    font-size: 15px;
  }
  .text-\[17px\] {
    font-size: 17px;
  }
  .text-\[52px\] {
    font-size: 52px;
  }
  .leading-2 {
    --tw-leading: calc(var(--spacing) * 2);
    line-height: calc(var(--spacing) * 2);
  }
  .leading-\[24px\] {
    --tw-leading: 24px;
    line-height: 24px;
  }
  .leading-\[60px\] {
    --tw-leading: 60px;
    line-height: 60px;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .leading-normal {
    --tw-leading: var(--leading-normal);
    line-height: var(--leading-normal);
  }
  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }
  .\!font-medium {
    --tw-font-weight: var(--font-weight-medium) !important;
    font-weight: var(--font-weight-medium) !important;
  }
  .\!font-semibold {
    --tw-font-weight: var(--font-weight-semibold) !important;
    font-weight: var(--font-weight-semibold) !important;
  }
  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .tracking-wide {
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }
  .tracking-widest {
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }
  .text-balance {
    text-wrap: balance;
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .btn-outline {
    --btn-shadow: "";
    --btn-bg: "";
    color: var(--btn-color, var(--color-neutral));
    --btn-border: var(--btn-color, var(--color-neutral));
    --btn-noise: none;
    outline-color: var(--btn-color, var(--color-neutral));
    @media (hover: hover) {
      &:hover {
        --btn-bg: var(--btn-color, var(--color-neutral));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
        }
      }
    }
    &:focus-visible {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
      outline-width: 1px;
    }
    &.btn-active {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
  }
  .helper-text {
    :is(.is-valid) ~ & {
      color: var(--color-success);
    }
    *:has(.is-valid) ~ & {
      color: var(--color-success);
    }
    .validate :is(:valid) ~ & {
      color: var(--color-success);
    }
    .validate *:has(:valid) ~ & {
      color: var(--color-success);
    }
    :is(.is-invalid) ~ & {
      color: var(--color-error);
    }
    *:has(.is-invalid) ~ & {
      color: var(--color-error);
    }
    .validate :is(:invalid) ~ & {
      color: var(--color-error);
    }
    .validate *:has(:invalid) ~ & {
      color: var(--color-error);
    }
  }
  .select-floating {
    &:has(.is-valid) {
      .select-floating-label {
        color: var(--color-success);
      }
      &:not(:has(select:-moz-placeholder-shown)) {
        .select-floating-label {
          color: var(--color-success);
        }
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-success);
        }
      }
    }
    .validate &:has(:valid) {
      .select-floating-label {
        color: var(--color-success);
      }
      &:not(:has(select:-moz-placeholder-shown)) {
        .select-floating-label {
          color: var(--color-success);
        }
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-success);
        }
      }
    }
    &:has(.is-invalid) {
      .select-floating-label {
        color: var(--color-error);
      }
      &:not(:has(select:-moz-placeholder-shown)) {
        .select-floating-label {
          color: var(--color-error);
        }
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-error);
        }
      }
    }
    .validate &:has(:invalid) {
      .select-floating-label {
        color: var(--color-error);
      }
      &:not(:has(select:-moz-placeholder-shown)) {
        .select-floating-label {
          color: var(--color-error);
        }
      }
      &:focus-within, &:not(:has(select:placeholder-shown)), &:has(.select:focus) {
        .select-floating-label {
          color: var(--color-error);
        }
      }
    }
  }
  .textarea-floating {
    &:has(.is-valid) {
      .textarea-floating-label {
        color: var(--color-success);
      }
      &:not(:has(textarea:-moz-placeholder-shown)) {
        .textarea-floating-label {
          color: var(--color-success);
        }
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-success);
        }
      }
    }
    .validate &:has(:valid) {
      .textarea-floating-label {
        color: var(--color-success);
      }
      &:not(:has(textarea:-moz-placeholder-shown)) {
        .textarea-floating-label {
          color: var(--color-success);
        }
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-success);
        }
      }
    }
    &:has(.is-invalid) {
      .textarea-floating-label {
        color: var(--color-error);
      }
      &:not(:has(textarea:-moz-placeholder-shown)) {
        .textarea-floating-label {
          color: var(--color-error);
        }
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-error);
        }
      }
    }
    .validate &:has(:invalid) {
      .textarea-floating-label {
        color: var(--color-error);
      }
      &:not(:has(textarea:-moz-placeholder-shown)) {
        .textarea-floating-label {
          color: var(--color-error);
        }
      }
      &:focus-within, &:not(:has(textarea:placeholder-shown)), &:has(.textarea:focus) {
        .textarea-floating-label {
          color: var(--color-error);
        }
      }
    }
  }
  .alert-error {
    color: var(--color-error-content);
    --alert-color: var(--color-error);
  }
  .alert-info {
    color: var(--color-info-content);
    --alert-color: var(--color-info);
  }
  .alert-primary {
    color: var(--color-primary-content);
    --alert-color: var(--color-primary);
  }
  .alert-success {
    color: var(--color-success-content);
    --alert-color: var(--color-success);
  }
  .alert-warning {
    color: var(--color-warning-content);
    --alert-color: var(--color-warning);
  }
  .\!text-base-content {
    color: var(--color-base-content) !important;
  }
  .\!text-gray-950 {
    color: var(--color-gray-950) !important;
  }
  .text-\(--color-button-text\) {
    color: var(--color-button-text);
  }
  .text-\[\#2a1711\] {
    color: #2a1711;
  }
  .text-\[\#4A63B1\] {
    color: #4A63B1;
  }
  .text-\[\#4d4d4d\] {
    color: #4d4d4d;
  }
  .text-\[\#05bdba\] {
    color: #05bdba;
  }
  .text-\[\#7c7b74\] {
    color: #7c7b74;
  }
  .text-\[\#38BDF8\] {
    color: #38BDF8;
  }
  .text-\[\#81A4CB\] {
    color: #81A4CB;
  }
  .text-\[\#014847\] {
    color: #014847;
  }
  .text-\[\#29363D\] {
    color: #29363D;
  }
  .text-\[\#b4b4b4\] {
    color: #b4b4b4;
  }
  .text-\[--body-text-color\] {
    color: --body-text-color;
  }
  .text-\[--caption-text-color\] {
    color: --caption-text-color;
  }
  .text-\[--title-text-color\] {
    color: --title-text-color;
  }
  .text-\[var\(--base-content\)\] {
    color: var(--base-content);
  }
  .text-\[var\(--title-text-color\)\] {
    color: var(--title-text-color);
  }
  .text-base-300\/20 {
    color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-300) 20%, transparent);
    }
  }
  .text-base-content {
    color: var(--color-base-content);
  }
  .text-base-content\/50 {
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
  }
  .text-base-content\/80 {
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
  }
  .text-base-content\/90 {
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 90%, transparent);
    }
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-current {
    color: currentcolor;
  }
  .text-cyan-500 {
    color: var(--color-cyan-500);
  }
  .text-error {
    color: var(--color-error);
  }
  .text-error-content {
    color: var(--color-error-content);
  }
  .text-gray-300 {
    color: var(--color-gray-300);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-gray-950 {
    color: var(--color-gray-950);
  }
  .text-info {
    color: var(--color-info);
  }
  .text-info-300 {
    color: var(--color-info-300);
  }
  .text-info-400 {
    color: var(--color-info-400);
  }
  .text-info-600 {
    color: var(--color-info-600);
  }
  .text-info-700 {
    color: var(--color-info-700);
  }
  .text-info-content {
    color: var(--color-info-content);
  }
  .text-neutral-content {
    color: var(--color-neutral-content);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-primary-200 {
    color: var(--color-primary-200);
  }
  .text-primary-300 {
    color: var(--color-primary-300);
  }
  .text-primary-300\/20 {
    color: var(--color-primary-300);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-primary-300) 20%, transparent);
    }
  }
  .text-primary-400 {
    color: var(--color-primary-400);
  }
  .text-primary-500\/20 {
    color: var(--color-primary-500);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-primary-500) 20%, transparent);
    }
  }
  .text-primary-600 {
    color: var(--color-primary-600);
  }
  .text-primary-800 {
    color: var(--color-primary-800);
  }
  .text-primary-content {
    color: var(--color-primary-content);
  }
  .text-purple-100 {
    color: var(--color-purple-100);
  }
  .text-secondary {
    color: var(--color-secondary);
  }
  .text-secondary-100 {
    color: var(--color-secondary-100);
  }
  .text-secondary-200 {
    color: var(--color-secondary-200);
  }
  .text-secondary-700 {
    color: var(--color-secondary-700);
  }
  .text-secondary-content {
    color: var(--color-secondary-content);
  }
  .text-success {
    color: var(--color-success);
  }
  .text-success-300 {
    color: var(--color-success-300);
  }
  .text-success-800 {
    color: var(--color-success-800);
  }
  .text-success-content {
    color: var(--color-success-content);
  }
  .text-transparent {
    color: transparent;
  }
  .text-warning {
    color: var(--color-warning);
  }
  .text-warning-200 {
    color: var(--color-warning-200);
  }
  .text-warning-700 {
    color: var(--color-warning-700);
  }
  .text-warning-800 {
    color: var(--color-warning-800);
  }
  .text-warning-content {
    color: var(--color-warning-content);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-yellow-400 {
    color: var(--color-yellow-400);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .tabular-nums {
    --tw-numeric-spacing: tabular-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .underline {
    text-decoration-line: underline;
  }
  .decoration-gray-950\/50 {
    text-decoration-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      text-decoration-color: color-mix(in oklab, var(--color-gray-950) 50%, transparent);
    }
  }
  .decoration-white\/50 {
    text-decoration-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      text-decoration-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .underline-offset-4 {
    text-underline-offset: 4px;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .placeholder-\[--placeholder-text-color\] {
    &::-moz-placeholder {
      color: --placeholder-text-color;
    }
    &::placeholder {
      color: --placeholder-text-color;
    }
  }
  .placeholder-gray-400 {
    &::-moz-placeholder {
      color: var(--color-gray-400);
    }
    &::placeholder {
      color: var(--color-gray-400);
    }
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-20 {
    opacity: 20%;
  }
  .opacity-25 {
    opacity: 25%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-60 {
    opacity: 60%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .opacity-75 {
    opacity: 75%;
  }
  .opacity-90 {
    opacity: 90%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .mix-blend-screen {
    mix-blend-mode: screen;
  }
  .\!shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1)) !important;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
  }
  .\!shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1)) !important;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-2xs {
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[0_0_0_1px_hsl\(var\(--sidebar-border\)\)\] {
    --tw-shadow: 0 0 0 1px var(--tw-shadow-color, hsl(var(--sidebar-border)));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-none {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-4 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .\[box-shadow\:rgba\(255\,255\,255\,0\.25\)_0px_1px_0px_0px_inset\,var\(--btn-border-color\)_0px_0px_0px_1px\] {
    box-shadow: rgba(255,255,255,0.25) 0px 1px 0px 0px inset,var(--btn-border-color) 0px 0px 0px 1px;
  }
  .\[box-shadow\:rgba\(255\,255\,255\,var\(--inner-border-color\)\)_0px_1px_0px_0px_inset\,var\(--btn-border-color\)_0px_0px_0px_1px\,0px_1px_2px_rgba\(0\,0\,0\,0\.1\)\] {
    box-shadow: rgba(255,255,255,var(--inner-border-color)) 0px 1px 0px 0px inset,var(--btn-border-color) 0px 0px 0px 1px,0px 1px 2px rgba(0,0,0,0.1);
  }
  .\!shadow-gray-950\/5 {
    --tw-shadow-color: var(--color-gray-950) !important;
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 5%, transparent) var(--tw-shadow-alpha), transparent) !important;
    }
  }
  .shadow-base-300\/20 {
    --tw-shadow-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-black {
    --tw-shadow-color: #000;
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-black) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-black\/5 {
    --tw-shadow-color: color-mix(in srgb, #000 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 5%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-gray-300\/20 {
    --tw-shadow-color: var(--color-gray-300);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-gray-600\/10 {
    --tw-shadow-color: var(--color-gray-600);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-600) 10%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-gray-950 {
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-gray-950) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-gray-950\/5 {
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 5%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-gray-950\/15 {
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 15%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-gray-950\/25 {
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 25%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-gray-950\/50 {
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-gray-950\/\[0\.03\] {
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 3%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-gray-950\/\[0\.05\] {
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 5%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-gray-950\/\[0\.07\] {
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 7.000000000000001%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-primary-800\/15 {
    --tw-shadow-color: var(--color-primary-800);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-primary-800) 15%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-primary-950\/25 {
    --tw-shadow-color: var(--color-primary-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-primary-950) 25%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-secondary-950\/25 {
    --tw-shadow-color: var(--color-secondary-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-secondary-950) 25%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .ring-\[--ui-bg\] {
    --tw-ring-color: --ui-bg;
  }
  .ring-\[hsla\(0\,0\%\,100\%\,0\.06\)\] {
    --tw-ring-color: hsla(0,0%,100%,0.06);
  }
  .ring-gray-200 {
    --tw-ring-color: var(--color-gray-200);
  }
  .ring-gray-300 {
    --tw-ring-color: var(--color-gray-300);
  }
  .ring-primary\/20 {
    --tw-ring-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }
  }
  .ring-white\/15 {
    --tw-ring-color: color-mix(in srgb, #fff 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
  }
  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-1 {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-2 {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
  }
  .-outline-offset-1 {
    outline-offset: calc(1px * -1);
  }
  .outline-offset-2 {
    outline-offset: 2px;
  }
  .\!outline-primary-600 {
    outline-color: var(--color-primary-600) !important;
  }
  .outline-blue-600 {
    outline-color: var(--color-blue-600);
  }
  .outline-gray-950\/5 {
    outline-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-gray-950) 5%, transparent);
    }
  }
  .outline-gray-950\/10 {
    outline-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-gray-950) 10%, transparent);
    }
  }
  .outline-primary-600 {
    outline-color: var(--color-primary-600);
  }
  .outline-transparent {
    outline-color: transparent;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-2xl {
    --tw-blur: blur(var(--blur-2xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-\[4px\] {
    --tw-blur: blur(4px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-\[6px\] {
    --tw-blur: blur(6px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-md {
    --tw-blur: blur(var(--blur-md));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-sm {
    --tw-blur: blur(var(--blur-sm));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-xl {
    --tw-blur: blur(var(--blur-xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .contrast-150 {
    --tw-contrast: contrast(150%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale-\[50\%\] {
    --tw-grayscale: grayscale(50%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur {
    --tw-backdrop-blur: blur(8px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-2xl {
    --tw-backdrop-blur: blur(var(--blur-2xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .carousel-slide {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-duration: 700ms;
    --tw-duration: 700ms;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[background\,border-color\] {
    transition-property: background,border-color;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[background\] {
    transition-property: background;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[box-shadow\] {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[color\,box-shadow\] {
    transition-property: color,box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[color\,transform\] {
    transition-property: color,transform;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[color\] {
    transition-property: color;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[filter\] {
    transition-property: filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[height\] {
    transition-property: height;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[left\,right\,width\] {
    transition-property: left,right,width;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[left\,width\] {
    transition-property: left,width;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[margin\,opa\] {
    transition-property: margin,opa;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[opacity\,margin\] {
    transition-property: opacity,margin;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[opacity\,scale\,transform\] {
    transition-property: opacity,scale,transform;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[shadow\,opacity\,transform\] {
    transition-property: shadow,opacity,transform;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[transform\,opacity\] {
    transition-property: transform,opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[transform\,width\] {
    transition-property: transform,width;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[width\,_height\] {
    transition-property: width, height;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[width\,height\,padding\] {
    transition-property: width,height,padding;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[width\,left\] {
    transition-property: width,left;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[width\] {
    transition-property: width;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .delay-75 {
    transition-delay: 75ms;
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-1000 {
    --tw-duration: 1000ms;
    transition-duration: 1000ms;
  }
  .duration-\[660ms\] {
    --tw-duration: 660ms;
    transition-duration: 660ms;
  }
  .ease-\[cubic-bezier\(0\.65\,0\,0\.35\,1\)\] {
    --tw-ease: cubic-bezier(0.65,0,0.35,1);
    transition-timing-function: cubic-bezier(0.65,0,0.35,1);
  }
  .ease-\[cubic-bezier\(0\.87\,_0\,_0\.13\,_1\)\] {
    --tw-ease: cubic-bezier(0.87, 0, 0.13, 1);
    transition-timing-function: cubic-bezier(0.87, 0, 0.13, 1);
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-linear {
    --tw-ease: linear;
    transition-timing-function: linear;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .will-change-auto {
    will-change: auto;
  }
  .will-change-transform {
    will-change: transform;
  }
  .contain-strict {
    contain: strict;
  }
  .advance-select-toggle {
    select.is-valid + & {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    .validate select:has(~ * > .selected) + & {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
    select.is-invalid + & {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
    .validate select:not(:has(~ * > .selected)) + & {
      --input-color: var(--color-error);
      &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .range-xl {
    --range-thumb-border-width: 4px;
    --range-track-height: 12px;
    --range-thumb-size: 20px;
  }
  .badge-error {
    --badge-color: var(--color-error);
    --badge-fg: var(--color-error-content);
  }
  .badge-success {
    --badge-color: var(--color-success);
    --badge-fg: var(--color-success-content);
  }
  .badge-warning {
    --badge-color: var(--color-warning);
    --badge-fg: var(--color-warning-content);
  }
  .btn-accent {
    --btn-color: var(--color-accent);
    --btn-fg: var(--color-accent-content);
  }
  .btn-error {
    --btn-color: var(--color-error);
    --btn-fg: var(--color-error-content);
  }
  .btn-info {
    --btn-color: var(--color-info);
    --btn-fg: var(--color-info-content);
  }
  .btn-neutral {
    --btn-color: var(--color-neutral);
    --btn-fg: var(--color-neutral-content);
  }
  .btn-primary {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
  }
  .btn-secondary {
    --btn-color: var(--color-secondary);
    --btn-fg: var(--color-secondary-content);
  }
  .btn-success {
    --btn-color: var(--color-success);
    --btn-fg: var(--color-success-content);
  }
  .btn-warning {
    --btn-color: var(--color-warning);
    --btn-fg: var(--color-warning-content);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    -moz-user-select: none;
         user-select: none;
  }
  .selected {
    .validate select:has(~ * > &) + .advance-select-toggle {
      --input-color: var(--color-success);
      &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
  }
  .switch-md {
    &:is([type="checkbox"]), &:has([type="checkbox"]) {
      --switch-p: 0.1875rem;
      --size: calc(var(--size-selector, 0.25rem) * 6);
    }
  }
  .switch-xl {
    &:is([type="checkbox"]), &:has([type="checkbox"]) {
      --switch-p: 0.3125rem;
      --size: calc(var(--size-selector, 0.25rem) * 8);
    }
  }
  .\[--accordion-content-height\:0px\] {
    --accordion-content-height: 0px;
  }
  .\[--active-bg\:theme\(colors\.cyan\.500\)\] {
    --active-bg: oklch(71.5% 0.143 215.221);
  }
  .\[--active-bg\:theme\(colors\.primary\.500\)\] {
    --active-bg: var(--primary-500);
  }
  .\[--auto-close-equality-type\:\*\] {
    --auto-close-equality-type: *;
  }
  .\[--bg-color\:theme\(colors\.gray\.50\)\] {
    --bg-color: var(--neutral-50);
  }
  .\[--bg-color\:theme\(colors\.gray\.950\/0\.1\)\] {
    --bg-color: var(--neutral-950);
    @supports (color: color-mix(in lab, red, red)) {
      --bg-color: color-mix(in oklab, var(--neutral-950) 10%, transparent);
    }
  }
  .\[--bg-color\:theme\(colors\.primary\.400\)\] {
    --bg-color: var(--primary-400);
  }
  .\[--body-text-color\:theme\(colors\.gray\.600\)\] {
    --body-text-color: var(--neutral-600);
  }
  .\[--btn-border-color\:theme\(colors\.blue\.700\)\] {
    --btn-border-color: oklch(48.8% 0.243 264.376);
  }
  .\[--btn-border-color\:theme\(colors\.gray\.200\)\] {
    --btn-border-color: var(--neutral-200);
  }
  .\[--btn-color\:\#0a66c2\] {
    --btn-color: #0a66c2;
  }
  .\[--btn-color\:\#000\] {
    --btn-color: #000;
  }
  .\[--btn-color\:\#2b3137\] {
    --btn-color: #2b3137;
  }
  .\[--btn-color\:\#1877F2\] {
    --btn-color: #1877F2;
  }
  .\[--btn-radius\:theme\(borderRadius\.lg\)\] {
    --btn-radius: 0.5rem;
  }
  .\[--card-radius\:theme\(borderRadius\.2xl\)\] {
    --card-radius: 1rem;
  }
  .\[--card-shadow-opacity\:0\] {
    --card-shadow-opacity: 0;
  }
  .\[--color-button-border\:var\(--color-primary-9\)\] {
    --color-button-border: var(--color-primary-9);
  }
  .\[--color-button-surface\:var\(--color-primary-9\)\] {
    --color-button-surface: var(--color-primary-9);
  }
  .\[--color-button-text\:var\(--color-primary-contrast\)\] {
    --color-button-text: var(--color-primary-contrast);
  }
  .\[--color\:var\(--color-surface-3\)\] {
    --color: var(--color-surface-3);
  }
  .\[--gpu-acceleration\:\*\] {
    --gpu-acceleration: *;
  }
  .\[--has-autofocus\:\*\] {
    --has-autofocus: *;
  }
  .\[--has-dynamic-z-index\:\*\] {
    --has-dynamic-z-index: *;
  }
  .\[--icon-display\:none\] {
    --icon-display: none;
  }
  .\[--inner-border-color\:1\] {
    --inner-border-color: 1;
  }
  .\[--keep-one-open\:\*\] {
    --keep-one-open: *;
  }
  .\[--layer-color\:theme\(colors\.gray\.50\)\] {
    --layer-color: var(--neutral-50);
  }
  .\[--layer-color\:theme\(colors\.white\)\] {
    --layer-color: #fff;
  }
  .\[--outline-radial-opacity\:0\.6\] {
    --outline-radial-opacity: 0.6;
  }
  .\[--placement\:bottom-right\] {
    --placement: bottom-right;
  }
  .\[--scope\:\*\] {
    --scope: *;
  }
  .\[--skidding\:\*\] {
    --skidding: *;
  }
  .\[--stripes-color\:theme\(colors\.gray\.300\)\] {
    --stripes-color: var(--neutral-300);
  }
  .\[--stripes-color\:theme\(colors\.white\/0\.15\)\] {
    --stripes-color: color-mix(in oklab, #fff 15%, transparent);
  }
  .\[--title-text-color\:theme\(colors\.gray\.950\)\] {
    --title-text-color: var(--neutral-950);
  }
  .\[--title-text-color\:theme\(colors\.warning\.950\)\] {
    --title-text-color: var(--warning-950);
  }
  .\[--title-text-color\:theme\(colors\.white\)\] {
    --title-text-color: #fff;
  }
  .\[--ui-bg\:theme\(colors\.white\/0\.8\)\] {
    --ui-bg: color-mix(in oklab, #fff 80%, transparent);
  }
  .\[--ui-bg\:theme\(colors\.white\/0\.75\)\] {
    --ui-bg: color-mix(in oklab, #fff 75%, transparent);
  }
  .\[--ui-border-color\:theme\(colors\.gray\.200\)\] {
    --ui-border-color: var(--neutral-200);
  }
  .\[--ui-border-color\:theme\(colors\.gray\.200\/0\.75\)\] {
    --ui-border-color: var(--neutral-200);
    @supports (color: color-mix(in lab, red, red)) {
      --ui-border-color: color-mix(in oklab, var(--neutral-200) 75%, transparent);
    }
  }
  .\[--ui-border-color\:theme\(colors\.gray\.400\)\] {
    --ui-border-color: var(--neutral-400);
  }
  .\[--ui-border-color\:theme\(colors\.gray\.950\/0\.1\)\] {
    --ui-border-color: var(--neutral-950);
    @supports (color: color-mix(in lab, red, red)) {
      --ui-border-color: color-mix(in oklab, var(--neutral-950) 10%, transparent);
    }
  }
  .\[--ui-border-color\:theme\(colors\.gray\.950\/0\.05\)\] {
    --ui-border-color: var(--neutral-950);
    @supports (color: color-mix(in lab, red, red)) {
      --ui-border-color: color-mix(in oklab, var(--neutral-950) 5%, transparent);
    }
  }
  .\[--ui-border-color\:theme\(colors\.gray\.950\/0\.10\)\] {
    --ui-border-color: var(--neutral-950);
    @supports (color: color-mix(in lab, red, red)) {
      --ui-border-color: color-mix(in oklab, var(--neutral-950) 10%, transparent);
    }
  }
  .\[--ui-border-color\:theme\(colors\.primary\.200\)\] {
    --ui-border-color: var(--primary-200);
  }
  .\[--ui-border-color\:theme\(colors\.primary\.600\)\] {
    --ui-border-color: var(--primary-600);
  }
  .\[--ui-border-color\:var\(--input-border\)\] {
    --ui-border-color: var(--input-border);
  }
  .\[--ui-disabled-bg\:transparent\] {
    --ui-disabled-bg: transparent;
  }
  .\[--ui-shadow-border\:var\(--ui-border-color\)\] {
    --ui-shadow-border: var(--ui-border-color);
  }
  .\[--ui-soft-bg\:theme\(colors\.gray\.50\)\] {
    --ui-soft-bg: var(--neutral-50);
  }
  .\[background\:radial-gradient\(125\%_125\%_at_50\%_10\%\,transparent_40\%\,var\(--layer-color\)_100\%\)\] {
    background: radial-gradient(125% 125% at 50% 10%,transparent 40%,var(--layer-color) 100%);
  }
  .\[clip-path\:inset\(0px_0px_0px_var\(--clip-percentage\)\)\] {
    clip-path: inset(0px 0px 0px var(--clip-percentage));
  }
  .\[clip-path\:inset\(0px_var\(--clip-percentage\)_0px_0px\)\] {
    clip-path: inset(0px var(--clip-percentage) 0px 0px);
  }
  .\[mask\:radial-gradient\(black\,transparent_95\%\)\] {
    -webkit-mask: radial-gradient(black,transparent 95%);
            mask: radial-gradient(black,transparent 95%);
  }
  .\[perspective\:1000px\] {
    perspective: 1000px;
  }
  .\[text-shadow\:_0_1px_0_var\(--tw-shadow-color\)\] {
    text-shadow:  0 1px 0 var(--tw-shadow-color);
  }
  .gradient-bg-primary {
    --gradient-color: var(--color-primary);
  }
  .link-primary {
    --link-color: var(--color-primary);
  }
  .perspective-\[2000px\] {
    perspective: 2000px;
  }
  .ring-inset {
    --tw-ring-inset: inset;
  }
  .\*\:relative {
    :is(& > *) {
      position: relative;
    }
  }
  .\*\:m-auto {
    :is(& > *) {
      margin: auto;
    }
  }
  .\*\:block {
    :is(& > *) {
      display: block;
    }
  }
  .\*\:flex {
    :is(& > *) {
      display: flex;
    }
  }
  .\*\:aspect-square {
    :is(& > *) {
      aspect-ratio: 1 / 1;
    }
  }
  .\*\:size-2\.5 {
    :is(& > *) {
      width: calc(var(--spacing) * 2.5);
      height: calc(var(--spacing) * 2.5);
    }
  }
  .\*\:size-6 {
    :is(& > *) {
      width: calc(var(--spacing) * 6);
      height: calc(var(--spacing) * 6);
    }
  }
  .\*\:size-7 {
    :is(& > *) {
      width: calc(var(--spacing) * 7);
      height: calc(var(--spacing) * 7);
    }
  }
  .\*\:\!h-0\.5 {
    :is(& > *) {
      height: calc(var(--spacing) * 0.5) !important;
    }
  }
  .\*\:h-full {
    :is(& > *) {
      height: 100%;
    }
  }
  .\*\:\!w-14 {
    :is(& > *) {
      width: calc(var(--spacing) * 14) !important;
    }
  }
  .\*\:w-fit {
    :is(& > *) {
      width: -moz-fit-content;
      width: fit-content;
    }
  }
  .\*\:items-center {
    :is(& > *) {
      align-items: center;
    }
  }
  .\*\:gap-3 {
    :is(& > *) {
      gap: calc(var(--spacing) * 3);
    }
  }
  .\*\:overflow-hidden {
    :is(& > *) {
      overflow: hidden;
    }
  }
  .\*\:\!rounded-lg {
    :is(& > *) {
      border-radius: var(--radius-lg) !important;
    }
  }
  .\*\:rounded-\[--avatar-radius\] {
    :is(& > *) {
      border-radius: --avatar-radius;
    }
  }
  .\*\:rounded-full {
    :is(& > *) {
      border-radius: calc(infinity * 1px);
    }
  }
  .\*\:border {
    :is(& > *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .\*\:border-b {
    :is(& > *) {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
    }
  }
  .\*\:border-gray-950\/5 {
    :is(& > *) {
      border-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-gray-950) 5%, transparent);
      }
    }
  }
  .\*\:bg-ui {
    :is(& > *) {
      background-color: var(--color-ui);
    }
  }
  .\*\:p-3 {
    :is(& > *) {
      padding: calc(var(--spacing) * 3);
    }
  }
  .\*\:p-4 {
    :is(& > *) {
      padding: calc(var(--spacing) * 4);
    }
  }
  .\*\:p-12 {
    :is(& > *) {
      padding: calc(var(--spacing) * 12);
    }
  }
  .\*\:p-\[--card-padding\] {
    :is(& > *) {
      padding: --card-padding;
    }
  }
  .\*\:px-3 {
    :is(& > *) {
      padding-inline: calc(var(--spacing) * 3);
    }
  }
  .\*\:px-5 {
    :is(& > *) {
      padding-inline: var(--spacing-5);
    }
  }
  .\*\:py-2 {
    :is(& > *) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .\*\:py-3 {
    :is(& > *) {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .\*\:py-4 {
    :is(& > *) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .\*\:py-6 {
    :is(& > *) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .\*\:pt-4 {
    :is(& > *) {
      padding-top: calc(var(--spacing) * 4);
    }
  }
  .\*\:pt-6 {
    :is(& > *) {
      padding-top: calc(var(--spacing) * 6);
    }
  }
  .\*\:pt-8 {
    :is(& > *) {
      padding-top: calc(var(--spacing) * 8);
    }
  }
  .\*\:pb-2 {
    :is(& > *) {
      padding-bottom: calc(var(--spacing) * 2);
    }
  }
  .\*\:pb-3 {
    :is(& > *) {
      padding-bottom: calc(var(--spacing) * 3);
    }
  }
  .\*\:pl-2 {
    :is(& > *) {
      padding-left: calc(var(--spacing) * 2);
    }
  }
  .\*\:text-center {
    :is(& > *) {
      text-align: center;
    }
  }
  .\*\:text-left {
    :is(& > *) {
      text-align: left;
    }
  }
  .\*\:text-sm {
    :is(& > *) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .\*\:font-medium {
    :is(& > *) {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .\*\:inset-ring-white\/5 {
    :is(& > *) {
      --tw-inset-ring-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-inset-ring-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .group-focus-within\/menu-item\:opacity-100 {
    &:is(:where(.group\/menu-item):focus-within *) {
      opacity: 100%;
    }
  }
  .group-hover\:h-\[22\.5rem\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        height: 22.5rem;
      }
    }
  }
  .group-hover\:h-\[23rem\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        height: 23rem;
      }
    }
  }
  .group-hover\:-translate-x-1 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:translate-x-0 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:translate-x-0\.5 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 0.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:translate-x-1 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:translate-x-px {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: 1px;
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:-translate-y-0\.5 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -0.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:-translate-y-1\/4 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-y: calc(calc(1/4 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:-translate-y-px {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-y: -1px;
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:translate-y-0 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:scale-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:scale-x-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:rounded-xl {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        border-radius: var(--radius-xl);
      }
    }
  }
  .group-hover\:bg-primary-600\/30 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-primary-600);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary-600) 30%, transparent);
        }
      }
    }
  }
  .group-hover\:fill-blue-950 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: var(--color-blue-950);
      }
    }
  }
  .group-hover\:tracking-wider {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-tracking: var(--tracking-wider);
        letter-spacing: var(--tracking-wider);
      }
    }
  }
  .group-hover\:text-gray-950 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-gray-950);
      }
    }
  }
  .group-hover\:text-primary-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-primary-500);
      }
    }
  }
  .group-hover\:text-primary-600 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-primary-600);
      }
    }
  }
  .group-hover\:text-secondary-950 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-secondary-950);
      }
    }
  }
  .group-hover\:opacity-5 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 5%;
      }
    }
  }
  .group-hover\:opacity-25 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 25%;
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-hover\:\[--ui-border-color\:theme\(colors\.gray\.950\/0\.2\)\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --ui-border-color: var(--neutral-950);
        @supports (color: color-mix(in lab, red, red)) {
          --ui-border-color: color-mix(in oklab, var(--neutral-950) 20%, transparent);
        }
      }
    }
  }
  .group-hover\/links\:bg-transparent {
    &:is(:where(.group\/links):hover *) {
      @media (hover: hover) {
        background-color: transparent;
      }
    }
  }
  .group-hover\/menu-item\:opacity-100 {
    &:is(:where(.group\/menu-item):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-hover\/snippet\:visible {
    &:is(:where(.group\/snippet):hover *) {
      @media (hover: hover) {
        visibility: visible;
      }
    }
  }
  .group-hover\/snippet\:scale-100 {
    &:is(:where(.group\/snippet):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\/snippet\:opacity-100 {
    &:is(:where(.group\/snippet):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-active\:scale-90 {
    &:is(:where(.group):active *) {
      --tw-scale-x: 90%;
      --tw-scale-y: 90%;
      --tw-scale-z: 90%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .group-has-\[\[data-sidebar\=menu-action\]\]\/menu-item\:pr-8 {
    &:is(:where(.group\/menu-item):has(*:is([data-sidebar=menu-action])) *) {
      padding-right: calc(var(--spacing) * 8);
    }
  }
  .group-aria-\[expanded\=true\]\:rotate-180 {
    &:is(:where(.group)[aria-expanded="true"] *) {
      rotate: 180deg;
    }
  }
  .group-data-\[collapsible\=icon\]\:-mt-8 {
    &:is(:where(.group)[data-collapsible="icon"] *) {
      margin-top: calc(var(--spacing) * -8);
    }
  }
  .group-data-\[collapsible\=icon\]\:hidden {
    &:is(:where(.group)[data-collapsible="icon"] *) {
      display: none;
    }
  }
  .group-data-\[collapsible\=icon\]\:\!size-8 {
    &:is(:where(.group)[data-collapsible="icon"] *) {
      width: calc(var(--spacing) * 8) !important;
      height: calc(var(--spacing) * 8) !important;
    }
  }
  .group-data-\[collapsible\=icon\]\:w-\[--sidebar-width-icon\] {
    &:is(:where(.group)[data-collapsible="icon"] *) {
      width: --sidebar-width-icon;
    }
  }
  .group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)_\+_theme\(spacing\.4\)\)\] {
    &:is(:where(.group)[data-collapsible="icon"] *) {
      width: calc(var(--sidebar-width-icon) + 1rem);
    }
  }
  .group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)_\+_theme\(spacing\.4\)_\+2px\)\] {
    &:is(:where(.group)[data-collapsible="icon"] *) {
      width: calc(var(--sidebar-width-icon) + 1rem + 2px);
    }
  }
  .group-data-\[collapsible\=icon\]\:overflow-hidden {
    &:is(:where(.group)[data-collapsible="icon"] *) {
      overflow: hidden;
    }
  }
  .group-data-\[collapsible\=icon\]\:\!p-0 {
    &:is(:where(.group)[data-collapsible="icon"] *) {
      padding: calc(var(--spacing) * 0) !important;
    }
  }
  .group-data-\[collapsible\=icon\]\:\!p-2 {
    &:is(:where(.group)[data-collapsible="icon"] *) {
      padding: calc(var(--spacing) * 2) !important;
    }
  }
  .group-data-\[collapsible\=icon\]\:opacity-0 {
    &:is(:where(.group)[data-collapsible="icon"] *) {
      opacity: 0%;
    }
  }
  .group-data-\[collapsible\=offcanvas\]\:right-\[calc\(var\(--sidebar-width\)\*-1\)\] {
    &:is(:where(.group)[data-collapsible="offcanvas"] *) {
      right: calc(var(--sidebar-width) * -1);
    }
  }
  .group-data-\[collapsible\=offcanvas\]\:left-\[calc\(var\(--sidebar-width\)\*-1\)\] {
    &:is(:where(.group)[data-collapsible="offcanvas"] *) {
      left: calc(var(--sidebar-width) * -1);
    }
  }
  .group-data-\[collapsible\=offcanvas\]\:w-0 {
    &:is(:where(.group)[data-collapsible="offcanvas"] *) {
      width: calc(var(--spacing) * 0);
    }
  }
  .group-data-\[collapsible\=offcanvas\]\:translate-x-0 {
    &:is(:where(.group)[data-collapsible="offcanvas"] *) {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-data-\[side\=left\]\:-right-4 {
    &:is(:where(.group)[data-side="left"] *) {
      right: calc(var(--spacing) * -4);
    }
  }
  .group-data-\[side\=left\]\:border-r {
    &:is(:where(.group)[data-side="left"] *) {
      border-right-style: var(--tw-border-style);
      border-right-width: 1px;
    }
  }
  .group-data-\[side\=right\]\:left-0 {
    &:is(:where(.group)[data-side="right"] *) {
      left: calc(var(--spacing) * 0);
    }
  }
  .group-data-\[side\=right\]\:rotate-180 {
    &:is(:where(.group)[data-side="right"] *) {
      rotate: 180deg;
    }
  }
  .group-data-\[side\=right\]\:border-l {
    &:is(:where(.group)[data-side="right"] *) {
      border-left-style: var(--tw-border-style);
      border-left-width: 1px;
    }
  }
  .group-data-\[state\=active\]\:block {
    &:is(:where(.group)[data-state="active"] *) {
      display: block;
    }
  }
  .group-data-\[state\=active\]\:h-fit {
    &:is(:where(.group)[data-state="active"] *) {
      height: -moz-fit-content;
      height: fit-content;
    }
  }
  .group-data-\[state\=active\]\:scale-0 {
    &:is(:where(.group)[data-state="active"] *) {
      --tw-scale-x: 0%;
      --tw-scale-y: 0%;
      --tw-scale-z: 0%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .group-data-\[state\=active\]\:scale-100 {
    &:is(:where(.group)[data-state="active"] *) {
      --tw-scale-x: 100%;
      --tw-scale-y: 100%;
      --tw-scale-z: 100%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .group-data-\[state\=active\]\:rotate-0 {
    &:is(:where(.group)[data-state="active"] *) {
      rotate: 0deg;
    }
  }
  .group-data-\[state\=active\]\:rotate-180 {
    &:is(:where(.group)[data-state="active"] *) {
      rotate: 180deg;
    }
  }
  .group-data-\[state\=active\]\:text-gray-950 {
    &:is(:where(.group)[data-state="active"] *) {
      color: var(--color-gray-950);
    }
  }
  .group-data-\[state\=active\]\:opacity-0 {
    &:is(:where(.group)[data-state="active"] *) {
      opacity: 0%;
    }
  }
  .group-data-\[state\=active\]\:opacity-100 {
    &:is(:where(.group)[data-state="active"] *) {
      opacity: 100%;
    }
  }
  .group-data-\[state\=open\]\:-translate-x-px {
    &:is(:where(.group)[data-state="open"] *) {
      --tw-translate-x: -1px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-data-\[state\=open\]\:translate-y-0\.5 {
    &:is(:where(.group)[data-state="open"] *) {
      --tw-translate-y: calc(var(--spacing) * 0.5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-data-\[state\=open\]\:translate-y-4 {
    &:is(:where(.group)[data-state="open"] *) {
      --tw-translate-y: calc(var(--spacing) * 4);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-data-\[state\=open\]\:-rotate-180 {
    &:is(:where(.group)[data-state="open"] *) {
      rotate: calc(180deg * -1);
    }
  }
  .group-data-\[state\=open\]\:rotate-45 {
    &:is(:where(.group)[data-state="open"] *) {
      rotate: 45deg;
    }
  }
  .group-data-\[state\=open\]\:rotate-90 {
    &:is(:where(.group)[data-state="open"] *) {
      rotate: 90deg;
    }
  }
  .group-data-\[state\=open\]\:rotate-180 {
    &:is(:where(.group)[data-state="open"] *) {
      rotate: 180deg;
    }
  }
  .group-data-\[tabs\=default\]\:top-auto {
    &:is(:where(.group)[data-tabs="default"] *) {
      top: auto;
    }
  }
  .group-data-\[tabs\=default\]\:-bottom-px {
    &:is(:where(.group)[data-tabs="default"] *) {
      bottom: -1px;
    }
  }
  .group-data-\[tabs\=default\]\:h-0\.5 {
    &:is(:where(.group)[data-tabs="default"] *) {
      height: calc(var(--spacing) * 0.5);
    }
  }
  .group-data-\[tabs\=default\]\:bg-primary-600 {
    &:is(:where(.group)[data-tabs="default"] *) {
      background-color: var(--color-primary-600);
    }
  }
  .group-data-\[tabs\=pill\]\:inset-y-0 {
    &:is(:where(.group)[data-tabs="pill"] *) {
      inset-block: calc(var(--spacing) * 0);
    }
  }
  .group-data-\[tabs\=pill\]\:bg-primary-600 {
    &:is(:where(.group)[data-tabs="pill"] *) {
      background-color: var(--color-primary-600);
    }
  }
  .group-data-\[tabs\=segmented\]\:inset-y-1 {
    &:is(:where(.group)[data-tabs="segmented"] *) {
      inset-block: calc(var(--spacing) * 1);
    }
  }
  .group-data-\[tabs\=segmented\]\:bg-ui {
    &:is(:where(.group)[data-tabs="segmented"] *) {
      background-color: var(--color-ui);
    }
  }
  .group-data-\[tabs\=segmented\]\:shadow {
    &:is(:where(.group)[data-tabs="segmented"] *) {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .group-data-\[variant\=floating\]\:rounded-lg {
    &:is(:where(.group)[data-variant="floating"] *) {
      border-radius: var(--radius-lg);
    }
  }
  .group-data-\[variant\=floating\]\:border {
    &:is(:where(.group)[data-variant="floating"] *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .group-data-\[variant\=floating\]\:shadow {
    &:is(:where(.group)[data-variant="floating"] *) {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .group-\[\.destructive\]\:text-red-300 {
    &:is(:where(.group):is(.destructive) *) {
      color: var(--color-red-300);
    }
  }
  .group-\[\.toast\]\:bg-primary {
    &:is(:where(.group):is(.toast) *) {
      background-color: var(--color-primary);
    }
  }
  .group-\[\.toaster\]\:shadow-lg {
    &:is(:where(.group):is(.toaster) *) {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .peer-checked\:translate-x-3 {
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: calc(var(--spacing) * 3);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-checked\:scale-100 {
    &:is(:where(.peer):checked ~ *) {
      --tw-scale-x: 100%;
      --tw-scale-y: 100%;
      --tw-scale-z: 100%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .peer-checked\:bg-gray-900 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-gray-900);
    }
  }
  .peer-checked\:bg-white {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-white);
    }
  }
  .peer-checked\:text-white {
    &:is(:where(.peer):checked ~ *) {
      color: var(--color-white);
    }
  }
  .peer-checked\:opacity-100 {
    &:is(:where(.peer):checked ~ *) {
      opacity: 100%;
    }
  }
  .peer-checked\:shadow {
    &:is(:where(.peer):checked ~ *) {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .peer-checked\:shadow-gray-950\/25 {
    &:is(:where(.peer):checked ~ *) {
      --tw-shadow-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 25%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .peer-disabled\:cursor-not-allowed {
    &:is(:where(.peer):disabled ~ *) {
      cursor: not-allowed;
    }
  }
  .peer-disabled\:text-gray-600 {
    &:is(:where(.peer):disabled ~ *) {
      color: var(--color-gray-600);
    }
  }
  .peer-disabled\:opacity-70 {
    &:is(:where(.peer):disabled ~ *) {
      opacity: 70%;
    }
  }
  .peer-data-\[size\=default\]\/menu-button\:top-1\.5 {
    &:is(:where(.peer\/menu-button)[data-size="default"] ~ *) {
      top: calc(var(--spacing) * 1.5);
    }
  }
  .peer-data-\[size\=lg\]\/menu-button\:top-2\.5 {
    &:is(:where(.peer\/menu-button)[data-size="lg"] ~ *) {
      top: calc(var(--spacing) * 2.5);
    }
  }
  .peer-data-\[size\=sm\]\/menu-button\:top-1 {
    &:is(:where(.peer\/menu-button)[data-size="sm"] ~ *) {
      top: calc(var(--spacing) * 1);
    }
  }
  .peer-data-\[variant\=inset\]\:min-h-\[calc\(100svh-theme\(spacing\.4\)\)\] {
    &:is(:where(.peer)[data-variant="inset"] ~ *) {
      min-height: calc(100svh - 1rem);
    }
  }
  .first-letter\:float-left {
    &::first-letter {
      float: left;
    }
  }
  .first-letter\:me-3 {
    &::first-letter {
      margin-inline-end: calc(var(--spacing) * 3);
    }
  }
  .first-letter\:text-7xl {
    &::first-letter {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .first-letter\:font-bold {
    &::first-letter {
      --tw-font-weight: var(--font-weight-bold);
      font-weight: var(--font-weight-bold);
    }
  }
  .first-letter\:text-base-content {
    &::first-letter {
      color: var(--color-base-content);
    }
  }
  .first-line\:tracking-widest {
    &::first-line {
      --tw-tracking: var(--tracking-widest);
      letter-spacing: var(--tracking-widest);
    }
  }
  .first-line\:uppercase {
    &::first-line {
      text-transform: uppercase;
    }
  }
  .selection\:bg-info-600 {
    & *::-moz-selection {
      background-color: var(--color-info-600);
    }
    & *::selection {
      background-color: var(--color-info-600);
    }
    &::-moz-selection {
      background-color: var(--color-info-600);
    }
    &::selection {
      background-color: var(--color-info-600);
    }
  }
  .selection\:text-white {
    & *::-moz-selection {
      color: var(--color-white);
    }
    & *::selection {
      color: var(--color-white);
    }
    &::-moz-selection {
      color: var(--color-white);
    }
    &::selection {
      color: var(--color-white);
    }
  }
  .file\:border-0 {
    &::file-selector-button {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .file\:bg-transparent {
    &::file-selector-button {
      background-color: transparent;
    }
  }
  .file\:text-sm {
    &::file-selector-button {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .file\:font-medium {
    &::file-selector-button {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:-inset-2 {
    &::before {
      content: var(--tw-content);
      inset: calc(var(--spacing) * -2);
    }
  }
  .before\:inset-0 {
    &::before {
      content: var(--tw-content);
      inset: calc(var(--spacing) * 0);
    }
  }
  .before\:inset-px {
    &::before {
      content: var(--tw-content);
      inset: 1px;
    }
  }
  .before\:inset-x-0 {
    &::before {
      content: var(--tw-content);
      inset-inline: calc(var(--spacing) * 0);
    }
  }
  .before\:inset-x-2 {
    &::before {
      content: var(--tw-content);
      inset-inline: calc(var(--spacing) * 2);
    }
  }
  .before\:inset-x-3 {
    &::before {
      content: var(--tw-content);
      inset-inline: calc(var(--spacing) * 3);
    }
  }
  .before\:top-0 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }
  }
  .before\:top-0\.5 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0.5);
    }
  }
  .before\:top-1 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 1);
    }
  }
  .before\:top-1\.5 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 1.5);
    }
  }
  .before\:top-\[3px\] {
    &::before {
      content: var(--tw-content);
      top: 3px;
    }
  }
  .before\:right-0\.5 {
    &::before {
      content: var(--tw-content);
      right: calc(var(--spacing) * 0.5);
    }
  }
  .before\:right-1 {
    &::before {
      content: var(--tw-content);
      right: calc(var(--spacing) * 1);
    }
  }
  .before\:right-1\.5 {
    &::before {
      content: var(--tw-content);
      right: calc(var(--spacing) * 1.5);
    }
  }
  .before\:right-\[3px\] {
    &::before {
      content: var(--tw-content);
      right: 3px;
    }
  }
  .before\:right-px {
    &::before {
      content: var(--tw-content);
      right: 1px;
    }
  }
  .before\:-bottom-1\.5 {
    &::before {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * -1.5);
    }
  }
  .before\:bottom-0 {
    &::before {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }
  }
  .before\:z-\[1\] {
    &::before {
      content: var(--tw-content);
      z-index: 1;
    }
  }
  .before\:m-auto {
    &::before {
      content: var(--tw-content);
      margin: auto;
    }
  }
  .before\:mx-auto {
    &::before {
      content: var(--tw-content);
      margin-inline: auto;
    }
  }
  .before\:block {
    &::before {
      content: var(--tw-content);
      display: block;
    }
  }
  .before\:hidden {
    &::before {
      content: var(--tw-content);
      display: none;
    }
  }
  .before\:size-1\.5 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 1.5);
      height: calc(var(--spacing) * 1.5);
    }
  }
  .before\:size-2 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 2);
      height: calc(var(--spacing) * 2);
    }
  }
  .before\:size-2\.5 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 2.5);
      height: calc(var(--spacing) * 2.5);
    }
  }
  .before\:size-3 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 3);
      height: calc(var(--spacing) * 3);
    }
  }
  .before\:size-3\.5 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
  }
  .before\:h-0\.5 {
    &::before {
      content: var(--tw-content);
      height: calc(var(--spacing) * 0.5);
    }
  }
  .before\:h-12 {
    &::before {
      content: var(--tw-content);
      height: calc(var(--spacing) * 12);
    }
  }
  .before\:h-px {
    &::before {
      content: var(--tw-content);
      height: 1px;
    }
  }
  .before\:w-1 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 1);
    }
  }
  .before\:w-px {
    &::before {
      content: var(--tw-content);
      width: 1px;
    }
  }
  .before\:origin-right {
    &::before {
      content: var(--tw-content);
      transform-origin: right;
    }
  }
  .before\:scale-x-0 {
    &::before {
      content: var(--tw-content);
      --tw-scale-x: 0%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .before\:rounded {
    &::before {
      content: var(--tw-content);
      border-radius: 0.25rem;
    }
  }
  .before\:rounded-\[calc\(var\(--btn-radius\)-1px\)\] {
    &::before {
      content: var(--tw-content);
      border-radius: calc(var(--btn-radius) - 1px);
    }
  }
  .before\:rounded-full {
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .before\:rounded-br-full {
    &::before {
      content: var(--tw-content);
      border-bottom-right-radius: calc(infinity * 1px);
    }
  }
  .before\:rounded-bl-full {
    &::before {
      content: var(--tw-content);
      border-bottom-left-radius: calc(infinity * 1px);
    }
  }
  .before\:border {
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .before\:border-2 {
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
  .before\:border-\[1px\] {
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .before\:border-\[2px\] {
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
  .before\:border-t {
    &::before {
      content: var(--tw-content);
      border-top-style: var(--tw-border-style);
      border-top-width: 1px;
    }
  }
  .before\:border-dashed {
    &::before {
      content: var(--tw-content);
      --tw-border-style: dashed;
      border-style: dashed;
    }
  }
  .before\:border-gray-950 {
    &::before {
      content: var(--tw-content);
      border-color: var(--color-gray-950);
    }
  }
  .before\:border-white {
    &::before {
      content: var(--tw-content);
      border-color: var(--color-white);
    }
  }
  .before\:border-white\/25 {
    &::before {
      content: var(--tw-content);
      border-color: color-mix(in srgb, #fff 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 25%, transparent);
      }
    }
  }
  .before\:bg-\[--ui-border-color\] {
    &::before {
      content: var(--tw-content);
      background-color: --ui-border-color;
    }
  }
  .before\:bg-gray-100 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-gray-100);
    }
  }
  .before\:bg-gray-200 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-gray-200);
    }
  }
  .before\:bg-gray-300 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-gray-300);
    }
  }
  .before\:bg-gray-400 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-gray-400);
    }
  }
  .before\:bg-gray-500\/50 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-gray-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-500) 50%, transparent);
      }
    }
  }
  .before\:bg-gray-600 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-gray-600);
    }
  }
  .before\:bg-gray-950\/50 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-950) 50%, transparent);
      }
    }
  }
  .before\:bg-info-300 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-info-300);
    }
  }
  .before\:bg-info-600 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-info-600);
    }
  }
  .before\:bg-primary-300 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-primary-300);
    }
  }
  .before\:bg-primary-500\/20 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-primary-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary-500) 20%, transparent);
      }
    }
  }
  .before\:bg-primary-600 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-primary-600);
    }
  }
  .before\:bg-secondary-600 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-secondary-600);
    }
  }
  .before\:bg-success-400 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-success-400);
    }
  }
  .before\:bg-success-600 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-success-600);
    }
  }
  .before\:bg-ui {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-ui);
    }
  }
  .before\:bg-ui-soft {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-ui-soft);
    }
  }
  .before\:bg-warning-500 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-warning-500);
    }
  }
  .before\:bg-warning-600 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-warning-600);
    }
  }
  .before\:bg-white {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-white);
    }
  }
  .before\:bg-white\/50 {
    &::before {
      content: var(--tw-content);
      background-color: color-mix(in srgb, #fff 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
      }
    }
  }
  .before\:bg-gradient-to-t {
    &::before {
      content: var(--tw-content);
      --tw-gradient-position: to top in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  }
  .before\:from-gray-50 {
    &::before {
      content: var(--tw-content);
      --tw-gradient-from: var(--color-gray-50);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .before\:mix-blend-darken {
    &::before {
      content: var(--tw-content);
      mix-blend-mode: darken;
    }
  }
  .before\:mix-blend-overlay {
    &::before {
      content: var(--tw-content);
      mix-blend-mode: overlay;
    }
  }
  .before\:shadow-gray-950\/\[0\.03\] {
    &::before {
      content: var(--tw-content);
      --tw-shadow-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 3%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .before\:transition {
    &::before {
      content: var(--tw-content);
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .before\:transition-\[background\,border-color\] {
    &::before {
      content: var(--tw-content);
      transition-property: background,border-color;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .before\:transition-\[height\,background\] {
    &::before {
      content: var(--tw-content);
      transition-property: height,background;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .before\:transition-transform {
    &::before {
      content: var(--tw-content);
      transition-property: transform, translate, scale, rotate;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .before\:\!transition-none {
    &::before {
      content: var(--tw-content);
      transition-property: none !important;
    }
  }
  .before\:duration-200 {
    &::before {
      content: var(--tw-content);
      --tw-duration: 200ms;
      transition-duration: 200ms;
    }
  }
  .before\:duration-300 {
    &::before {
      content: var(--tw-content);
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:-inset-2 {
    &::after {
      content: var(--tw-content);
      inset: calc(var(--spacing) * -2);
    }
  }
  .after\:inset-y-0 {
    &::after {
      content: var(--tw-content);
      inset-block: calc(var(--spacing) * 0);
    }
  }
  .after\:left-1\/2 {
    &::after {
      content: var(--tw-content);
      left: calc(1/2 * 100%);
    }
  }
  .after\:w-1 {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 1);
    }
  }
  .after\:w-\[2px\] {
    &::after {
      content: var(--tw-content);
      width: 2px;
    }
  }
  .after\:-translate-x-1\/2 {
    &::after {
      content: var(--tw-content);
      --tw-translate-x: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-data-\[collapsible\=offcanvas\]\:after\:left-full {
    &:is(:where(.group)[data-collapsible="offcanvas"] *) {
      &::after {
        content: var(--tw-content);
        left: 100%;
      }
    }
  }
  .first\:ml-1\.5 {
    &:first-child {
      margin-left: calc(var(--spacing) * 1.5);
    }
  }
  .first\:rounded-l-md {
    &:first-child {
      border-top-left-radius: var(--radius-md);
      border-bottom-left-radius: var(--radius-md);
    }
  }
  .first\:border-l {
    &:first-child {
      border-left-style: var(--tw-border-style);
      border-left-width: 1px;
    }
  }
  .last\:rounded-r-md {
    &:last-child {
      border-top-right-radius: var(--radius-md);
      border-bottom-right-radius: var(--radius-md);
    }
  }
  .last\:border-none {
    &:last-child {
      --tw-border-style: none;
      border-style: none;
    }
  }
  .open\:bg-base-100 {
    &:is([open], :popover-open, :open) {
      background-color: var(--color-base-100);
    }
  }
  .open\:shadow {
    &:is([open], :popover-open, :open) {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .invalid\:border-red-600 {
    &:invalid {
      border-color: var(--color-red-600);
    }
  }
  .focus-within\:relative {
    &:focus-within {
      position: relative;
    }
  }
  .focus-within\:z-20 {
    &:focus-within {
      z-index: 20;
    }
  }
  .hover\:link {
    &:hover {
      @media (hover: hover) {
        --link-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          --link-color: color-mix(in oklab, var(--color-base-content) 80%, #0000);
        }
        display: inline-block;
        cursor: pointer;
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        text-decoration-line: underline;
        color: var(--link-color);
        &:hover {
          color: var(--link-color);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--link-color) 80%, #000);
          }
        }
        &:focus {
          --tw-outline-style: none;
          outline-style: none;
        }
        &:focus-visible {
          outline: 2px solid currentColor;
          outline-offset: 2px;
        }
        &.disabled, &[disabled], &:disabled {
          pointer-events: none;
          opacity: 50%;
        }
        &:where(.link-hover) {
          text-decoration-line: none;
          @media (hover:hover) {
            &:hover {
              @media (hover: hover) {
                text-decoration-line: underline;
              }
            }
          }
        }
        &:where(.link-animated) {
          position: relative;
          text-decoration-line: none;
          &::before {
            content: var(--tw-content);
            content: var(--tw-content);
            pointer-events: none;
            position: absolute;
            inset-inline-start: calc(0.25rem * 0);
            bottom: calc(0.25rem * 0);
            height: 1px;
            width: 100%;
            background-color: currentColor;
            transition-property: transform, translate, scale, rotate;
            transition-timing-function: var(--ease-in-out);
            transition-duration: 300ms;
            --tw-duration: 300ms;
            --tw-ease: var(--ease-in-out);
            --tw-content: '';
          }
        }
        &:where(.link-animated)::before {
          transform-origin: 100% 50%;
          transform: scale3d(0, 1, 1);
        }
        &:where(.link-animated):hover::before {
          transform-origin: 0% 50%;
          transform: scale3d(1, 1, 1);
        }
      }
    }
  }
  .hover\:border-blue-500 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-blue-500);
      }
    }
  }
  .hover\:border-gray-200 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-200);
      }
    }
  }
  .hover\:border-gray-950\/10 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-950);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-gray-950) 10%, transparent);
        }
      }
    }
  }
  .hover\:\!bg-ui-soft {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-ui-soft) !important;
      }
    }
  }
  .hover\:bg-\[--ui-soft-bg\] {
    &:hover {
      @media (hover: hover) {
        background-color: --ui-soft-bg;
      }
    }
  }
  .hover\:bg-accent {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-accent);
      }
    }
  }
  .hover\:bg-gray-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:bg-gray-950\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-950);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-gray-950) 5%, transparent);
        }
      }
    }
  }
  .hover\:bg-gray-950\/\[0\.07\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-950);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-gray-950) 7.000000000000001%, transparent);
        }
      }
    }
  }
  .hover\:bg-primary {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
      }
    }
  }
  .hover\:bg-primary-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-600);
      }
    }
  }
  .hover\:bg-primary\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-primary\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 90%, transparent);
        }
      }
    }
  }
  .hover\:bg-secondary {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-secondary);
      }
    }
  }
  .hover\:bg-secondary\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-secondary) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-transparent {
    &:hover {
      @media (hover: hover) {
        background-color: transparent;
      }
    }
  }
  .hover\:bg-ui-soft {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-ui-soft);
      }
    }
  }
  .hover\:text-\[--body-text-color\] {
    &:hover {
      @media (hover: hover) {
        color: --body-text-color;
      }
    }
  }
  .hover\:text-\[--title-text-color\] {
    &:hover {
      @media (hover: hover) {
        color: --title-text-color;
      }
    }
  }
  .hover\:text-blue-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-800);
      }
    }
  }
  .hover\:text-gray-950 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-950);
      }
    }
  }
  .hover\:text-info-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-info-600);
      }
    }
  }
  .hover\:text-info-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-info-700);
      }
    }
  }
  .hover\:text-primary-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary-600);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .hover\:shadow-\[0_0_0_1px_hsl\(var\(--sidebar-accent\)\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 0 0 1px var(--tw-shadow-color, hsl(var(--sidebar-accent)));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:ring-\[hsla\(0\,0\%\,100\%\,0\.08\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-ring-color: hsla(0,0%,100%,0.08);
      }
    }
  }
  .hover\:brightness-105 {
    &:hover {
      @media (hover: hover) {
        --tw-brightness: brightness(105%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:brightness-110 {
    &:hover {
      @media (hover: hover) {
        --tw-brightness: brightness(110%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:brightness-125 {
    &:hover {
      @media (hover: hover) {
        --tw-brightness: brightness(125%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:brightness-\[0\.98\] {
    &:hover {
      @media (hover: hover) {
        --tw-brightness: brightness(0.98);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:brightness-\[1\.1\] {
    &:hover {
      @media (hover: hover) {
        --tw-brightness: brightness(1.1);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:grayscale-0 {
    &:hover {
      @media (hover: hover) {
        --tw-grayscale: grayscale(0%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:\[--card-shadow-opacity\:0\.05\] {
    &:hover {
      @media (hover: hover) {
        --card-shadow-opacity: 0.05;
      }
    }
  }
  .group-\[\.destructive\]\:hover\:text-red-50 {
    &:is(:where(.group):is(.destructive) *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-red-50);
        }
      }
    }
  }
  .hover\:before\:h-16 {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          height: calc(var(--spacing) * 16);
        }
      }
    }
  }
  .hover\:before\:origin-left {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          transform-origin: left;
        }
      }
    }
  }
  .hover\:before\:scale-105 {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          --tw-scale-x: 105%;
          --tw-scale-y: 105%;
          --tw-scale-z: 105%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .hover\:before\:scale-x-100 {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          --tw-scale-x: 100%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .hover\:before\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          background-color: var(--color-gray-100);
        }
      }
    }
  }
  .hover\:before\:bg-gray-400 {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          background-color: var(--color-gray-400);
        }
      }
    }
  }
  .focus\:z-10 {
    &:focus {
      z-index: 10;
    }
  }
  .focus\:border-b-2 {
    &:focus {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 2px;
    }
  }
  .focus\:border-\[--input-outline\] {
    &:focus {
      border-color: --input-outline;
    }
  }
  .focus\:border-blue-500 {
    &:focus {
      border-color: var(--color-blue-500);
    }
  }
  .focus\:border-primary {
    &:focus {
      border-color: var(--color-primary);
    }
  }
  .focus\:bg-accent {
    &:focus {
      background-color: var(--color-accent);
    }
  }
  .focus\:bg-gray-50 {
    &:focus {
      background-color: var(--color-gray-50);
    }
  }
  .focus\:bg-gray-100 {
    &:focus {
      background-color: var(--color-gray-100);
    }
  }
  .focus\:bg-primary {
    &:focus {
      background-color: var(--color-primary);
    }
  }
  .focus\:text-blue-800 {
    &:focus {
      color: var(--color-blue-800);
    }
  }
  .focus\:opacity-100 {
    &:focus {
      opacity: 100%;
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-blue-500 {
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
  }
  .focus\:ring-offset-2 {
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .focus\:outline {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus\:outline-1 {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus\:outline-\[--input-outline\] {
    &:focus {
      outline-color: --input-outline;
    }
  }
  .focus\:outline-primary {
    &:focus {
      outline-color: var(--color-primary);
    }
  }
  .focus\:brightness-95 {
    &:focus {
      --tw-brightness: brightness(95%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .focus\:brightness-105 {
    &:focus {
      --tw-brightness: brightness(105%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .group-\[\.destructive\]\:focus\:ring-red-400 {
    &:is(:where(.group):is(.destructive) *) {
      &:focus {
        --tw-ring-color: var(--color-red-400);
      }
    }
  }
  .group-\[\.destructive\]\:focus\:ring-offset-red-600 {
    &:is(:where(.group):is(.destructive) *) {
      &:focus {
        --tw-ring-offset-color: var(--color-red-600);
      }
    }
  }
  .focus\:before\:bg-gray-400 {
    &:focus {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-gray-400);
      }
    }
  }
  .focus\:invalid\:outline-red-600 {
    &:focus {
      &:invalid {
        outline-color: var(--color-red-600);
      }
    }
  }
  .focus-visible\:ring-1 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-\[3px\] {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-primary-600 {
    &:focus-visible {
      --tw-ring-color: var(--color-primary-600);
    }
  }
  .focus-visible\:ring-offset-1 {
    &:focus-visible {
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-visible\:ring-offset-2 {
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-visible\:outline {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus-visible\:outline-none {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .active\:bg-gray-950\/15 {
    &:active {
      background-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-950) 15%, transparent);
      }
    }
  }
  .active\:brightness-75 {
    &:active {
      --tw-brightness: brightness(75%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .active\:brightness-95 {
    &:active {
      --tw-brightness: brightness(95%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .active\:brightness-100 {
    &:active {
      --tw-brightness: brightness(100%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .active\:duration-75 {
    &:active {
      --tw-duration: 75ms;
      transition-duration: 75ms;
    }
  }
  .active\:before\:scale-95 {
    &:active {
      &::before {
        content: var(--tw-content);
        --tw-scale-x: 95%;
        --tw-scale-y: 95%;
        --tw-scale-z: 95%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .active\:before\:bg-gray-200 {
    &:active {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-gray-200);
      }
    }
  }
  .disabled\:pointer-events-none {
    &:disabled {
      pointer-events: none;
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:bg-gray-200 {
    &:disabled {
      background-color: var(--color-gray-200);
    }
  }
  .disabled\:from-gray-100 {
    &:disabled {
      --tw-gradient-from: var(--color-gray-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .disabled\:to-gray-100 {
    &:disabled {
      --tw-gradient-to: var(--color-gray-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .disabled\:text-gray-400 {
    &:disabled {
      color: var(--color-gray-400);
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .disabled\:shadow-none {
    &:disabled {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .disabled\:hover\:brightness-100 {
    &:disabled {
      &:hover {
        @media (hover: hover) {
          --tw-brightness: brightness(100%);
          filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
        }
      }
    }
  }
  .in-data-scroll-locked\:pr-\(--removed-body-scroll-bar-size\) {
    :where(*[data-scroll-locked]) & {
      padding-right: var(--removed-body-scroll-bar-size);
    }
  }
  .has-\[\:checked\]\:border-primary-600 {
    &:has(*:is(:checked)) {
      border-color: var(--color-primary-600);
    }
  }
  .has-\[\:checked\]\:border-white\/5 {
    &:has(*:is(:checked)) {
      border-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .has-\[\:checked\]\:\!bg-primary-600 {
    &:has(*:is(:checked)) {
      background-color: var(--color-primary-600) !important;
    }
  }
  .has-\[\:checked\]\:bg-gray-950 {
    &:has(*:is(:checked)) {
      background-color: var(--color-gray-950);
    }
  }
  .has-\[\:checked\]\:bg-primary-600 {
    &:has(*:is(:checked)) {
      background-color: var(--color-primary-600);
    }
  }
  .has-\[\:checked\]\:bg-ui-soft {
    &:has(*:is(:checked)) {
      background-color: var(--color-ui-soft);
    }
  }
  .has-\[\:checked\]\:bg-white {
    &:has(*:is(:checked)) {
      background-color: var(--color-white);
    }
  }
  .has-\[\:checked\]\:\[background-image\:none\] {
    &:has(*:is(:checked)) {
      background-image: none;
    }
  }
  .has-\[\:checked\]\:\!text-white {
    &:has(*:is(:checked)) {
      color: var(--color-white) !important;
    }
  }
  .has-\[\:checked\]\:shadow-none {
    &:has(*:is(:checked)) {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .has-\[\:checked\]\:outline {
    &:has(*:is(:checked)) {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .has-\[\:checked\]\:outline-2 {
    &:has(*:is(:checked)) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .has-\[\:checked\]\:outline-primary-600 {
    &:has(*:is(:checked)) {
      outline-color: var(--color-primary-600);
    }
  }
  .has-\[\:checked\]\:\[--icon-display\:block\] {
    &:has(*:is(:checked)) {
      --icon-display: block;
    }
  }
  .has-\[\:checked\]\:before\:\!border-white\/15 {
    &:has(*:is(:checked)) {
      &::before {
        content: var(--tw-content);
        border-color: color-mix(in srgb, #fff 15%, transparent) !important;
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 15%, transparent) !important;
        }
      }
    }
  }
  .has-\[\:checked\]\:before\:\!bg-primary-600 {
    &:has(*:is(:checked)) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-primary-600) !important;
      }
    }
  }
  .has-\[\:disabled\]\:opacity-50 {
    &:has(*:is(:disabled)) {
      opacity: 50%;
    }
  }
  .\*\:has-\[\:disabled\]\:pointer-events-none {
    :is(& > *) {
      &:has(*:is(:disabled)) {
        pointer-events: none;
      }
    }
  }
  .\*\:has-\[\:disabled\]\:opacity-50 {
    :is(& > *) {
      &:has(*:is(:disabled)) {
        opacity: 50%;
      }
    }
  }
  .has-\[\:focus-visible\]\:outline {
    &:has(*:is(:focus-visible)) {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .has-\[\:focus-visible\]\:outline-2 {
    &:has(*:is(:focus-visible)) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .has-\[\:focus-visible\]\:outline-offset-2 {
    &:has(*:is(:focus-visible)) {
      outline-offset: 2px;
    }
  }
  .has-\[\:focus-visible\]\:outline-primary-600 {
    &:has(*:is(:focus-visible)) {
      outline-color: var(--color-primary-600);
    }
  }
  .has-\[\:disabled\]\:has-\[\:where\(label\,span\)\]\:text-gray-600 {
    &:has(*:is(:disabled)) {
      &:has(*:is(:where(label,span))) {
        color: var(--color-gray-600);
      }
    }
  }
  .has-\[\:disabled\]\:has-\[\:where\(label\,span\)\]\:opacity-50 {
    &:has(*:is(:disabled)) {
      &:has(*:is(:where(label,span))) {
        opacity: 50%;
      }
    }
  }
  .has-\[\:disabled\]\:has-\[\:where\(label\,span\)\]\:select-none {
    &:has(*:is(:disabled)) {
      &:has(*:is(:where(label,span))) {
        -webkit-user-select: none;
        -moz-user-select: none;
             user-select: none;
      }
    }
  }
  .has-\[\[data-state\=\'open\'\]\]\:bg-\[--ui-soft-bg\] {
    &:has(*:is([data-state='open'])) {
      background-color: --ui-soft-bg;
    }
  }
  .has-\[input\:focus\]\:outline {
    &:has(*:is(input:focus)) {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .aria-disabled\:pointer-events-none {
    &[aria-disabled="true"] {
      pointer-events: none;
    }
  }
  .aria-disabled\:opacity-50 {
    &[aria-disabled="true"] {
      opacity: 50%;
    }
  }
  .aria-selected\:bg-accent {
    &[aria-selected="true"] {
      background-color: var(--color-accent);
    }
  }
  .aria-selected\:bg-accent\/50 {
    &[aria-selected="true"] {
      background-color: var(--color-accent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-accent) 50%, transparent);
      }
    }
  }
  .aria-selected\:opacity-100 {
    &[aria-selected="true"] {
      opacity: 100%;
    }
  }
  .data-\[active\]\:bg-accent\/50 {
    &[data-active] {
      background-color: var(--color-accent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-accent) 50%, transparent);
      }
    }
  }
  .data-\[active\=true\]\:font-medium {
    &[data-active="true"] {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .data-\[disabled\]\:pointer-events-none {
    &[data-disabled] {
      pointer-events: none;
    }
  }
  .data-\[disabled\]\:opacity-50 {
    &[data-disabled] {
      opacity: 50%;
    }
  }
  .data-\[disabled\=true\]\:pointer-events-none {
    &[data-disabled="true"] {
      pointer-events: none;
    }
  }
  .data-\[disabled\=true\]\:opacity-50 {
    &[data-disabled="true"] {
      opacity: 50%;
    }
  }
  .data-\[orientation\=horizontal\]\:h-0\.5 {
    &[data-orientation="horizontal"] {
      height: calc(var(--spacing) * 0.5);
    }
  }
  .data-\[panel-group-direction\=vertical\]\:h-px {
    &[data-panel-group-direction="vertical"] {
      height: 1px;
    }
  }
  .data-\[panel-group-direction\=vertical\]\:w-full {
    &[data-panel-group-direction="vertical"] {
      width: 100%;
    }
  }
  .data-\[panel-group-direction\=vertical\]\:flex-col {
    &[data-panel-group-direction="vertical"] {
      flex-direction: column;
    }
  }
  .data-\[panel-group-direction\=vertical\]\:after\:left-0 {
    &[data-panel-group-direction="vertical"] {
      &::after {
        content: var(--tw-content);
        left: calc(var(--spacing) * 0);
      }
    }
  }
  .data-\[panel-group-direction\=vertical\]\:after\:h-1 {
    &[data-panel-group-direction="vertical"] {
      &::after {
        content: var(--tw-content);
        height: calc(var(--spacing) * 1);
      }
    }
  }
  .data-\[panel-group-direction\=vertical\]\:after\:w-full {
    &[data-panel-group-direction="vertical"] {
      &::after {
        content: var(--tw-content);
        width: 100%;
      }
    }
  }
  .data-\[panel-group-direction\=vertical\]\:after\:translate-x-0 {
    &[data-panel-group-direction="vertical"] {
      &::after {
        content: var(--tw-content);
        --tw-translate-x: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .data-\[panel-group-direction\=vertical\]\:after\:-translate-y-1\/2 {
    &[data-panel-group-direction="vertical"] {
      &::after {
        content: var(--tw-content);
        --tw-translate-y: calc(calc(1/2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .data-\[selected\=\'true\'\]\:bg-accent {
    &[data-selected='true'] {
      background-color: var(--color-accent);
    }
  }
  .data-\[side\=bottom\]\:translate-y-1 {
    &[data-side="bottom"] {
      --tw-translate-y: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[side\=left\]\:-translate-x-1 {
    &[data-side="left"] {
      --tw-translate-x: calc(var(--spacing) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[side\=right\]\:translate-x-1 {
    &[data-side="right"] {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[side\=top\]\:-translate-y-1 {
    &[data-side="top"] {
      --tw-translate-y: calc(var(--spacing) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[state\=active\]\:border-b {
    &[data-state="active"] {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
    }
  }
  .data-\[state\=active\]\:border-primary-500 {
    &[data-state="active"] {
      border-color: var(--color-primary-500);
    }
  }
  .data-\[state\=active\]\:text-\[--title-text-color\] {
    &[data-state="active"] {
      color: --title-text-color;
    }
  }
  .data-\[state\=active\]\:text-primary-500 {
    &[data-state="active"] {
      color: var(--color-primary-500);
    }
  }
  .data-\[state\=active\]\:after\:absolute {
    &[data-state="active"] {
      &::after {
        content: var(--tw-content);
        position: absolute;
      }
    }
  }
  .data-\[state\=active\]\:after\:inset-x-0 {
    &[data-state="active"] {
      &::after {
        content: var(--tw-content);
        inset-inline: calc(var(--spacing) * 0);
      }
    }
  }
  .data-\[state\=active\]\:after\:-bottom-2 {
    &[data-state="active"] {
      &::after {
        content: var(--tw-content);
        bottom: calc(var(--spacing) * -2);
      }
    }
  }
  .data-\[state\=active\]\:after\:mx-auto {
    &[data-state="active"] {
      &::after {
        content: var(--tw-content);
        margin-inline: auto;
      }
    }
  }
  .data-\[state\=active\]\:after\:size-1 {
    &[data-state="active"] {
      &::after {
        content: var(--tw-content);
        width: calc(var(--spacing) * 1);
        height: calc(var(--spacing) * 1);
      }
    }
  }
  .data-\[state\=active\]\:after\:rounded-full {
    &[data-state="active"] {
      &::after {
        content: var(--tw-content);
        border-radius: calc(infinity * 1px);
      }
    }
  }
  .data-\[state\=active\]\:after\:bg-\[--title-text-color\] {
    &[data-state="active"] {
      &::after {
        content: var(--tw-content);
        background-color: --title-text-color;
      }
    }
  }
  .data-\[state\=active\]\:after\:opacity-50 {
    &[data-state="active"] {
      &::after {
        content: var(--tw-content);
        opacity: 50%;
      }
    }
  }
  .data-\[state\=checked\]\:translate-x-5 {
    &[data-state="checked"] {
      --tw-translate-x: var(--spacing-5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[state\=checked\]\:scale-95 {
    &[data-state="checked"] {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .data-\[state\=checked\]\:bg-primary {
    &[data-state="checked"] {
      background-color: var(--color-primary);
    }
  }
  .data-\[state\=checked\]\:bg-white {
    &[data-state="checked"] {
      background-color: var(--color-white);
    }
  }
  .data-\[state\=checked\]\:text-\[--title-text-color\] {
    &[data-state="checked"] {
      color: --title-text-color;
    }
  }
  .data-\[state\=checked\]\:shadow {
    &[data-state="checked"] {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .data-\[state\=closed\]\:duration-300 {
    &[data-state="closed"] {
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .data-\[state\=inactive\]\:opacity-50 {
    &[data-state="inactive"] {
      opacity: 50%;
    }
  }
  .data-\[state\=on\]\:bg-accent {
    &[data-state="on"] {
      background-color: var(--color-accent);
    }
  }
  .data-\[state\=open\]\:visible {
    &[data-state="open"] {
      visibility: visible;
    }
  }
  .data-\[state\=open\]\:h-dvh {
    &[data-state="open"] {
      height: 100dvh;
    }
  }
  .data-\[state\=open\]\:scale-100 {
    &[data-state="open"] {
      --tw-scale-x: 100%;
      --tw-scale-y: 100%;
      --tw-scale-z: 100%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .data-\[state\=open\]\:bg-\[--ui-soft-bg\] {
    &[data-state="open"] {
      background-color: --ui-soft-bg;
    }
  }
  .data-\[state\=open\]\:bg-accent {
    &[data-state="open"] {
      background-color: var(--color-accent);
    }
  }
  .data-\[state\=open\]\:bg-accent\/50 {
    &[data-state="open"] {
      background-color: var(--color-accent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-accent) 50%, transparent);
      }
    }
  }
  .data-\[state\=open\]\:bg-gray-950\/5 {
    &[data-state="open"] {
      background-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-950) 5%, transparent);
      }
    }
  }
  .data-\[state\=open\]\:bg-secondary {
    &[data-state="open"] {
      background-color: var(--color-secondary);
    }
  }
  .data-\[state\=open\]\:opacity-100 {
    &[data-state="open"] {
      opacity: 100%;
    }
  }
  .data-\[state\=open\]\:duration-500 {
    &[data-state="open"] {
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
  }
  .data-\[state\=unchecked\]\:translate-x-0 {
    &[data-state="unchecked"] {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[swipe\=cancel\]\:translate-x-0 {
    &[data-swipe="cancel"] {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[swipe\=end\]\:translate-x-\[var\(--radix-toast-swipe-end-x\)\] {
    &[data-swipe="end"] {
      --tw-translate-x: var(--radix-toast-swipe-end-x);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[swipe\=move\]\:translate-x-\[var\(--radix-toast-swipe-move-x\)\] {
    &[data-swipe="move"] {
      --tw-translate-x: var(--radix-toast-swipe-move-x);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[swipe\=move\]\:transition-none {
    &[data-swipe="move"] {
      transition-property: none;
    }
  }
  .data-\[tabs\=default\]\:border-b {
    &[data-tabs="default"] {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
    }
  }
  .data-\[tabs\=default\]\:pb-1 {
    &[data-tabs="default"] {
      padding-bottom: calc(var(--spacing) * 1);
    }
  }
  .data-\[tabs\=pill\]\:\[--title-text-color\:theme\(colors\.white\)\] {
    &[data-tabs="pill"] {
      --title-text-color: #fff;
    }
  }
  .data-\[tabs\=segmented\]\:rounded-\[calc\(var\(--btn-radius\)\+0\.25rem\)\] {
    &[data-tabs="segmented"] {
      border-radius: calc(var(--btn-radius) + 0.25rem);
    }
  }
  .data-\[tabs\=segmented\]\:bg-ui-soft {
    &[data-tabs="segmented"] {
      background-color: var(--color-ui-soft);
    }
  }
  .data-\[tabs\=segmented\]\:p-1 {
    &[data-tabs="segmented"] {
      padding: calc(var(--spacing) * 1);
    }
  }
  .max-md\:flex-wrap {
    @media (width < 48rem) {
      flex-wrap: wrap;
    }
  }
  .max-md\:justify-center {
    @media (width < 48rem) {
      justify-content: center;
    }
  }
  .max-sm\:mt-5 {
    @media (width < 40rem) {
      margin-top: var(--spacing-5);
    }
  }
  .max-sm\:hidden {
    @media (width < 40rem) {
      display: none;
    }
  }
  .max-sm\:btn-square {
    @media (width < 40rem) {
      padding-inline: calc(0.25rem * 0);
      width: var(--size);
      height: var(--size);
    }
  }
  .max-sm\:w-16 {
    @media (width < 40rem) {
      width: calc(var(--spacing) * 16);
    }
  }
  .max-sm\:flex-col {
    @media (width < 40rem) {
      flex-direction: column;
    }
  }
  .max-sm\:items-center {
    @media (width < 40rem) {
      align-items: center;
    }
  }
  .max-sm\:justify-start {
    @media (width < 40rem) {
      justify-content: flex-start;
    }
  }
  .sm\:-inset-32 {
    @media (width >= 40rem) {
      inset: calc(var(--spacing) * -32);
    }
  }
  .sm\:-inset-40 {
    @media (width >= 40rem) {
      inset: calc(var(--spacing) * -40);
    }
  }
  .sm\:top-auto {
    @media (width >= 40rem) {
      top: auto;
    }
  }
  .sm\:right-0 {
    @media (width >= 40rem) {
      right: calc(var(--spacing) * 0);
    }
  }
  .sm\:bottom-0 {
    @media (width >= 40rem) {
      bottom: calc(var(--spacing) * 0);
    }
  }
  .sm\:col-span-2 {
    @media (width >= 40rem) {
      grid-column: span 2 / span 2;
    }
  }
  .sm\:col-span-3 {
    @media (width >= 40rem) {
      grid-column: span 3 / span 3;
    }
  }
  .sm\:mx-0 {
    @media (width >= 40rem) {
      margin-inline: calc(var(--spacing) * 0);
    }
  }
  .sm\:mx-auto {
    @media (width >= 40rem) {
      margin-inline: auto;
    }
  }
  .sm\:-my-\[--card-padding\] {
    @media (width >= 40rem) {
      margin-block: calc(--card-padding * -1);
    }
  }
  .sm\:mt-0 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .sm\:mt-12 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 12);
    }
  }
  .sm\:mt-auto {
    @media (width >= 40rem) {
      margin-top: auto;
    }
  }
  .sm\:-mr-\[--card-padding\] {
    @media (width >= 40rem) {
      margin-right: calc(--card-padding * -1);
    }
  }
  .sm\:mb-0 {
    @media (width >= 40rem) {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .sm\:mb-6 {
    @media (width >= 40rem) {
      margin-bottom: calc(var(--spacing) * 6);
    }
  }
  .sm\:ml-6 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 6);
    }
  }
  .sm\:block {
    @media (width >= 40rem) {
      display: block;
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:grid {
    @media (width >= 40rem) {
      display: grid;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:min-h-56 {
    @media (width >= 40rem) {
      min-height: calc(var(--spacing) * 56);
    }
  }
  .sm\:w-2\/5 {
    @media (width >= 40rem) {
      width: calc(2/5 * 100%);
    }
  }
  .sm\:w-7\/12 {
    @media (width >= 40rem) {
      width: calc(7/12 * 100%);
    }
  }
  .sm\:w-10\/12 {
    @media (width >= 40rem) {
      width: calc(10/12 * 100%);
    }
  }
  .sm\:w-\[150\%\] {
    @media (width >= 40rem) {
      width: 150%;
    }
  }
  .sm\:w-\[var\(--radix-navigation-menu-viewport-width\)\] {
    @media (width >= 40rem) {
      width: var(--radix-navigation-menu-viewport-width);
    }
  }
  .sm\:w-full {
    @media (width >= 40rem) {
      width: 100%;
    }
  }
  .sm\:max-w-full {
    @media (width >= 40rem) {
      max-width: 100%;
    }
  }
  .sm\:max-w-lg {
    @media (width >= 40rem) {
      max-width: var(--container-lg);
    }
  }
  .sm\:max-w-sm {
    @media (width >= 40rem) {
      max-width: var(--container-sm);
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-3 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-4 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .sm\:flex-col {
    @media (width >= 40rem) {
      flex-direction: column;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:justify-end {
    @media (width >= 40rem) {
      justify-content: flex-end;
    }
  }
  .sm\:gap-1 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 1);
    }
  }
  .sm\:gap-2\.5 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 2.5);
    }
  }
  .sm\:gap-3 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 3);
    }
  }
  .sm\:gap-4 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .sm\:gap-6 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .sm\:space-y-0 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .sm\:gap-x-16 {
    @media (width >= 40rem) {
      -moz-column-gap: calc(var(--spacing) * 16);
           column-gap: calc(var(--spacing) * 16);
    }
  }
  .sm\:space-x-2 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .sm\:space-x-4 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .sm\:gap-y-12 {
    @media (width >= 40rem) {
      row-gap: calc(var(--spacing) * 12);
    }
  }
  .sm\:divide-x {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-divide-x-reverse: 0;
        border-inline-style: var(--tw-border-style);
        border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
        border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
      }
    }
  }
  .sm\:divide-y-0 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-divide-y-reverse: 0;
        border-bottom-style: var(--tw-border-style);
        border-top-style: var(--tw-border-style);
        border-top-width: calc(0px * var(--tw-divide-y-reverse));
        border-bottom-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
      }
    }
  }
  .sm\:rounded-lg {
    @media (width >= 40rem) {
      border-radius: var(--radius-lg);
    }
  }
  .sm\:p-12 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 12);
    }
  }
  .sm\:p-16 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 16);
    }
  }
  .sm\:px-0 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .sm\:px-2 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-12 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
  }
  .sm\:px-14 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 14);
    }
  }
  .sm\:py-2 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .sm\:py-4 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .sm\:pt-4 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 4);
    }
  }
  .sm\:pt-40 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 40);
    }
  }
  .sm\:pr-6 {
    @media (width >= 40rem) {
      padding-right: calc(var(--spacing) * 6);
    }
  }
  .sm\:pb-0 {
    @media (width >= 40rem) {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .sm\:pl-6 {
    @media (width >= 40rem) {
      padding-left: calc(var(--spacing) * 6);
    }
  }
  .sm\:text-left {
    @media (width >= 40rem) {
      text-align: left;
    }
  }
  .sm\:text-2xl {
    @media (width >= 40rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .sm\:text-4xl {
    @media (width >= 40rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .sm\:text-5xl {
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .sm\:text-sm {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .sm\:text-xl {
    @media (width >= 40rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .sm\:leading-3 {
    @media (width >= 40rem) {
      --tw-leading: calc(var(--spacing) * 3);
      line-height: calc(var(--spacing) * 3);
    }
  }
  .sm\:leading-none {
    @media (width >= 40rem) {
      --tw-leading: 1;
      line-height: 1;
    }
  }
  .sm\:\*\:py-12 {
    @media (width >= 40rem) {
      :is(& > *) {
        padding-block: calc(var(--spacing) * 12);
      }
    }
  }
  .md\:absolute {
    @media (width >= 48rem) {
      position: absolute;
    }
  }
  .md\:relative {
    @media (width >= 48rem) {
      position: relative;
    }
  }
  .md\:inset-x-0 {
    @media (width >= 48rem) {
      inset-inline: calc(var(--spacing) * 0);
    }
  }
  .md\:top-16 {
    @media (width >= 48rem) {
      top: calc(var(--spacing) * 16);
    }
  }
  .md\:right-\[5\.2rem\] {
    @media (width >= 48rem) {
      right: 5.2rem;
    }
  }
  .md\:order-first {
    @media (width >= 48rem) {
      order: -9999;
    }
  }
  .md\:order-last {
    @media (width >= 48rem) {
      order: 9999;
    }
  }
  .md\:col-span-2 {
    @media (width >= 48rem) {
      grid-column: span 2 / span 2;
    }
  }
  .md\:col-span-3 {
    @media (width >= 48rem) {
      grid-column: span 3 / span 3;
    }
  }
  .md\:col-span-5 {
    @media (width >= 48rem) {
      grid-column: span 5 / span 5;
    }
  }
  .md\:col-start-3 {
    @media (width >= 48rem) {
      grid-column-start: 3;
    }
  }
  .md\:row-start-1 {
    @media (width >= 48rem) {
      grid-row-start: 1;
    }
  }
  .md\:my-\[--card-radius\] {
    @media (width >= 48rem) {
      margin-block: --card-radius;
    }
  }
  .md\:mt-0 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .md\:mb-0 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .md\:mb-12 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 12);
    }
  }
  .md\:-ml-4 {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * -4);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:grid {
    @media (width >= 48rem) {
      display: grid;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:h-5 {
    @media (width >= 48rem) {
      height: var(--spacing-5);
    }
  }
  .md\:h-24 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 24);
    }
  }
  .md\:w-\[var\(--radix-navigation-menu-viewport-width\)\] {
    @media (width >= 48rem) {
      width: var(--radix-navigation-menu-viewport-width);
    }
  }
  .md\:w-auto {
    @media (width >= 48rem) {
      width: auto;
    }
  }
  .md\:w-fit {
    @media (width >= 48rem) {
      width: -moz-fit-content;
      width: fit-content;
    }
  }
  .md\:w-full {
    @media (width >= 48rem) {
      width: 100%;
    }
  }
  .md\:max-w-2xl {
    @media (width >= 48rem) {
      max-width: var(--container-2xl);
    }
  }
  .md\:max-w-\[420px\] {
    @media (width >= 48rem) {
      max-width: 420px;
    }
  }
  .md\:max-w-md {
    @media (width >= 48rem) {
      max-width: var(--container-md);
    }
  }
  .md\:max-w-sm {
    @media (width >= 48rem) {
      max-width: var(--container-sm);
    }
  }
  .md\:max-w-xl {
    @media (width >= 48rem) {
      max-width: var(--container-xl);
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-5 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-\[1\.618fr_minmax\(0\,1fr\)\] {
    @media (width >= 48rem) {
      grid-template-columns: 1.618fr minmax(0,1fr);
    }
  }
  .md\:grid-cols-\[1fr_minmax\(0\,var\(--width-landing-container\)\)_1fr\] {
    @media (width >= 48rem) {
      grid-template-columns: 1fr minmax(0,var(--width-landing-container)) 1fr;
    }
  }
  .md\:grid-cols-\[var\(--width-gutter\)_minmax\(0\,calc\(var\(--width-landing-container\)-var\(--width-gutter\)\*2\)\)_var\(--width-gutter\)\] {
    @media (width >= 48rem) {
      grid-template-columns: var(--width-gutter) minmax(0,calc(var(--width-landing-container) - var(--width-gutter) * 2)) var(--width-gutter);
    }
  }
  .md\:flex-nowrap {
    @media (width >= 48rem) {
      flex-wrap: nowrap;
    }
  }
  .md\:gap-0 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 0);
    }
  }
  .md\:gap-2 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .md\:gap-4 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .md\:gap-12 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 12);
    }
  }
  .md\:space-y-12 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 12) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 12) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .md\:divide-x {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-divide-x-reverse: 0;
        border-inline-style: var(--tw-border-style);
        border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
        border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
      }
    }
  }
  .md\:divide-y-0 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-divide-y-reverse: 0;
        border-bottom-style: var(--tw-border-style);
        border-top-style: var(--tw-border-style);
        border-top-width: calc(0px * var(--tw-divide-y-reverse));
        border-bottom-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
      }
    }
  }
  .md\:rounded-r-none {
    @media (width >= 48rem) {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
  .md\:border-r-0 {
    @media (width >= 48rem) {
      border-right-style: var(--tw-border-style);
      border-right-width: 0px;
    }
  }
  .md\:border-none {
    @media (width >= 48rem) {
      --tw-border-style: none;
      border-style: none;
    }
  }
  .md\:px-4 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .md\:px-12 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
  }
  .md\:py-3 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .md\:pt-20 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 20);
    }
  }
  .md\:pr-1\.5 {
    @media (width >= 48rem) {
      padding-right: calc(var(--spacing) * 1.5);
    }
  }
  .md\:pr-6 {
    @media (width >= 48rem) {
      padding-right: calc(var(--spacing) * 6);
    }
  }
  .md\:btn-md {
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      --btn-p: 1rem;
      --size: calc(var(--size-field, 0.25rem) * 9.5);
    }
  }
  .md\:text-3xl {
    @media (width >= 48rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .md\:text-4xl {
    @media (width >= 48rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .md\:text-5xl {
    @media (width >= 48rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .md\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .md\:leading-3 {
    @media (width >= 48rem) {
      --tw-leading: calc(var(--spacing) * 3);
      line-height: calc(var(--spacing) * 3);
    }
  }
  .md\:opacity-0 {
    @media (width >= 48rem) {
      opacity: 0%;
    }
  }
  .md\:shadow-md {
    @media (width >= 48rem) {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .md\:peer-data-\[variant\=inset\]\:m-2 {
    @media (width >= 48rem) {
      &:is(:where(.peer)[data-variant="inset"] ~ *) {
        margin: calc(var(--spacing) * 2);
      }
    }
  }
  .md\:peer-data-\[variant\=inset\]\:ml-0 {
    @media (width >= 48rem) {
      &:is(:where(.peer)[data-variant="inset"] ~ *) {
        margin-left: calc(var(--spacing) * 0);
      }
    }
  }
  .md\:peer-data-\[variant\=inset\]\:rounded-xl {
    @media (width >= 48rem) {
      &:is(:where(.peer)[data-variant="inset"] ~ *) {
        border-radius: var(--radius-xl);
      }
    }
  }
  .md\:peer-data-\[variant\=inset\]\:shadow {
    @media (width >= 48rem) {
      &:is(:where(.peer)[data-variant="inset"] ~ *) {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .md\:peer-data-\[state\=collapsed\]\:peer-data-\[variant\=inset\]\:ml-2 {
    @media (width >= 48rem) {
      &:is(:where(.peer)[data-state="collapsed"] ~ *) {
        &:is(:where(.peer)[data-variant="inset"] ~ *) {
          margin-left: calc(var(--spacing) * 2);
        }
      }
    }
  }
  .after\:md\:hidden {
    &::after {
      content: var(--tw-content);
      @media (width >= 48rem) {
        display: none;
      }
    }
  }
  .lg\:card {
    @media (width >= 64rem) {
      position: relative;
      display: flex;
      flex-direction: column;
      border-radius: var(--radius-box);
      --tw-border-style: solid;
      border-style: solid;
      border-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
      background-color: var(--color-base-100);
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
      box-shadow: var( --card-shadow, 0 1px 3px 0 var(--color-base-300), 0 1px 2px -1px var(--color-base-300) );
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: var( --card-shadow, 0 1px 3px 0 color-mix(in oklab, var(--color-base-300) 20%, #0000), 0 1px 2px -1px color-mix(in oklab, var(--color-base-300) 20%, #0000) );
      }
      border-width: var(--card-border, 0px);
      &:focus {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      :where(figure:first-child) {
        overflow: hidden;
        border-start-start-radius: inherit;
        border-start-end-radius: inherit;
        border-end-start-radius: unset;
        border-end-end-radius: unset;
      }
      :where(figure:last-child) {
        overflow: hidden;
        border-start-start-radius: unset;
        border-start-end-radius: unset;
        border-end-start-radius: inherit;
        border-end-end-radius: inherit;
      }
      &:where(.card-border) {
        border: var(--border) solid var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          border: var(--border) solid color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      &.image-full {
        display: grid;
        &:before {
          position: relative;
          grid-column-start: 1;
          grid-row-start: 1;
          border-radius: var(--radius-box);
          background-color: var(--color-neutral);
          opacity: 75%;
          content: "";
        }
        > * {
          grid-column-start: 1;
          grid-row-start: 1;
        }
        > .card-body {
          position: relative;
          color: var(--color-neutral-content);
        }
        :where(figure) {
          overflow: hidden;
          border-radius: inherit;
        }
        > figure img {
          height: 100%;
          -o-object-fit: cover;
             object-fit: cover;
        }
      }
      figure {
        display: flex;
        align-items: center;
        justify-content: center;
      }
      &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
        cursor: pointer;
        -webkit-user-select: none;
           -moz-user-select: none;
                user-select: none;
      }
      &:has(> :checked) {
        outline: 2px solid currentColor;
      }
      & .card-alert {
        border-radius: 0;
        &:first-child {
          border-top-left-radius: var(--radius-box);
          border-top-right-radius: var(--radius-box);
        }
        &:last-child {
          border-bottom-right-radius: var(--radius-box);
          border-bottom-left-radius: var(--radius-box);
        }
      }
    }
  }
  .lg\:absolute {
    @media (width >= 64rem) {
      position: absolute;
    }
  }
  .lg\:sticky {
    @media (width >= 64rem) {
      position: sticky;
    }
  }
  .lg\:inset-x-0 {
    @media (width >= 64rem) {
      inset-inline: calc(var(--spacing) * 0);
    }
  }
  .lg\:inset-y-16 {
    @media (width >= 64rem) {
      inset-block: calc(var(--spacing) * 16);
    }
  }
  .lg\:top-2 {
    @media (width >= 64rem) {
      top: calc(var(--spacing) * 2);
    }
  }
  .lg\:top-6 {
    @media (width >= 64rem) {
      top: calc(var(--spacing) * 6);
    }
  }
  .lg\:top-32 {
    @media (width >= 64rem) {
      top: calc(var(--spacing) * 32);
    }
  }
  .lg\:bottom-auto {
    @media (width >= 64rem) {
      bottom: auto;
    }
  }
  .lg\:left-72 {
    @media (width >= 64rem) {
      left: calc(var(--spacing) * 72);
    }
  }
  .lg\:left-auto {
    @media (width >= 64rem) {
      left: auto;
    }
  }
  .lg\:col-span-1 {
    @media (width >= 64rem) {
      grid-column: span 1 / span 1;
    }
  }
  .lg\:col-span-2 {
    @media (width >= 64rem) {
      grid-column: span 2 / span 2;
    }
  }
  .lg\:col-span-3 {
    @media (width >= 64rem) {
      grid-column: span 3 / span 3;
    }
  }
  .lg\:row-span-2 {
    @media (width >= 64rem) {
      grid-row: span 2 / span 2;
    }
  }
  .lg\:m-0 {
    @media (width >= 64rem) {
      margin: calc(var(--spacing) * 0);
    }
  }
  .lg\:mx-0 {
    @media (width >= 64rem) {
      margin-inline: calc(var(--spacing) * 0);
    }
  }
  .lg\:mx-auto {
    @media (width >= 64rem) {
      margin-inline: auto;
    }
  }
  .lg\:my-12 {
    @media (width >= 64rem) {
      margin-block: calc(var(--spacing) * 12);
    }
  }
  .lg\:mt-0 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .lg\:mt-auto {
    @media (width >= 64rem) {
      margin-top: auto;
    }
  }
  .lg\:-mr-56 {
    @media (width >= 64rem) {
      margin-right: calc(var(--spacing) * -56);
    }
  }
  .lg\:-mr-80 {
    @media (width >= 64rem) {
      margin-right: calc(var(--spacing) * -80);
    }
  }
  .lg\:-mr-\[40rem\] {
    @media (width >= 64rem) {
      margin-right: calc(40rem * -1);
    }
  }
  .lg\:mr-0 {
    @media (width >= 64rem) {
      margin-right: calc(var(--spacing) * 0);
    }
  }
  .lg\:mr-auto {
    @media (width >= 64rem) {
      margin-right: auto;
    }
  }
  .lg\:mb-0 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .lg\:-ml-4 {
    @media (width >= 64rem) {
      margin-left: calc(var(--spacing) * -4);
    }
  }
  .lg\:ml-0 {
    @media (width >= 64rem) {
      margin-left: calc(var(--spacing) * 0);
    }
  }
  .lg\:ml-auto {
    @media (width >= 64rem) {
      margin-left: auto;
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:grid {
    @media (width >= 64rem) {
      display: grid;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:h-14 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 14);
    }
  }
  .lg\:h-16 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 16);
    }
  }
  .lg\:h-24 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 24);
    }
  }
  .lg\:h-28 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 28);
    }
  }
  .lg\:h-\[4\.5rem\] {
    @media (width >= 64rem) {
      height: 4.5rem;
    }
  }
  .lg\:h-\[44rem\] {
    @media (width >= 64rem) {
      height: 44rem;
    }
  }
  .lg\:h-\[calc\(100dvh-4rem\)\] {
    @media (width >= 64rem) {
      height: calc(100dvh - 4rem);
    }
  }
  .lg\:h-\[calc\(100vh-4rem\)\] {
    @media (width >= 64rem) {
      height: calc(100vh - 4rem);
    }
  }
  .lg\:h-fit {
    @media (width >= 64rem) {
      height: -moz-fit-content;
      height: fit-content;
    }
  }
  .lg\:w-1\/2 {
    @media (width >= 64rem) {
      width: calc(1/2 * 100%);
    }
  }
  .lg\:w-2\/5 {
    @media (width >= 64rem) {
      width: calc(2/5 * 100%);
    }
  }
  .lg\:w-4\/5 {
    @media (width >= 64rem) {
      width: calc(4/5 * 100%);
    }
  }
  .lg\:w-24 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 24);
    }
  }
  .lg\:w-44 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 44);
    }
  }
  .lg\:w-48 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 48);
    }
  }
  .lg\:w-\[20rem\] {
    @media (width >= 64rem) {
      width: 20rem;
    }
  }
  .lg\:w-\[calc\(100\%-17rem\)\] {
    @media (width >= 64rem) {
      width: calc(100% - 17rem);
    }
  }
  .lg\:w-auto {
    @media (width >= 64rem) {
      width: auto;
    }
  }
  .lg\:w-fit {
    @media (width >= 64rem) {
      width: -moz-fit-content;
      width: fit-content;
    }
  }
  .lg\:w-full {
    @media (width >= 64rem) {
      width: 100%;
    }
  }
  .lg\:max-w-2xl {
    @media (width >= 64rem) {
      max-width: var(--container-2xl);
    }
  }
  .lg\:max-w-\[76rem\] {
    @media (width >= 64rem) {
      max-width: 76rem;
    }
  }
  .lg\:\[grid-template-columns\:1fr_auto\] {
    @media (width >= 64rem) {
      grid-template-columns: 1fr auto;
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:grid-rows-2 {
    @media (width >= 64rem) {
      grid-template-rows: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:flex-col {
    @media (width >= 64rem) {
      flex-direction: column;
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:items-center {
    @media (width >= 64rem) {
      align-items: center;
    }
  }
  .lg\:items-start {
    @media (width >= 64rem) {
      align-items: flex-start;
    }
  }
  .lg\:justify-between {
    @media (width >= 64rem) {
      justify-content: space-between;
    }
  }
  .lg\:justify-end {
    @media (width >= 64rem) {
      justify-content: flex-end;
    }
  }
  .lg\:gap-0 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 0);
    }
  }
  .lg\:gap-1\.5 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 1.5);
    }
  }
  .lg\:gap-3 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 3);
    }
  }
  .lg\:gap-6 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .lg\:gap-8 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .lg\:gap-12 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 12);
    }
  }
  .lg\:gap-24 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 24);
    }
  }
  .lg\:space-y-0 {
    @media (width >= 64rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .lg\:space-y-6 {
    @media (width >= 64rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .lg\:divide-y-0 {
    @media (width >= 64rem) {
      :where(& > :not(:last-child)) {
        --tw-divide-y-reverse: 0;
        border-bottom-style: var(--tw-border-style);
        border-top-style: var(--tw-border-style);
        border-top-width: calc(0px * var(--tw-divide-y-reverse));
        border-bottom-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
      }
    }
  }
  .lg\:overflow-clip {
    @media (width >= 64rem) {
      overflow: clip;
    }
  }
  .lg\:overflow-visible {
    @media (width >= 64rem) {
      overflow: visible;
    }
  }
  .lg\:rounded-none {
    @media (width >= 64rem) {
      border-radius: 0;
    }
  }
  .lg\:border {
    @media (width >= 64rem) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .lg\:border-t-0 {
    @media (width >= 64rem) {
      border-top-style: var(--tw-border-style);
      border-top-width: 0px;
    }
  }
  .lg\:border-r {
    @media (width >= 64rem) {
      border-right-style: var(--tw-border-style);
      border-right-width: 1px;
    }
  }
  .lg\:border-l {
    @media (width >= 64rem) {
      border-left-style: var(--tw-border-style);
      border-left-width: 1px;
    }
  }
  .lg\:\!border-none {
    @media (width >= 64rem) {
      --tw-border-style: none !important;
      border-style: none !important;
    }
  }
  .lg\:border-transparent {
    @media (width >= 64rem) {
      border-color: transparent;
    }
  }
  .lg\:bg-transparent {
    @media (width >= 64rem) {
      background-color: transparent;
    }
  }
  .lg\:p-0 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .lg\:p-8 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .lg\:p-10 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 10);
    }
  }
  .lg\:p-12 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 12);
    }
  }
  .lg\:px-0 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .lg\:px-2 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .lg\:px-4 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .lg\:px-6 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .lg\:px-10 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .lg\:px-12 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
  }
  .lg\:px-36 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 36);
    }
  }
  .lg\:py-2 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .lg\:py-4 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .lg\:py-16 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .lg\:py-20 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 20);
    }
  }
  .lg\:py-24 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 24);
    }
  }
  .lg\:pt-0 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .lg\:pt-6 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 6);
    }
  }
  .lg\:pt-12 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 12);
    }
  }
  .lg\:pt-20 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 20);
    }
  }
  .lg\:pt-28 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 28);
    }
  }
  .lg\:pr-0 {
    @media (width >= 64rem) {
      padding-right: calc(var(--spacing) * 0);
    }
  }
  .lg\:pr-4 {
    @media (width >= 64rem) {
      padding-right: calc(var(--spacing) * 4);
    }
  }
  .lg\:pr-12 {
    @media (width >= 64rem) {
      padding-right: calc(var(--spacing) * 12);
    }
  }
  .lg\:pb-0 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .lg\:pb-6 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 6);
    }
  }
  .lg\:pl-2 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 2);
    }
  }
  .lg\:pl-4 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 4);
    }
  }
  .lg\:pl-6 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 6);
    }
  }
  .lg\:pl-12 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 12);
    }
  }
  .lg\:pl-56 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 56);
    }
  }
  .lg\:text-left {
    @media (width >= 64rem) {
      text-align: left;
    }
  }
  .lg\:btn-lg {
    @media (width >= 64rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
      --btn-p: 1.25rem;
      --size: calc(var(--size-field, 0.25rem) * 11.5);
    }
  }
  .lg\:text-5xl {
    @media (width >= 64rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .lg\:text-6xl {
    @media (width >= 64rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .lg\:text-lg {
    @media (width >= 64rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .lg\:text-sm {
    @media (width >= 64rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .lg\:text-\[68px\] {
    @media (width >= 64rem) {
      font-size: 68px;
    }
  }
  .lg\:leading-3 {
    @media (width >= 64rem) {
      --tw-leading: calc(var(--spacing) * 3);
      line-height: calc(var(--spacing) * 3);
    }
  }
  .lg\:leading-\[76px\] {
    @media (width >= 64rem) {
      --tw-leading: 76px;
      line-height: 76px;
    }
  }
  .lg\:shadow-none {
    @media (width >= 64rem) {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .lg\:\!outline-none {
    @media (width >= 64rem) {
      --tw-outline-style: none !important;
      outline-style: none !important;
    }
  }
  .lg\:group-data-\[state\=active\]\:flex {
    @media (width >= 64rem) {
      &:is(:where(.group)[data-state="active"] *) {
        display: flex;
      }
    }
  }
  .lg\:before\:fixed {
    @media (width >= 64rem) {
      &::before {
        content: var(--tw-content);
        position: fixed;
      }
    }
  }
  .lg\:before\:inset-0 {
    @media (width >= 64rem) {
      &::before {
        content: var(--tw-content);
        inset: calc(var(--spacing) * 0);
      }
    }
  }
  .lg\:before\:-z-40 {
    @media (width >= 64rem) {
      &::before {
        content: var(--tw-content);
        z-index: calc(40 * -1);
      }
    }
  }
  .xl\:right-8 {
    @media (width >= 80rem) {
      right: calc(var(--spacing) * 8);
    }
  }
  .xl\:bottom-8 {
    @media (width >= 80rem) {
      bottom: calc(var(--spacing) * 8);
    }
  }
  .xl\:left-80 {
    @media (width >= 80rem) {
      left: calc(var(--spacing) * 80);
    }
  }
  .xl\:mb-10 {
    @media (width >= 80rem) {
      margin-bottom: calc(var(--spacing) * 10);
    }
  }
  .xl\:block {
    @media (width >= 80rem) {
      display: block;
    }
  }
  .xl\:flex {
    @media (width >= 80rem) {
      display: flex;
    }
  }
  .xl\:w-\[calc\(100\%-17rem\)\] {
    @media (width >= 80rem) {
      width: calc(100% - 17rem);
    }
  }
  .xl\:w-full {
    @media (width >= 80rem) {
      width: 100%;
    }
  }
  .xl\:gap-16 {
    @media (width >= 80rem) {
      gap: calc(var(--spacing) * 16);
    }
  }
  .xl\:px-0 {
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .xl\:text-5xl {
    @media (width >= 80rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .xl\:\[line-height\:1\.125\] {
    @media (width >= 80rem) {
      line-height: 1.125;
    }
  }
  .\32 xl\:max-w-7xl {
    @media (width >= 96rem) {
      max-width: var(--container-7xl);
    }
  }
  .rtl\:\!mr-0 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      margin-right: calc(var(--spacing) * 0) !important;
    }
  }
  .rtl\:rotate-0 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: 0deg;
    }
  }
  .rtl\:rotate-180 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: 180deg;
    }
  }
  .dark\:order-1 {
    &:where(.dark, .dark *) {
      order: 1;
    }
  }
  .dark\:block {
    &:where(.dark, .dark *) {
      display: block;
    }
  }
  .dark\:hidden {
    &:where(.dark, .dark *) {
      display: none;
    }
  }
  .dark\:scale-0 {
    &:where(.dark, .dark *) {
      --tw-scale-x: 0%;
      --tw-scale-y: 0%;
      --tw-scale-z: 0%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .dark\:scale-100 {
    &:where(.dark, .dark *) {
      --tw-scale-x: 100%;
      --tw-scale-y: 100%;
      --tw-scale-z: 100%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .dark\:-rotate-180 {
    &:where(.dark, .dark *) {
      rotate: calc(180deg * -1);
    }
  }
  .dark\:rotate-0 {
    &:where(.dark, .dark *) {
      rotate: 0deg;
    }
  }
  .dark\:rotate-90 {
    &:where(.dark, .dark *) {
      rotate: 90deg;
    }
  }
  .dark\:rotate-180 {
    &:where(.dark, .dark *) {
      rotate: 180deg;
    }
  }
  .dark\:list-image-\[url\(\/check\.svg\)\] {
    &:where(.dark, .dark *) {
      list-style-image: url(/check.svg);
    }
  }
  .dark\:divide-neutral-700 {
    &:where(.dark, .dark *) {
      :where(& > :not(:last-child)) {
        border-color: var(--color-neutral-700);
      }
    }
  }
  .dark\:border-0 {
    &:where(.dark, .dark *) {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .dark\:border-t {
    &:where(.dark, .dark *) {
      border-top-style: var(--tw-border-style);
      border-top-width: 1px;
    }
  }
  .dark\:border-none {
    &:where(.dark, .dark *) {
      --tw-border-style: none;
      border-style: none;
    }
  }
  .dark\:border-blue-400\/75 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(70.7% 0.165 254.624) 75%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-blue-400) 75%, transparent);
      }
    }
  }
  .dark\:border-gray-500\/20 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-500);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-gray-500) 20%, transparent);
      }
    }
  }
  .dark\:border-gray-500\/25 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-500);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-gray-500) 25%, transparent);
      }
    }
  }
  .dark\:border-gray-700 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-700);
    }
  }
  .dark\:border-gray-800 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-800);
    }
  }
  .dark\:border-info-400\/20 {
    &:where(.dark, .dark *) {
      border-color: var(--color-info-400);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-info-400) 20%, transparent);
      }
    }
  }
  .dark\:border-neutral-700 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-700);
    }
  }
  .dark\:border-neutral-800 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-800);
    }
  }
  .dark\:border-white {
    &:where(.dark, .dark *) {
      border-color: var(--color-white);
    }
  }
  .dark\:border-white\/5 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:border-white\/10 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:border-white\/15 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:border-white\/25 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 25%, transparent);
      }
    }
  }
  .dark\:border-white\/35 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 35%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 35%, transparent);
      }
    }
  }
  .dark\:border-white\/\[0\.07\] {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 7.000000000000001%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 7.000000000000001%, transparent);
      }
    }
  }
  .dark\:\!bg-\[--ui-bg\] {
    &:where(.dark, .dark *) {
      background-color: --ui-bg !important;
    }
  }
  .dark\:\!bg-gray-950\/50 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-950) !important;
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-950) 50%, transparent) !important;
      }
    }
  }
  .dark\:\!bg-transparent {
    &:where(.dark, .dark *) {
      background-color: transparent !important;
    }
  }
  .dark\:bg-\[--overlay-bg\] {
    &:where(.dark, .dark *) {
      background-color: --overlay-bg;
    }
  }
  .dark\:bg-\[--ui-soft-bg\] {
    &:where(.dark, .dark *) {
      background-color: --ui-soft-bg;
    }
  }
  .dark\:bg-\[var\(--ui-bg\)\] {
    &:where(.dark, .dark *) {
      background-color: var(--ui-bg);
    }
  }
  .dark\:bg-gray-500\/5 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-500) 5%, transparent);
      }
    }
  }
  .dark\:bg-gray-500\/25 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-500) 25%, transparent);
      }
    }
  }
  .dark\:bg-gray-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-700);
    }
  }
  .dark\:bg-gray-800 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-800);
    }
  }
  .dark\:bg-gray-800\/75 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-800);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-800) 75%, transparent);
      }
    }
  }
  .dark\:bg-gray-900 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-900);
    }
  }
  .dark\:bg-gray-900\/50 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-900);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-900) 50%, transparent);
      }
    }
  }
  .dark\:bg-gray-950 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-950);
    }
  }
  .dark\:bg-gray-950\/25 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-950) 25%, transparent);
      }
    }
  }
  .dark\:bg-gray-950\/50 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-950) 50%, transparent);
      }
    }
  }
  .dark\:bg-gray-950\/75 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-950) 75%, transparent);
      }
    }
  }
  .dark\:bg-neutral-900 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-900);
    }
  }
  .dark\:bg-primary-400 {
    &:where(.dark, .dark *) {
      background-color: var(--color-primary-400);
    }
  }
  .dark\:bg-transparent {
    &:where(.dark, .dark *) {
      background-color: transparent;
    }
  }
  .dark\:bg-ui-soft {
    &:where(.dark, .dark *) {
      background-color: var(--color-ui-soft);
    }
  }
  .dark\:bg-white {
    &:where(.dark, .dark *) {
      background-color: var(--color-white);
    }
  }
  .dark\:bg-white\/5 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:bg-white\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:bg-white\/20 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .dark\:bg-gradient-to-t {
    &:where(.dark, .dark *) {
      --tw-gradient-position: to top in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  }
  .dark\:\[background-image\:none\] {
    &:where(.dark, .dark *) {
      background-image: none;
    }
  }
  .dark\:from-\[--ui-border-color\] {
    &:where(.dark, .dark *) {
      --tw-gradient-from: --ui-border-color;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-gray-950 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: var(--color-gray-950);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-primary-400 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: var(--color-primary-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-primary-950 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: var(--color-primary-950);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-white {
    &:where(.dark, .dark *) {
      --tw-gradient-from: var(--color-white);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-white\/\[0\.07\] {
    &:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in srgb, #fff 7.000000000000001%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--color-white) 7.000000000000001%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:via-transparent {
    &:where(.dark, .dark *) {
      --tw-gradient-via: transparent;
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }
  .dark\:to-\[--ui-border-color\] {
    &:where(.dark, .dark *) {
      --tw-gradient-to: --ui-border-color;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-gray-800 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: var(--color-gray-800);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-gray-950 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: var(--color-gray-950);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-primary-700 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: var(--color-primary-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-transparent {
    &:where(.dark, .dark *) {
      --tw-gradient-to: transparent;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-white {
    &:where(.dark, .dark *) {
      --tw-gradient-to: var(--color-white);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-0\% {
    &:where(.dark, .dark *) {
      --tw-gradient-to-position: 0%;
    }
  }
  .dark\:fill-neutral-200 {
    &:where(.dark, .dark *) {
      fill: var(--color-neutral-200);
    }
  }
  .dark\:fill-neutral-800 {
    &:where(.dark, .dark *) {
      fill: var(--color-neutral-800);
    }
  }
  .dark\:fill-white {
    &:where(.dark, .dark *) {
      fill: var(--color-white);
    }
  }
  .dark\:font-normal {
    &:where(.dark, .dark *) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
  }
  .dark\:\!text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white) !important;
    }
  }
  .dark\:text-\[\#57a1c7\] {
    &:where(.dark, .dark *) {
      color: #57a1c7;
    }
  }
  .dark\:text-blue-400 {
    &:where(.dark, .dark *) {
      color: var(--color-blue-400);
    }
  }
  .dark\:text-blue-500 {
    &:where(.dark, .dark *) {
      color: var(--color-blue-500);
    }
  }
  .dark\:text-gray-100 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-100);
    }
  }
  .dark\:text-gray-300 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-300);
    }
  }
  .dark\:text-gray-400 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-400);
    }
  }
  .dark\:text-gray-600 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-600);
    }
  }
  .dark\:text-info-400 {
    &:where(.dark, .dark *) {
      color: var(--color-info-400);
    }
  }
  .dark\:text-neutral-200 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-200);
    }
  }
  .dark\:text-neutral-400 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-400);
    }
  }
  .dark\:text-neutral-500 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-500);
    }
  }
  .dark\:text-primary-100 {
    &:where(.dark, .dark *) {
      color: var(--color-primary-100);
    }
  }
  .dark\:text-primary-400 {
    &:where(.dark, .dark *) {
      color: var(--color-primary-400);
    }
  }
  .dark\:text-primary-500 {
    &:where(.dark, .dark *) {
      color: var(--color-primary-500);
    }
  }
  .dark\:text-primary-500\/5 {
    &:where(.dark, .dark *) {
      color: var(--color-primary-500);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-primary-500) 5%, transparent);
      }
    }
  }
  .dark\:text-primary-500\/50 {
    &:where(.dark, .dark *) {
      color: var(--color-primary-500);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-primary-500) 50%, transparent);
      }
    }
  }
  .dark\:text-primary-600\/30 {
    &:where(.dark, .dark *) {
      color: var(--color-primary-600);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-primary-600) 30%, transparent);
      }
    }
  }
  .dark\:text-warning-300 {
    &:where(.dark, .dark *) {
      color: var(--color-warning-300);
    }
  }
  .dark\:text-warning-400 {
    &:where(.dark, .dark *) {
      color: var(--color-warning-400);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:text-white\/5 {
    &:where(.dark, .dark *) {
      color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:text-white\/10 {
    &:where(.dark, .dark *) {
      color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:placeholder-gray-600 {
    &:where(.dark, .dark *) {
      &::-moz-placeholder {
        color: var(--color-gray-600);
      }
      &::placeholder {
        color: var(--color-gray-600);
      }
    }
  }
  .dark\:placeholder-neutral-500 {
    &:where(.dark, .dark *) {
      &::-moz-placeholder {
        color: var(--color-neutral-500);
      }
      &::placeholder {
        color: var(--color-neutral-500);
      }
    }
  }
  .dark\:opacity-0 {
    &:where(.dark, .dark *) {
      opacity: 0%;
    }
  }
  .dark\:opacity-5 {
    &:where(.dark, .dark *) {
      opacity: 5%;
    }
  }
  .dark\:opacity-10 {
    &:where(.dark, .dark *) {
      opacity: 10%;
    }
  }
  .dark\:opacity-50 {
    &:where(.dark, .dark *) {
      opacity: 50%;
    }
  }
  .dark\:opacity-100 {
    &:where(.dark, .dark *) {
      opacity: 100%;
    }
  }
  .dark\:shadow {
    &:where(.dark, .dark *) {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:shadow-inner {
    &:where(.dark, .dark *) {
      --tw-shadow: inset 0 2px 4px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:shadow-none {
    &:where(.dark, .dark *) {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:shadow-xl {
    &:where(.dark, .dark *) {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:ring-\[0\.75px\] {
    &:where(.dark, .dark *) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0.75px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:\[box-shadow\:0_1px_1px_0_rgb\(var\(--colors-gray-925\)\)\] {
    &:where(.dark, .dark *) {
      box-shadow: 0 1px 1px 0 rgb(var(--colors-gray-925));
    }
  }
  .dark\:shadow-gray-950 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--color-gray-950) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-gray-950\/25 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 25%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-gray-950\/35 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 35%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-gray-950\/50 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 50%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-primary-950\/25 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: var(--color-primary-950);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-primary-950) 25%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-white\/10 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-white) 10%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:ring-gray-950 {
    &:where(.dark, .dark *) {
      --tw-ring-color: var(--color-gray-950);
    }
  }
  .dark\:outline-gray-950\/50 {
    &:where(.dark, .dark *) {
      outline-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-gray-950) 50%, transparent);
      }
    }
  }
  .dark\:outline-transparent {
    &:where(.dark, .dark *) {
      outline-color: transparent;
    }
  }
  .dark\:invert {
    &:where(.dark, .dark *) {
      --tw-invert: invert(100%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .dark\:invert-0 {
    &:where(.dark, .dark *) {
      --tw-invert: invert(0%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .dark\:backdrop-blur-none {
    &:where(.dark, .dark *) {
      --tw-backdrop-blur:  ;
      -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
  }
  .dark\:backdrop-blur-xl {
    &:where(.dark, .dark *) {
      --tw-backdrop-blur: blur(var(--blur-xl));
      -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
  }
  .dark\:\[--bg-color\:theme\(colors\.gray\.800\)\] {
    &:where(.dark, .dark *) {
      --bg-color: var(--neutral-800);
    }
  }
  .dark\:\[--bg-color\:theme\(colors\.gray\.950\)\] {
    &:where(.dark, .dark *) {
      --bg-color: var(--neutral-950);
    }
  }
  .dark\:\[--bg-color\:theme\(colors\.white\/0\.05\)\] {
    &:where(.dark, .dark *) {
      --bg-color: color-mix(in oklab, #fff 5%, transparent);
    }
  }
  .dark\:\[--body-text-color\:theme\(colors\.gray\.300\)\] {
    &:where(.dark, .dark *) {
      --body-text-color: var(--neutral-300);
    }
  }
  .dark\:\[--body-text-color\:theme\(colors\.gray\.400\)\] {
    &:where(.dark, .dark *) {
      --body-text-color: var(--neutral-400);
    }
  }
  .dark\:\[--btn-border-color\:theme\(colors\.gray\.500\/0\.3\)\] {
    &:where(.dark, .dark *) {
      --btn-border-color: var(--neutral-500);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-border-color: color-mix(in oklab, var(--neutral-500) 30%, transparent);
      }
    }
  }
  .dark\:\[--card-shadow-opacity\:0\.25\] {
    &:where(.dark, .dark *) {
      --card-shadow-opacity: 0.25;
    }
  }
  .dark\:\[--color\:var\(--color-surface-2\)\] {
    &:where(.dark, .dark *) {
      --color: var(--color-surface-2);
    }
  }
  .dark\:\[--inner-border-color\:0\] {
    &:where(.dark, .dark *) {
      --inner-border-color: 0;
    }
  }
  .dark\:\[--layer-color\:theme\(colors\.gray\.950\)\] {
    &:where(.dark, .dark *) {
      --layer-color: var(--neutral-950);
    }
  }
  .dark\:\[--outline-radial-opacity\:0\.2\] {
    &:where(.dark, .dark *) {
      --outline-radial-opacity: 0.2;
    }
  }
  .dark\:\[--stripes-color\:theme\(colors\.white\/0\.2\)\] {
    &:where(.dark, .dark *) {
      --stripes-color: color-mix(in oklab, #fff 20%, transparent);
    }
  }
  .dark\:\[--ui-bg\:theme\(colors\.gray\.900\)\] {
    &:where(.dark, .dark *) {
      --ui-bg: var(--neutral-900);
    }
  }
  .dark\:\[--ui-border-color\:theme\(colors\.gray\.700\/0\.4\)\] {
    &:where(.dark, .dark *) {
      --ui-border-color: var(--neutral-700);
      @supports (color: color-mix(in lab, red, red)) {
        --ui-border-color: color-mix(in oklab, var(--neutral-700) 40%, transparent);
      }
    }
  }
  .dark\:\[--ui-border-color\:theme\(colors\.gray\.700\/0\.5\)\] {
    &:where(.dark, .dark *) {
      --ui-border-color: var(--neutral-700);
      @supports (color: color-mix(in lab, red, red)) {
        --ui-border-color: color-mix(in oklab, var(--neutral-700) 50%, transparent);
      }
    }
  }
  .dark\:\[--ui-border-color\:theme\(colors\.gray\.700\/0\.25\)\] {
    &:where(.dark, .dark *) {
      --ui-border-color: var(--neutral-700);
      @supports (color: color-mix(in lab, red, red)) {
        --ui-border-color: color-mix(in oklab, var(--neutral-700) 25%, transparent);
      }
    }
  }
  .dark\:\[--ui-border-color\:theme\(colors\.gray\.800\/0\.6\)\] {
    &:where(.dark, .dark *) {
      --ui-border-color: var(--neutral-800);
      @supports (color: color-mix(in lab, red, red)) {
        --ui-border-color: color-mix(in oklab, var(--neutral-800) 60%, transparent);
      }
    }
  }
  .dark\:\[--ui-border-color\:theme\(colors\.primary\.500\/0\.25\)\] {
    &:where(.dark, .dark *) {
      --ui-border-color: var(--primary-500);
      @supports (color: color-mix(in lab, red, red)) {
        --ui-border-color: color-mix(in oklab, var(--primary-500) 25%, transparent);
      }
    }
  }
  .dark\:\[--ui-border-color\:theme\(colors\.white\/0\.2\)\] {
    &:where(.dark, .dark *) {
      --ui-border-color: color-mix(in oklab, #fff 20%, transparent);
    }
  }
  .dark\:\[--ui-border-color\:theme\(colors\.white\/0\.15\)\] {
    &:where(.dark, .dark *) {
      --ui-border-color: color-mix(in oklab, #fff 15%, transparent);
    }
  }
  .dark\:\[--ui-soft-bg\:var\(--ui-bg\)\] {
    &:where(.dark, .dark *) {
      --ui-soft-bg: var(--ui-bg);
    }
  }
  .dark\:dark\:\[--ui-border-color\:theme\(colors\.gray\.800\)\] {
    &:where(.dark, .dark *) {
      &:where(.dark, .dark *) {
        --ui-border-color: var(--neutral-800);
      }
    }
  }
  .dark\:\*\:border-white\/5 {
    &:where(.dark, .dark *) {
      :is(& > *) {
        border-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:\*\:bg-gray-950 {
    &:where(.dark, .dark *) {
      :is(& > *) {
        background-color: var(--color-gray-950);
      }
    }
  }
  .dark\:group-hover\:bg-primary-950 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          background-color: var(--color-primary-950);
        }
      }
    }
  }
  .dark\:group-hover\:fill-warning-400 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          fill: var(--color-warning-400);
        }
      }
    }
  }
  .dark\:group-hover\:fill-white {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          fill: var(--color-white);
        }
      }
    }
  }
  .dark\:group-hover\:text-primary-400 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-primary-400);
        }
      }
    }
  }
  .dark\:group-hover\:text-white {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .dark\:group-hover\:opacity-5 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          opacity: 5%;
        }
      }
    }
  }
  .dark\:group-hover\:\[--ui-border-color\:theme\(colors\.white\/0\.2\)\] {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          --ui-border-color: color-mix(in oklab, #fff 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-\[state\=active\]\:text-white {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-state="active"] *) {
        color: var(--color-white);
      }
    }
  }
  .dark\:peer-disabled\:text-gray-400 {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):disabled ~ *) {
        color: var(--color-gray-400);
      }
    }
  }
  .dark\:before\:border-white\/5 {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        border-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:before\:bg-\[\#1E1F1F\] {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: #1E1F1F;
      }
    }
  }
  .dark\:before\:bg-gray-500 {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-gray-500);
      }
    }
  }
  .dark\:before\:bg-gray-600 {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-gray-600);
      }
    }
  }
  .dark\:before\:bg-primary-400 {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-primary-400);
      }
    }
  }
  .dark\:before\:bg-primary-400\/20 {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-primary-400);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary-400) 20%, transparent);
        }
      }
    }
  }
  .dark\:before\:bg-ui {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-ui);
      }
    }
  }
  .dark\:before\:bg-white\/5 {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:before\:from-gray-950 {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        --tw-gradient-from: var(--color-gray-950);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .dark\:before\:opacity-0 {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        opacity: 0%;
      }
    }
  }
  .dark\:hover\:border-neutral-700 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-neutral-700);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-500\/10 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-500);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-gray-500) 10%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-700 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-700);
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-800 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-800);
        }
      }
    }
  }
  .dark\:hover\:bg-transparent {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: transparent;
        }
      }
    }
  }
  .dark\:hover\:bg-white\/10 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #fff 10%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:text-blue-400 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-blue-400);
        }
      }
    }
  }
  .dark\:hover\:text-info-300 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-info-300);
        }
      }
    }
  }
  .dark\:hover\:text-info-400 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-info-400);
        }
      }
    }
  }
  .dark\:hover\:text-neutral-300 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-neutral-300);
        }
      }
    }
  }
  .dark\:hover\:text-primary-300 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-primary-300);
        }
      }
    }
  }
  .dark\:hover\:text-primary-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-primary-500);
        }
      }
    }
  }
  .dark\:hover\:text-white {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .dark\:hover\:brightness-125 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-brightness: brightness(125%);
          filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
        }
      }
    }
  }
  .dark\:hover\:\[--card-shadow-opacity\:0\.5\] {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --card-shadow-opacity: 0.5;
        }
      }
    }
  }
  .dark\:hover\:before\:bg-gray-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          &::before {
            content: var(--tw-content);
            background-color: var(--color-gray-500);
          }
        }
      }
    }
  }
  .dark\:focus\:bg-neutral-700 {
    &:where(.dark, .dark *) {
      &:focus {
        background-color: var(--color-neutral-700);
      }
    }
  }
  .dark\:focus\:bg-neutral-800 {
    &:where(.dark, .dark *) {
      &:focus {
        background-color: var(--color-neutral-800);
      }
    }
  }
  .dark\:focus\:text-blue-400 {
    &:where(.dark, .dark *) {
      &:focus {
        color: var(--color-blue-400);
      }
    }
  }
  .dark\:focus\:ring-neutral-600 {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-ring-color: var(--color-neutral-600);
      }
    }
  }
  .dark\:focus\:before\:bg-gray-400 {
    &:where(.dark, .dark *) {
      &:focus {
        &::before {
          content: var(--tw-content);
          background-color: var(--color-gray-400);
        }
      }
    }
  }
  .dark\:active\:bg-gray-500\/5 {
    &:where(.dark, .dark *) {
      &:active {
        background-color: var(--color-gray-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-gray-500) 5%, transparent);
        }
      }
    }
  }
  .dark\:disabled\:border-none {
    &:where(.dark, .dark *) {
      &:disabled {
        --tw-border-style: none;
        border-style: none;
      }
    }
  }
  .dark\:disabled\:bg-gray-500\/10 {
    &:where(.dark, .dark *) {
      &:disabled {
        background-color: var(--color-gray-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-gray-500) 10%, transparent);
        }
      }
    }
  }
  .dark\:disabled\:\[background-image\:none\] {
    &:where(.dark, .dark *) {
      &:disabled {
        background-image: none;
      }
    }
  }
  .dark\:disabled\:text-gray-700 {
    &:where(.dark, .dark *) {
      &:disabled {
        color: var(--color-gray-700);
      }
    }
  }
  .dark\:disabled\:shadow-none {
    &:where(.dark, .dark *) {
      &:disabled {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:has-\[\:disabled\]\:has-\[\:where\(label\,span\)\]\:text-gray-400 {
    &:where(.dark, .dark *) {
      &:has(*:is(:disabled)) {
        &:has(*:is(:where(label,span))) {
          color: var(--color-gray-400);
        }
      }
    }
  }
  .dark\:has-\[\[data-state\=\'open\'\]\]\:bg-\[--ui-bg\] {
    &:where(.dark, .dark *) {
      &:has(*:is([data-state='open'])) {
        background-color: --ui-bg;
      }
    }
  }
  .dark\:data-\[disabled\]\:bg-transparent {
    &:where(.dark, .dark *) {
      &[data-disabled] {
        background-color: transparent;
      }
    }
  }
  .dark\:data-\[state\=checked\]\:border-white\/5 {
    &:where(.dark, .dark *) {
      &[data-state="checked"] {
        border-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:data-\[state\=checked\]\:bg-\[--ui-soft-bg\] {
    &:where(.dark, .dark *) {
      &[data-state="checked"] {
        background-color: --ui-soft-bg;
      }
    }
  }
  .dark\:data-\[state\=checked\]\:shadow-gray-950\/50 {
    &:where(.dark, .dark *) {
      &[data-state="checked"] {
        --tw-shadow-color: var(--color-gray-950);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 50%, transparent) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .dark\:lg\:bg-transparent {
    &:where(.dark, .dark *) {
      @media (width >= 64rem) {
        background-color: transparent;
      }
    }
  }
  .lg\:dark\:bg-gray-900 {
    @media (width >= 64rem) {
      &:where(.dark, .dark *) {
        background-color: var(--color-gray-900);
      }
    }
  }
  .lg\:dark\:bg-transparent {
    @media (width >= 64rem) {
      &:where(.dark, .dark *) {
        background-color: transparent;
      }
    }
  }
  .hs-dropdown-open\:rotate-180 {
    .hs-dropdown.open > &, .hs-dropdown.open > .hs-dropdown-toggle &, .hs-dropdown.open > .hs-dropdown-menu > &, .hs-dropdown-menu.open & {
      rotate: 180deg;
    }
  }
  .hs-dropdown-open\:opacity-100 {
    .hs-dropdown.open > &, .hs-dropdown.open > .hs-dropdown-toggle &, .hs-dropdown.open > .hs-dropdown-menu > &, .hs-dropdown-menu.open & {
      opacity: 100%;
    }
  }
  .overlay-open\:opacity-100 {
    &.open {
      opacity: 100%;
    }
    .open & {
      opacity: 100%;
    }
  }
  .overlay-open\:duration-300 {
    &.open {
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
    .open & {
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .dropdown-open\:rotate-180 {
    &.dropdown-menu.open {
      rotate: 180deg;
    }
    .dropdown.open > & {
      rotate: 180deg;
    }
    .dropdown.open > .dropdown-toggle & {
      rotate: 180deg;
    }
    .dropdown.open > .dropdown-menu > & {
      rotate: 180deg;
    }
  }
  .dropdown-open\:opacity-100 {
    &.dropdown-menu.open {
      opacity: 100%;
    }
    .dropdown.open > & {
      opacity: 100%;
    }
    .dropdown.open > .dropdown-toggle & {
      opacity: 100%;
    }
    .dropdown.open > .dropdown-menu > & {
      opacity: 100%;
    }
  }
  .\[\&_\.recharts-dot\[stroke\=\'\#fff\'\]\]\:stroke-transparent {
    & .recharts-dot[stroke='#fff'] {
      stroke: transparent;
    }
  }
  .\[\&_\.recharts-layer\]\:outline-none {
    & .recharts-layer {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .\[\&_\.recharts-sector\]\:outline-none {
    & .recharts-sector {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .\[\&_\.recharts-sector\[stroke\=\'\#fff\'\]\]\:stroke-transparent {
    & .recharts-sector[stroke='#fff'] {
      stroke: transparent;
    }
  }
  .\[\&_\.recharts-surface\]\:outline-none {
    & .recharts-surface {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .\[\&_\[cmdk-group-heading\]\]\:px-2 {
    & [cmdk-group-heading] {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .\[\&_\[cmdk-group-heading\]\]\:py-1\.5 {
    & [cmdk-group-heading] {
      padding-block: calc(var(--spacing) * 1.5);
    }
  }
  .\[\&_\[cmdk-group-heading\]\]\:text-xs {
    & [cmdk-group-heading] {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .\[\&_\[cmdk-group-heading\]\]\:font-medium {
    & [cmdk-group-heading] {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .\[\&_\[cmdk-group\]\]\:px-2 {
    & [cmdk-group] {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .\[\&_\[cmdk-group\]\:not\(\[hidden\]\)_\~\[cmdk-group\]\]\:pt-0 {
    & [cmdk-group]:not([hidden]) ~[cmdk-group] {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .\[\&_\[cmdk-input-wrapper\]_svg\]\:h-5 {
    & [cmdk-input-wrapper] svg {
      height: var(--spacing-5);
    }
  }
  .\[\&_\[cmdk-input-wrapper\]_svg\]\:w-5 {
    & [cmdk-input-wrapper] svg {
      width: var(--spacing-5);
    }
  }
  .\[\&_\[cmdk-input\]\]\:h-12 {
    & [cmdk-input] {
      height: calc(var(--spacing) * 12);
    }
  }
  .\[\&_\[cmdk-item\]\]\:px-2 {
    & [cmdk-item] {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .\[\&_\[cmdk-item\]\]\:py-3 {
    & [cmdk-item] {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .\[\&_\[cmdk-item\]_svg\]\:h-5 {
    & [cmdk-item] svg {
      height: var(--spacing-5);
    }
  }
  .\[\&_\[cmdk-item\]_svg\]\:w-5 {
    & [cmdk-item] svg {
      width: var(--spacing-5);
    }
  }
  .\[\&_p\]\:leading-relaxed {
    & p {
      --tw-leading: var(--leading-relaxed);
      line-height: var(--leading-relaxed);
    }
  }
  .\[\&_svg\]\:pointer-events-none {
    & svg {
      pointer-events: none;
    }
  }
  .\[\&_svg\]\:size-4 {
    & svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .\[\&_svg\]\:shrink-0 {
    & svg {
      flex-shrink: 0;
    }
  }
  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 {
    & svg:not([class*='size-']) {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .\[\&_tr\]\:border-b {
    & tr {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
    }
  }
  .\[\&_tr\:last-child\]\:border-0 {
    & tr:last-child {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .\[\&\:has\(\[aria-selected\]\)\]\:bg-accent {
    &:has([aria-selected]) {
      background-color: var(--color-accent);
    }
  }
  .first\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-l-md {
    &:first-child {
      &:has([aria-selected]) {
        border-top-left-radius: var(--radius-md);
        border-bottom-left-radius: var(--radius-md);
      }
    }
  }
  .last\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-r-md {
    &:last-child {
      &:has([aria-selected]) {
        border-top-right-radius: var(--radius-md);
        border-bottom-right-radius: var(--radius-md);
      }
    }
  }
  .\[\&\:has\(\[aria-selected\]\.day-outside\)\]\:bg-accent\/50 {
    &:has([aria-selected].day-outside) {
      background-color: var(--color-accent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-accent) 50%, transparent);
      }
    }
  }
  .\[\&\:has\(\[aria-selected\]\.day-range-end\)\]\:rounded-r-md {
    &:has([aria-selected].day-range-end) {
      border-top-right-radius: var(--radius-md);
      border-bottom-right-radius: var(--radius-md);
    }
  }
  .\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0 {
    &:has([role=checkbox]) {
      padding-right: calc(var(--spacing) * 0);
    }
  }
  .\*\*\:\[\.ButtonBorder\]\:bg-\(--color-button-border\) {
    :is(& *) {
      &:is(.ButtonBorder) {
        background-color: var(--color-button-border);
      }
    }
  }
  .\*\*\:\[\.ButtonSurface\]\:bg-\(--color-button-surface\) {
    :is(& *) {
      &:is(.ButtonSurface) {
        background-color: var(--color-button-surface);
      }
    }
  }
  .\[\&\>\.active\]\:text-bg-soft-primary {
    &>.active {
      color: var(--color-primary);
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 10%, var(--color-base-100));
      }
    }
  }
  .\[\&\>\.active\]\:bg-gray-100 {
    &>.active {
      background-color: var(--color-gray-100);
    }
  }
  .dark\:\[\&\>\.active\]\:bg-neutral-700 {
    &:where(.dark, .dark *) {
      &>.active {
        background-color: var(--color-neutral-700);
      }
    }
  }
  .\[\&\>button\]\:hidden {
    &>button {
      display: none;
    }
  }
  .\[\&\>span\]\:line-clamp-1 {
    &>span {
      overflow: hidden;
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 1;
    }
  }
  .\[\&\>span\]\:rounded-\[calc\(var\(--annonce-radius\)-2px\)\] {
    &>span {
      border-radius: calc(var(--annonce-radius) - 2px);
    }
  }
  .\[\&\>span\]\:rounded-\[calc\(var\(--annonce-radius\)-4px\)\] {
    &>span {
      border-radius: calc(var(--annonce-radius) - 4px);
    }
  }
  .\[\&\>span\]\:rounded-\[calc\(var\(--annonce-radius\)-6px\)\] {
    &>span {
      border-radius: calc(var(--annonce-radius) - 6px);
    }
  }
  .\[\&\>span\]\:rounded-\[calc\(var\(--annonce-radius\)-8px\)\] {
    &>span {
      border-radius: calc(var(--annonce-radius) - 8px);
    }
  }
  .\[\&\>span\:last-child\]\:truncate {
    &>span:last-child {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }
  .\[\&\>svg\]\:absolute {
    &>svg {
      position: absolute;
    }
  }
  .\[\&\>svg\]\:top-4 {
    &>svg {
      top: calc(var(--spacing) * 4);
    }
  }
  .\[\&\>svg\]\:left-4 {
    &>svg {
      left: calc(var(--spacing) * 4);
    }
  }
  .\[\&\>svg\]\:size-4 {
    &>svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .\[\&\>svg\]\:h-2\.5 {
    &>svg {
      height: calc(var(--spacing) * 2.5);
    }
  }
  .\[\&\>svg\]\:h-3 {
    &>svg {
      height: calc(var(--spacing) * 3);
    }
  }
  .\[\&\>svg\]\:h-3\.5 {
    &>svg {
      height: calc(var(--spacing) * 3.5);
    }
  }
  .\[\&\>svg\]\:w-2\.5 {
    &>svg {
      width: calc(var(--spacing) * 2.5);
    }
  }
  .\[\&\>svg\]\:w-3 {
    &>svg {
      width: calc(var(--spacing) * 3);
    }
  }
  .\[\&\>svg\]\:w-3\.5 {
    &>svg {
      width: calc(var(--spacing) * 3.5);
    }
  }
  .\[\&\>svg\]\:shrink-0 {
    &>svg {
      flex-shrink: 0;
    }
  }
  .\[\&\>svg\+div\]\:translate-y-\[-3px\] {
    &>svg+div {
      --tw-translate-y: -3px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\[\&\>svg\~\*\]\:pl-7 {
    &>svg~* {
      padding-left: calc(var(--spacing) * 7);
    }
  }
  .\[\&\>tr\]\:last\:border-b-0 {
    &>tr {
      &:last-child {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 0px;
      }
    }
  }
  .\[\&\[data-panel-group-direction\=vertical\]\>div\]\:rotate-90 {
    &[data-panel-group-direction=vertical]>div {
      rotate: 90deg;
    }
  }
  .\[\&\[data-state\=open\]\>svg\]\:rotate-180 {
    &[data-state=open]>svg {
      rotate: 180deg;
    }
  }
  .\[\[data-side\=left\]_\&\]\:cursor-w-resize {
    [data-side=left] & {
      cursor: w-resize;
    }
  }
  .\[\[data-side\=left\]\[data-collapsible\=offcanvas\]_\&\]\:-right-2 {
    [data-side=left][data-collapsible=offcanvas] & {
      right: calc(var(--spacing) * -2);
    }
  }
  .\[\[data-side\=left\]\[data-state\=collapsed\]_\&\]\:cursor-e-resize {
    [data-side=left][data-state=collapsed] & {
      cursor: e-resize;
    }
  }
  .\[\[data-side\=right\]_\&\]\:cursor-e-resize {
    [data-side=right] & {
      cursor: e-resize;
    }
  }
  .\[\[data-side\=right\]\[data-collapsible\=offcanvas\]_\&\]\:-left-2 {
    [data-side=right][data-collapsible=offcanvas] & {
      left: calc(var(--spacing) * -2);
    }
  }
  .\[\[data-side\=right\]\[data-state\=collapsed\]_\&\]\:cursor-w-resize {
    [data-side=right][data-state=collapsed] & {
      cursor: w-resize;
    }
  }
}
@layer theme, base, components, utilities;
@layer theme;
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
      -o-tab-size: 4;
         tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::-moz-placeholder {
    opacity: 1;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::-moz-placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    -webkit-appearance: button;
       -moz-appearance: button;
            appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities;
@font-face {
  font-family: 'Geist Sans';
  src: url('../../fonts/Geist/Geist-Thin.ttf') format('truetype');
  font-weight: 100;
  font-style: normal;
}
@font-face {
  font-family: 'Geist Sans';
  src: url('../../fonts/Geist/Geist-Light.ttf') format('truetype');
  font-weight: 300;
  font-style: normal;
}
@font-face {
  font-family: 'Geist Sans';
  src: url('../../fonts/Geist/Geist-Medium.ttf') format('truetype');
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: 'Geist Sans';
  src: url('../../fonts/Geist/Geist-Bold.ttf') format('truetype');
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: 'Geist Sans';
  src: url('../../fonts/Geist/Geist-Medium.ttf') format('truetype');
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: 'Geist Sans';
  src: url('../../fonts/Geist/Geist-Medium.ttf') format('truetype');
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: 'Geist Sans';
  src: url('../../fonts/Geist/Geist-Bold.ttf') format('truetype');
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: 'Geist Sans';
  src: url('../../fonts/Geist/Geist-Medium.ttf') format('truetype');
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: 'Font-sans';
  src: url('../../fonts/fontSans.woff2') format('woff2');
  font-weight: 500;
  font-style: normal;
}
:root {
  --font-sans: "Font-sans", sans-serif;
  --font-mono: "Geist Mono", monospace;
}
@layer utilities {
  div:hover::-webkit-scrollbar {
    width: .25rem;
  }
  .blocksnav-scrollbar::-webkit-scrollbar {
    height: .25rem;
  }
  .blocksnav-scrollbar::-webkit-scrollbar {
    width: 0;
    height: .25rem;
  }
  .blocksnav-scrollbar::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 99999px;
  }
  .blocksnav-scrollbar:hover {
    &::-webkit-scrollbar-thumb {
      border-radius: calc(infinity * 1px);
      background-color: var(--color-gray-400);
      &:where(.dark, .dark *) {
        background-color: var(--color-gray-600);
      }
    }
  }
  .custom-scrollbar {
    &::-webkit-scrollbar {
      width: 0;
      height: .25rem;
      opacity: 0;
      -webkit-transition: width 0.25s;
      transition: width 0.25s;
    }
    &::-webkit-scrollbar-track:hover {
      background: #f1f1f1;
      border-radius: 99999px;
    }
    &::-webkit-scrollbar-thumb {
      background: #9ca3af;
      border-radius: 99999px;
    }
    &::-webkit-scrollbar-thumb:hover {
      background: #6b7280;
    }
  }
  .dark .custom-scrollbar, .blocks-scrollbar {
    &::-webkit-scrollbar-track:hover {
      background: #1f2937;
    }
    &::-webkit-scrollbar-thumb {
      background: #374151;
      border-radius: 99999px;
    }
    &::-webkit-scrollbar-thumb:hover {
      background: #4b5563;
    }
  }
}
[data-rounded=full] {
  --card-radius: 1.5rem;
  --btn-radius: 9999px;
  --input-radius: 1rem;
}
.rounded-\[--btn-radius\] {
  border-radius: var(--btn-radius);
}
.rounded-\[--card-radius\] {
  border-radius: var(--card-radius);
}
@layer base {
  :root {
    --card-radius: var(--border-radius-xl);
    --btn-radius: var(--card-radius);
    --badge-radius: var(--btn-radius);
    --input-radius: var(--btn-radius);
    --avatar-radius: var(--border-full);
    --annonce-radius: var(--avatar-radius);
    --ui-border-color: var(--color-gray-200);
    --btn-border: var(--ui-border-color);
    --badge-border: var(--btn-border);
    --input-border: var(--ui-border-color);
    --ui-disabled-border: var(--color-gray-400);
    --ui-error-border: var(--color-secondary-600);
    --ui-success-border: var(--color-success-600);
    --input-outline: var(--color-primary-600);
    --ui-bg: var(--color-white/var(--ui-bg-opacity));
    --ui-soft-bg: var(--color-gray-100);
    --overlay-bg: var(--color-gray-950/0.25);
    --input-bg: var(--ui-soft-bg);
    --ui-disabled-bg: var(--color-gray-100);
    --card-padding: var(--spacing-6);
    --display-text-color: var(--color-gray-950);
    --title-text-color: var(--display-text-color);
    --body-text-color: var(--color-gray-700);
    --caption-text-color: var(--color-gray-500);
    --placeholder-text-color: var(--color-gray-400);
    --ui-bg-opacity: 1;
    color: var(--body-text-color);
    &:where(.dark, .dark *) {
      --body-text-color: var(--neutral-300);
    }
    &:where(.dark, .dark *) {
      --display-text-color: #fff;
    }
    &:where(.dark, .dark *) {
      --placeholder-text-color: var(--neutral-600);
    }
    &:where(.dark, .dark *) {
      --ui-bg: var(--neutral-900);
      @supports (color: color-mix(in lab, red, red)) {
        --ui-bg: color-mix(in oklab, var(--neutral-900) var(--ui-bg-opacity), transparent);
      }
    }
    &:where(.dark, .dark *) {
      --ui-border-color: var(--neutral-800);
    }
    &:where(.dark, .dark *) {
      --ui-disabled-bg: var(--neutral-900);
    }
    &:where(.dark, .dark *) {
      --ui-soft-bg: var(--neutral-800);
    }
  }
  dialog[open] {
    opacity: 1;
    transform: scale(1);
  }
  dialog {
    opacity: 0;
    transform: scale(0.9);
    transition: opacity 0.1s ease-out, transform 0.1s ease-out allow-discrete, overlay 0.1s ease-out allow-discrete, display 0.1s ease-out allow-discrete;
  }
  @starting-style {
    dialog[open] {
      opacity: 0;
      transform: scale(0.9);
    }
  }
  dialog::backdrop {
    background-color: rgb(0 0 0 / 0%);
    transition: display 0.1s allow-discrete, overlay 0.1s allow-discrete, background-color 0.1s;
  }
  dialog[open]::backdrop {
    background-color: var(--overlay-bg);
  }
  @starting-style {
    dialog[open]::backdrop {
      background-color: rgb(0 0 0 / 0%);
    }
  }
  *,.border {
    border-color: var(--ui-border-color);
  }
  button:disabled {
    border: none !important;
    background: var(--ui-disabled-bg) !important;
    background-image: none !important;
    box-shadow: none !important;
    color: var(--placeholder-text-color) !important;
    pointer-events: none !important;
    &::before {
      content: var(--tw-content);
      display: none;
    }
  }
  a:focus-visible, button:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--color-primary-600);
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  input:user-invalid, textarea:user-invalid, select:user-invalid {
    --input-border: var(--ui-error-border);
    --ui-border-color: var(--ui-error-border);
    --input-outline: var(--ui-error-border);
    --title-text-color: var(--color-secondary-600);
    &:where(.dark, .dark *) {
      --title-text-color: var(--color-secondary-400);
    }
  }
  [data-rounded="none"] {
    --card-radius: var(--border-radius-none);
    --avatar-radius: var(--border-radius-none);
  }
  [data-rounded="default"] {
    --card-radius: var(--border-radius-default);
  }
  [data-rounded="small"] {
    --card-radius: 0.25rem;
  }
  [data-rounded="medium"] {
    --card-radius: 0.375rem;
  }
  [data-rounded="large"] {
    --card-radius: 0.5rem;
  }
  [data-rounded="xlarge"] {
    --card-radius: 0.75rem;
  }
  [data-rounded="2xlarge"] {
    --card-radius: 1rem;
    --input-radius: 0.75rem;
  }
  [data-rounded="3xlarge"] {
    --card-radius: 1.5rem;
    --input-radius: 0.75rem;
  }
  [data-rounded="full"] {
    --card-radius: 1.5rem;
    --btn-radius: 9999px;
    --input-radius: 1rem;
  }
  [data-shade="glassy"] {
    --ui-bd-blur: 40px;
    --ui-bg-opacity: 0.75;
    --ui-bg: #fff;
    @supports (color: color-mix(in lab, red, red)) {
      --ui-bg: color-mix(in oklab, #fff var(--ui-bg-opacity), transparent);
    }
    &:where(.dark, .dark *) {
      --ui-bg-opacity: 0.5;
    }
    &:where(.dark, .dark *) {
      --ui-bg: var(--neutral-700);
      @supports (color: color-mix(in lab, red, red)) {
        --ui-bg: color-mix(in oklab, var(--neutral-700) var(--ui-bg-opacity), transparent);
      }
    }
    &:where(.dark, .dark *) {
      --ui-border-color: var(--neutral-50);
      @supports (color: color-mix(in lab, red, red)) {
        --ui-border-color: color-mix(in oklab, var(--neutral-50) 10%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      --ui-soft-bg: var(--neutral-600);
      @supports (color: color-mix(in lab, red, red)) {
        --ui-soft-bg: color-mix(in oklab, var(--neutral-600) 50%, transparent);
      }
    }
  }
  [data-shade="800"] {
    &:where(.dark, .dark *) {
      --ui-bg: var(--neutral-800);
    }
    &:where(.dark, .dark *) {
      --ui-border-color: var(--neutral-700);
    }
    &:where(.dark, .dark *) {
      --ui-soft-bg: var(--neutral-900);
    }
  }
  [data-shade="900"] {
    &:where(.dark, .dark *) {
      --ui-bg: var(--neutral-900);
    }
    &:where(.dark, .dark *) {
      --ui-border-color: var(--neutral-800);
    }
    &:where(.dark, .dark *) {
      --ui-soft-bg: var(--neutral-800);
    }
  }
  [data-shade="950"] {
    &:where(.dark, .dark *) {
      --ui-bg: var(--neutral-950);
    }
    &:where(.dark, .dark *) {
      --ui-border-color: var(--neutral-800);
    }
    &:where(.dark, .dark *) {
      --ui-soft-bg: var(--neutral-800);
    }
  }
}
@layer utilities {
  .text-display {
    color: var(--display-text-color);
  }
  .text-title {
    color: var(--title-text-color);
  }
  .text-body {
    color: var(--body-text-color);
  }
  .text-caption {
    color: var(--caption-text-color);
  }
  .text-placeholder {
    color: var(--placeholder-text-color);
  }
  .rounded-card {
    border-radius: var(--card-radius);
  }
  .rounded-btn {
    border-radius: var(--btn-radius);
  }
  .rounded-badge {
    border-radius: var(--badge-radius);
  }
  .rounded-annonce {
    border-radius: var(--annonce-radius);
  }
  .rounded-input {
    border-radius: var(--input-radius);
  }
  .rounded-avatar {
    border-radius: var(--avatar-radius);
  }
  .bg-ui {
    background: var(--ui-bg);
  }
  .bg-ui-soft {
    background: var(--ui-soft-bg);
  }
  .bg-overlay {
    background: var(--overlay-bg);
  }
  .tls-shadow, .tls-shadow-md, .tls-shadow-lg {
    --tw-shadow-color: var(--neutral-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--neutral-950) 5%, transparent);
    }
  }
  .tls-shadow {
    box-shadow: 0 0 0 1px var(--ui-border-color), 0 0.5px 0.5px -0.125px var(--tw-shadow-color), 0 1px 1px -0.5px var(--tw-shadow-color), 0 2px 2px -1px var(--tw-shadow-color), 0 4px 4px -2px var(--tw-shadow-color), 0 8px 8px -4px var(--tw-shadow-color);
  }
  .tls-shadow-md {
    box-shadow: 0 0 0 1px var(--ui-border-color), 0 1px 1px -0.25px var(--tw-shadow-color), 0 2px 2px -0.5px var(--tw-shadow-color), 0 4px 4px -1px var(--tw-shadow-color), 0 8px 8px -2px var(--tw-shadow-color), 0 16px 16px -4px var(--tw-shadow-color);
  }
  .tls-shadow-lg {
    box-shadow: 0 0 0 1px var(--ui-border-color), 0 2px 2px -0.5px var(--tw-shadow-color), 0 4px 4px -1px var(--tw-shadow-color), 0 8px 8px -2px var(--tw-shadow-color), 0 16px 16px -4px var(--tw-shadow-color), 0 32px 32px -8px var(--tw-shadow-color);
  }
}
@layer base {
  :root {
    --display-text-color: var(--color-gray-950);
    --body-text-color: var(--color-gray-700);
    --caption-text-color: var(--color-gray-500);
    --placeholder-text-color: var(--color-gray-400);
    --ui-border-color: var(--color-gray-200);
    --dv-primary: var(--colors-primary-600);
    --dv-secondary: var(--colors-secondary-600);
    --dv-accent: var(--colors-accent-600);
    --dv-gray: var(--colors-gray-600);
    --dv-info: var(--colors-info-600);
    --dv-danger: var(--colors-secondary-600);
    --dv-success: var(--colors-success-600);
    --dv-warning: var(--colors-warning-600);
    --dv-neutral: var(--colors-gray-950);
    --input-radius: var(--btn-radius);
  }
  .dark {
    --display-text-color: var(--color-white);
    --body-text-color: var(--color-gray-300);
    --placeholder-text-color: var(--color-gray-600);
    --feedback-shadow-opacity: '1';
    --ui-border-color: var(--color-gray-800/0.75);
  }
  [data-shade="glassy"] {
    &:where(.dark, .dark *) {
      --ui-border-color: var(--color-gray-700);
    }
  }
  [data-shade="800"] {
    &:where(.dark, .dark *) {
      --ui-border-color: var(--color-gray-700);
    }
  }
  [data-shade="900"], [data-shade="950"], [data-shade="925"] {
    &:where(.dark, .dark *) {
      --ui-border-color: var(--color-gray-800);
    }
  }
  [data-tls-shade="glassy"] {
    &:where(.dark, .dark *) {
      --tw-backdrop-blur: blur(var(--blur-2xl));
      -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    &:where(.dark, .dark *) {
      --ui-bg: var(--color-gray-700/75);
    }
    &:where(.dark, .dark *) {
      --ui-border-color: var(--color-gray-700);
    }
  }
  [data-tls-shade="800"] {
    &:where(.dark, .dark *) {
      --tw-backdrop-blur: blur(var(--blur-2xl));
      -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    &:where(.dark, .dark *) {
      --ui-bg: var(--color-gray-800);
    }
    &:where(.dark, .dark *) {
      --ui-border-color: var(--color-gray-700);
    }
  }
  [data-tls-shade="900"] {
    &:where(.dark, .dark *) {
      --tw-backdrop-blur: blur(var(--blur-2xl));
      -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    &:where(.dark, .dark *) {
      --ui-bg: var(--color-gray-900);
    }
    &:where(.dark, .dark *) {
      --ui-border-color: var(--color-gray-800);
    }
  }
  [data-tls-shade="925"] {
    &:where(.dark, .dark *) {
      --tw-backdrop-blur: blur(var(--blur-2xl));
      -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    &:where(.dark, .dark *) {
      --ui-bg: var(--color-gray-925);
    }
    &:where(.dark, .dark *) {
      --ui-border-color: var(--color-gray-800);
    }
  }
  [data-tls-shade="950"] {
    &:where(.dark, .dark *) {
      --tw-backdrop-blur: blur(var(--blur-2xl));
      -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    &:where(.dark, .dark *) {
      --ui-bg: var(--color-gray-950);
    }
    &:where(.dark, .dark *) {
      --ui-border-color: var(--color-gray-800);
    }
  }
  [data-palette="tls"] {
    --colors-primary-50: var(--colors-indigo-50);
    --colors-primary-100: var(--colors-indigo-100);
    --colors-primary-200: var(--colors-indigo-200);
    --colors-primary-300: var(--colors-indigo-300);
    --colors-primary-400: var(--colors-indigo-400);
    --colors-primary-500: var(--colors-indigo-500);
    --colors-primary-600: var(--colors-indigo-600);
    --colors-primary-700: var(--colors-indigo-700);
    --colors-primary-800: var(--colors-indigo-800);
    --colors-primary-900: var(--colors-indigo-900);
    --colors-primary-950: var(--colors-indigo-950);
    --colors-secondary-50: var(--colors-cyan-50);
    --colors-secondary-100: var(--colors-cyan-100);
    --colors-secondary-200: var(--colors-cyan-200);
    --colors-secondary-300: var(--colors-cyan-300);
    --colors-secondary-400: var(--colors-cyan-400);
    --colors-secondary-500: var(--colors-cyan-500);
    --colors-secondary-600: var(--colors-cyan-600);
    --colors-secondary-700: var(--colors-cyan-700);
    --colors-secondary-800: var(--colors-cyan-800);
    --colors-secondary-900: var(--colors-cyan-900);
    --colors-secondary-950: var(--colors-cyan-950);
    --colors-accent-50: var(--colors-pink-50);
    --colors-accent-100: var(--colors-pink-100);
    --colors-accent-200: var(--colors-pink-200);
    --colors-accent-300: var(--colors-pink-300);
    --colors-accent-400: var(--colors-pink-400);
    --colors-accent-500: var(--colors-pink-500);
    --colors-accent-600: var(--colors-pink-600);
    --colors-accent-700: var(--colors-pink-700);
    --colors-accent-800: var(--colors-pink-800);
    --colors-accent-900: var(--colors-pink-900);
    --colors-accent-950: var(--colors-pink-950);
    --colors-gray-50: var(--colors-zinc-50);
    --colors-gray-100: var(--colors-zinc-100);
    --colors-gray-200: var(--colors-zinc-200);
    --colors-gray-300: var(--colors-zinc-300);
    --colors-gray-400: var(--colors-zinc-400);
    --colors-gray-500: var(--colors-zinc-500);
    --colors-gray-600: var(--colors-zinc-600);
    --colors-gray-700: var(--colors-zinc-700);
    --colors-gray-800: var(--colors-zinc-800);
    --colors-gray-900: var(--colors-zinc-900);
    --colors-gray-925: var(--colors-zinc-925);
    --colors-gray-950: var(--colors-zinc-950);
  }
}
pre[data-line] {
  position: relative;
  padding: 0.5rem 0 1em 1.25rem;
}
.line-highlight {
  position: absolute;
  left: 0;
  right: 0;
  padding: inherit 0;
  margin-top: 0.6em;
  pointer-events: none;
  line-height: inherit;
  white-space: pre;
  margin-left: -1px;
  width: 100%;
  border-top-right-radius: var(--radius-sm);
  border-bottom-right-radius: var(--radius-sm);
  border-left-style: var(--tw-border-style);
  border-left-width: 2px;
  border-color: var(--color-gray-400);
  background-color: var(--color-gray-400);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-gray-400) 10%, transparent);
  }
  &:where(.dark, .dark *) {
    border-color: var(--color-gray-500);
  }
  &:where(.dark, .dark *) {
    background-color: var(--color-gray-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-500) 10%, transparent);
    }
  }
}
@media print {
  .line-highlight {
    -webkit-print-color-adjust: exact;
    print-color-adjust: exact;
  }
}
.line-numbers .line-highlight:before, .line-numbers .line-highlight:after {
  content: none;
}
pre[id].linkable-line-numbers span.line-numbers-rows {
  pointer-events: all;
}
pre[id].linkable-line-numbers span.line-numbers-rows > span:before {
  cursor: pointer;
}
pre[id].linkable-line-numbers span.line-numbers-rows > span:hover:before {
  background-color: rgba(128, 128, 128, .2);
}
.pagefind-ui__form {
  position: relative;
  width: 100%;
  &::before {
    content: var(--tw-content);
    pointer-events: none;
  }
  &::before {
    content: var(--tw-content);
    position: absolute;
  }
  &::before {
    content: var(--tw-content);
    top: var(--spacing-5);
  }
  &::before {
    content: var(--tw-content);
    left: 1.35rem;
  }
  &::before {
    content: var(--tw-content);
    display: flex;
  }
  &::before {
    content: var(--tw-content);
    height: var(--spacing-5);
  }
  &::before {
    content: var(--tw-content);
    width: var(--spacing-5);
  }
  &::before {
    content: var(--tw-content);
    background-image: url(/searchIcon.svg);
  }
  &:where(.dark, .dark *) {
    &::before {
      content: var(--tw-content);
      background-image: url(/searchIconDark.svg);
    }
  }
  &:where(.dark, .dark *) {
    &::before {
      content: var(--tw-content);
      opacity: 75%;
    }
  }
}
.pagefind-ui__search-clear {
  display: none;
}
.pagefind-ui__drawer {
  position: relative;
  bottom: calc(var(--spacing) * 0);
  max-height: 32rem;
  overflow-y: scroll;
  &::before {
    content: var(--tw-content);
    position: fixed;
  }
  &::before {
    content: var(--tw-content);
    inset-inline: calc(var(--spacing) * 0);
  }
  &::before {
    content: var(--tw-content);
    height: calc(var(--spacing) * 0.5);
  }
  &::before {
    content: var(--tw-content);
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  &:where(.dark, .dark *) {
    &::before {
      content: var(--tw-content);
      border-color: var(--color-gray-700);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-gray-700) 80%, transparent);
      }
    }
  }
  &:where(.dark, .dark *) {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-gray-950);
    }
  }
}
.pagefind-ui__search-input {
  top: calc(var(--spacing) * 1);
  z-index: 10;
  width: 100%;
  background-color: transparent;
  padding-inline: --card-padding;
  padding-block: calc(var(--spacing) * 4);
  padding-left: 3.25rem;
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
  color: var(--color-gray-700);
  &::-moz-placeholder {
    color: --caption-text-color;
  }
  &::placeholder {
    color: --caption-text-color;
  }
  --tw-outline-style: none;
  outline-style: none;
  &:where(.dark, .dark *) {
    color: var(--color-white);
  }
}
.pagefind-ui__result-excerpt {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  color: --body-text-color;
}
.pagefind-ui__message {
  margin-block: calc(var(--spacing) * 3);
  padding-inline: --card-padding;
  color: --body-text-color;
}
.pagefind-ui__results-area {
  position: relative;
  padding: calc(var(--spacing) * 1);
}
.pagefind-ui__result-title {
  position: relative;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  font-size: 15px;
  color: --title-text-color;
  &::before {
    content: var(--tw-content);
    inset: calc(var(--spacing) * 0);
  }
  &::before {
    content: var(--tw-content);
    display: inline-block;
  }
  &::before {
    content: var(--tw-content);
    width: var(--spacing-5);
    height: var(--spacing-5);
  }
  &::before {
    content: var(--tw-content);
    background-image: url("/docsIcon.svg");
  }
  &:where(.dark, .dark *) {
    &::before {
      content: var(--tw-content);
      background-image: url("/docsDarkIcon.svg");
    }
  }
  &:where(.dark, .dark *) {
    &::before {
      content: var(--tw-content);
      opacity: 75%;
    }
  }
}
.pagefind-ui__results {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.pagefind-ui__result-excerpt {
  margin-left: 33px;
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  font-size: 13px;
  color: --caption-text-color;
}
.pagefind-ui__result-nested .pagefind-ui__result-excerpt {
  padding-left: calc(var(--spacing) * 0) !important;
}
.pagefind-ui__result {
  position: relative;
  border-radius: var(--radius-lg);
  padding-inline: calc(var(--spacing) * 4);
  padding-block: calc(var(--spacing) * 3.5);
  &::before {
    content: var(--tw-content);
    position: absolute;
  }
  &::before {
    content: var(--tw-content);
    right: calc(var(--spacing) * 0);
  }
  &::before {
    content: var(--tw-content);
    bottom: calc(var(--spacing) * 0);
  }
  &::before {
    content: var(--tw-content);
    left: calc(var(--spacing) * 12);
  }
  &::before {
    content: var(--tw-content);
    height: 1px;
  }
  &::before {
    content: var(--tw-content);
    background-color: --ui-border-color;
  }
  &:last-child {
    &::before {
      content: var(--tw-content);
      display: none;
    }
  }
  &:hover {
    @media (hover: hover) {
      background-color: --ui-soft-bg;
    }
  }
  &:hover {
    @media (hover: hover) {
      &::before {
        content: var(--tw-content);
        opacity: 0%;
      }
    }
  }
  &:where(.dark, .dark *) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-950);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-gray-950) 30%, transparent);
        }
      }
    }
  }
}
mark {
  background-color: transparent !important;
  --tw-font-weight: var(--font-weight-medium) !important;
  font-weight: var(--font-weight-medium) !important;
  color: --title-text-color;
}
.pagefind-ui__button {
  margin-inline: auto;
  margin-top: calc(var(--spacing) * 6);
  margin-bottom: calc(var(--spacing) * 2);
  display: flex;
  height: calc(var(--spacing) * 9);
  width: -moz-fit-content;
  width: fit-content;
  align-items: center;
  justify-content: center;
  border-radius: --btn-radius;
  background-color: --ui-soft-bg;
  padding-inline: calc(var(--spacing) * 4);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  color: --title-text-color;
  &:hover {
    @media (hover: hover) {
      --tw-brightness: brightness(95%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  &:where(.dark, .dark *) {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
}
@layer components {
  .text-blockquote {
    color: var(--body-text-color);
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
    padding-left: calc(var(--spacing) * 4);
    font-style: italic;
  }
  .text-quote {
    color: var(--body-text-color);
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
    padding-left: calc(var(--spacing) * 4);
    font-style: italic;
  }
  .badge {
    display: flex;
    width: -moz-fit-content;
    width: fit-content;
    height: -moz-fit-content;
    height: fit-content;
    align-items: center;
    gap: calc(var(--spacing) * 1.5);
    border-radius: var(--badge-radius);
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .badge.variant-neutral {
    border-color: var(--color-gray-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-gray-500) 15%, transparent);
    }
    background-color: var(--color-gray-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-500) 10%, transparent);
    }
    color: var(--body-text-color);
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-500);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-gray-500) 20%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-500) 15%, transparent);
      }
    }
  }
  .badge.variant-info {
    border-color: var(--color-info-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-info-500) 15%, transparent);
    }
    background-color: var(--color-info-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-info-500) 15%, transparent);
    }
    color: var(--color-info-700);
    &:where(.dark, .dark *) {
      border-color: var(--color-info-500);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-info-500) 20%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-info-300);
    }
  }
  .badge.variant-success {
    border-color: var(--color-success-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-success-500) 25%, transparent);
    }
    background-color: var(--color-success-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success-500) 15%, transparent);
    }
    color: var(--color-success-800);
    &:where(.dark, .dark *) {
      border-color: var(--color-success-500);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-success-500) 15%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-success-300);
    }
  }
  .badge.variant-warning {
    border-color: var(--color-warning-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-warning-500) 25%, transparent);
    }
    background-color: var(--color-warning-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning-500) 15%, transparent);
    }
    color: var(--color-warning-800);
    &:where(.dark, .dark *) {
      border-color: var(--color-warning-500);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-warning-500) 15%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-warning-200);
    }
  }
  .badge.variant-urgent {
    border-color: var(--color-secondary-600);
    background-color: var(--color-secondary-600);
    color: var(--color-white);
  }
  .badge.sz-xs {
    padding-inline: calc(var(--spacing) * 1.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .badge.sz-sm {
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .badge.sz-md {
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .badge.sz-lg {
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .field {
    position: relative;
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2.5) * calc(1 - var(--tw-space-y-reverse)));
    }
    :is(& > *) {
      &:has(*:is(:disabled)) {
        pointer-events: none;
      }
    }
    :is(& > *) {
      &:has(*:is(:disabled)) {
        opacity: 50%;
      }
    }
    &:has(*:is(:user-invalid)) {
      --caption-text-color: var(--color-secondary-600);
    }
    &:where(.dark, .dark *) {
      &:has(*:is(:user-invalid)) {
        --caption-text-color: var(--color-secondary-400);
      }
    }
  }
  .input, .textarea {
    width: 100%;
    border-radius: --input-radius;
    color: --title-text-color;
    &::-moz-placeholder {
      color: --placeholder-text-color;
    }
    &::placeholder {
      color: --placeholder-text-color;
    }
  }
  .input.variant-outlined, .textarea.variant-outlined {
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: transparent;
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
    outline-offset: calc(1px * -1);
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
    &:focus {
      outline-color: --input-outline;
    }
  }
  .input.variant-mixed, .textarea.variant-mixed {
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: var(--ui-bg);
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 5%, transparent) var(--tw-shadow-alpha), transparent);
    }
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
    outline-offset: calc(1px * -1);
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
    &:focus {
      outline-color: --input-outline;
    }
    &:where(.dark, .dark *) {
      --tw-shadow-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 35%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .input.variant-soft, .textarea.variant-soft {
    background-color: --ui-soft-bg;
    --tw-outline-style: none;
    outline-style: none;
    &:focus {
      --tw-brightness: brightness(95%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
    &:where(.dark, .dark *) {
      &:focus {
        --tw-brightness: brightness(105%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .input.variant-plain, .textarea.variant-plain {
    border-radius: 0;
    background-color: transparent;
    --tw-outline-style: none;
    outline-style: none;
  }
  .input.variant-bottomOutlined, .textarea.variant-bottomOutlined {
    border-radius: 0;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    background-color: transparent;
    &:focus {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 2px;
    }
    &:focus {
      border-color: --input-outline;
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .input.sz-sm {
    height: calc(var(--spacing) * 8);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .input.sz-md {
    height: calc(var(--spacing) * 9);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .input.sz-lg {
    height: calc(var(--spacing) * 10);
  }
  .input.sz-xl {
    height: calc(var(--spacing) * 12);
  }
  .textarea.sz-sm {
    padding-block: calc(var(--spacing) * 1.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .textarea.sz-md {
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .textarea.sz-lg {
    padding-block: calc(var(--spacing) * 3);
  }
  .textarea.sz-xl {
    padding-block: calc(var(--spacing) * 4);
  }
  .input.variant-mixed.sz-sm, .input.variant-outlined.sz-sm, .input.variant-soft.sz-sm, .textarea.variant-mixed.sz-sm, .textarea.variant-outlined.sz-sm, .textarea.variant-soft.sz-sm {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .input.variant-mixed.sz-md, .input.variant-outlined.sz-md, .input.variant-soft.sz-md, .textarea.variant-mixed.sz-md, .textarea.variant-outlined.sz-md, .textarea.variant-soft.sz-md {
    padding-inline: calc(var(--spacing) * 3);
  }
  .input.variant-mixed.sz-lg, .input.variant-outlined.sz-lg, .input.variant-soft.sz-lg, .textarea.variant-mixed.sz-lg, .textarea.variant-outlined.sz-lg, .textarea.variant-soft.sz-lg {
    padding-inline: calc(var(--spacing) * 4);
  }
  .input.variant-mixed.sz-xl, .input.variant-outlined.sz-xl, .input.variant-soft.sz-xl, .textarea.variant-mixed.sz-xl, .textarea.variant-outlined.sz-xl, .textarea.variant-soft.sz-xl {
    padding-inline: var(--spacing-5);
  }
  .switch {
    position: relative;
    display: block;
    height: var(--spacing-5);
    width: 2.4rem;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: var(--color-ui-soft);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:has(*:is(:checked)) {
      border-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      background-color: var(--ui-bg);
    }
  }
  .switch-thumb {
    position: absolute;
    inset-inline: 1px;
    inset-block: calc(var(--spacing) * 0);
    margin-block: auto;
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
    border-radius: calc(infinity * 1px);
    background-color: var(--color-white);
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 25%, transparent) var(--tw-shadow-alpha), transparent);
    }
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    will-change: transform;
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: 18px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .switch-thumb.variant-neutral {
    position: absolute;
    inset-inline: 1px;
    inset-block: calc(var(--spacing) * 0);
    margin-block: auto;
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
    border-radius: calc(infinity * 1px);
    background-color: var(--color-white);
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 25%, transparent) var(--tw-shadow-alpha), transparent);
    }
    transition-property: transform,width;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    will-change: transform;
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: calc(var(--spacing) * 3);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    &:where(.dark, .dark *) {
      &:is(:where(.peer):checked ~ *) {
        background-color: var(--color-gray-900);
      }
    }
  }
  .switch.variant-primary {
    &:has(*:is(:checked)) {
      background-color: var(--color-primary-600);
    }
  }
  .switch.variant-neutral {
    &:has(*:is(:checked)) {
      background-color: var(--color-gray-950);
    }
    &:where(.dark, .dark *) {
      &:has(*:is(:checked)) {
        background-color: var(--color-white);
      }
    }
  }
  .checkbox, .radio {
    position: relative;
    display: block;
    width: 1.125rem;
    height: 1.125rem;
    border-radius: 0.25rem;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-300);
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 5%, transparent) var(--tw-shadow-alpha), transparent);
    }
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:has(*:is(:checked)) {
      border-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
    &:has(*:is(:checked)) {
      background-color: var(--color-primary-600);
    }
    &:where(.dark, .dark *) {
      border-color: --ui-border-color;
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-ui);
    }
  }
  .checkbox-icon {
    position: absolute;
    inset: calc(var(--spacing) * 0);
    margin: auto;
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
    --tw-scale-x: 75%;
    --tw-scale-y: 75%;
    --tw-scale-z: 75%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
    color: var(--color-gray-950);
    opacity: 0%;
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 25%;
      }
    }
    &:is(:where(.peer):checked ~ *) {
      --tw-scale-x: 100%;
      --tw-scale-y: 100%;
      --tw-scale-z: 100%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    &:is(:where(.peer):checked ~ *) {
      color: var(--color-white);
    }
    &:is(:where(.peer):checked ~ *) {
      opacity: 100%;
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .radio-indicator {
    position: absolute;
    inset: calc(var(--spacing) * 0);
    margin: auto;
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
    --tw-scale-x: 75%;
    --tw-scale-y: 75%;
    --tw-scale-z: 75%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
    border-radius: calc(infinity * 1px);
    background-color: var(--color-gray-950);
    opacity: 0%;
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 25%;
      }
    }
    &:is(:where(.peer):checked ~ *) {
      --tw-scale-x: 100%;
      --tw-scale-y: 100%;
      --tw-scale-z: 100%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-white);
    }
    &:is(:where(.peer):checked ~ *) {
      opacity: 100%;
    }
    &:is(:where(.peer):checked ~ *) {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:is(:where(.peer):checked ~ *) {
      --tw-shadow-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 25%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-white);
    }
  }
  .checkbox, .radio, .switch {
    overflow: hidden;
    &:has(*:is(:focus-visible)) {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
    &:has(*:is(:focus-visible)) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:has(*:is(:focus-visible)) {
      outline-offset: 2px;
    }
    &:has(*:is(:focus-visible)) {
      outline-color: var(--color-primary-600);
    }
  }
  .checkbox>input, .radio>input, .switch>input {
    position: absolute;
    left: calc(var(--spacing) * -6);
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
  }
  .card {
    border-radius: --card-radius;
    padding: --card-padding;
  }
  .card.variant-outlined {
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: var(--ui-bg);
  }
  .card.variant-mixed {
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: var(--ui-bg);
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 5%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .card.variant-soft {
    background-color: --ui-soft-bg;
  }
  .kbd {
    display: inline-flex;
    height: var(--spacing-5);
    min-width: var(--spacing-5);
    align-items: center;
    justify-content: center;
    border-radius: 0.25rem;
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-top-color: var(--color-white);
    border-bottom-color: var(--color-gray-200);
    background-color: var(--color-gray-100);
    padding-inline: calc(var(--spacing) * 1.5);
    font-family: var(--font-sans);
    font-size: 11px;
    color: var(--color-gray-800);
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--color-gray-300);
    &:where(.dark, .dark *) {
      border-top-color: transparent;
    }
    &:where(.dark, .dark *) {
      border-bottom-color: var(--color-gray-950);
    }
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .code {
    display: inline-block;
    border-radius: var(--radius-md);
    padding-inline: calc(var(--spacing) * 1);
    padding-block: 1px;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .code.variant-primary {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-primary-200);
    background-color: var(--color-primary-50);
    color: var(--color-primary-600);
    &:where(.dark, .dark *) {
      border-color: var(--color-primary-500);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-primary-500) 20%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-primary-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary-500) 5%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-primary-300);
    }
  }
  .code.variant-gray {
    background-color: --ui-soft-bg;
    color: --body-text-color;
  }
  .code.variant-neutral {
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: var(--color-gray-50);
    color: var(--color-gray-950);
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-500);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-gray-500) 20%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-500) 5%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .link {
    color: var(--color-primary-600);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:where(.dark, .dark *) {
      color: var(--color-primary-400);
    }
  }
  .link.variant-ghost {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .link.variant-underlined {
    text-decoration-line: underline;
  }
  .link.variant-animated {
    position: relative;
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
    &::before {
      content: var(--tw-content);
      inset-inline: calc(var(--spacing) * 0);
    }
    &::before {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }
    &::before {
      content: var(--tw-content);
      height: 1px;
    }
    &::before {
      content: var(--tw-content);
      transform-origin: right;
    }
    &::before {
      content: var(--tw-content);
      --tw-scale-x: 0%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    &::before {
      content: var(--tw-content);
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
    &::before {
      content: var(--tw-content);
      --tw-duration: 200ms;
      transition-duration: 200ms;
    }
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          transform-origin: left;
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          --tw-scale-x: 100%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .link.intent-info {
    color: var(--color-info-600);
    &:where(.dark, .dark *) {
      color: var(--color-info-400);
    }
  }
  .link.intent-neutral {
    color: var(--color-gray-950);
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .link.variant-animated.intent-neutral {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-950) 50%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: color-mix(in srgb, #fff 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
      }
    }
  }
  .link.variant-animated.intent-info {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-info-300);
    }
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-info-600);
      }
    }
  }
  .link.variant-animated.intent-primary {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-primary-300);
    }
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-primary-600);
      }
    }
  }
  .link.variant-underlined.intent-neutral, .link.variant-ghost.intent-neutral {
    text-decoration-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      text-decoration-color: color-mix(in oklab, var(--color-gray-950) 50%, transparent);
    }
    &:where(.dark, .dark *) {
      text-decoration-color: color-mix(in srgb, #fff 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        text-decoration-color: color-mix(in oklab, var(--color-white) 50%, transparent);
      }
    }
  }
  .separator {
    display: block;
    height: 1px;
    width: 100%;
    background-color: --ui-border-color;
  }
  .separator.vertical {
    height: 100%;
    width: 1px;
  }
  .annonce {
    display: flex;
    width: -moz-fit-content;
    width: fit-content;
    align-items: center;
    gap: calc(var(--spacing) * 3);
    border-radius: var(--annonce-radius);
  }
  .annonce.variant-outlined {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .annonce.variant-soft {
    background-color: var(--ui-soft-bg);
  }
  .annonce.variant-mixed {
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: var(--ui-bg);
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 5%, transparent) var(--tw-shadow-alpha), transparent);
    }
    &:where(.dark, .dark *) {
      --tw-shadow-color: var(--color-gray-950);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-950) 25%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .annonce.sz-xs {
    padding-block: calc(var(--spacing) * 0.5);
    padding-right: calc(var(--spacing) * 3);
    padding-left: calc(var(--spacing) * 0.5);
    &>span {
      border-radius: calc(var(--annonce-radius) - 2px);
    }
  }
  .annonce.sz-sm {
    padding-block: calc(var(--spacing) * 1);
    padding-right: calc(var(--spacing) * 4);
    padding-left: calc(var(--spacing) * 1);
    &>span {
      border-radius: calc(var(--annonce-radius) - 4px);
    }
  }
  .annonce.sz-md {
    padding-block: calc(var(--spacing) * 1.5);
    padding-right: var(--spacing-5);
    padding-left: calc(var(--spacing) * 1.5);
    &>span {
      border-radius: calc(var(--annonce-radius) - 6px);
    }
  }
  .annonce.sz-lg {
    padding-block: calc(var(--spacing) * 2);
    padding-right: calc(var(--spacing) * 6);
    padding-left: calc(var(--spacing) * 2);
    &>span {
      border-radius: calc(var(--annonce-radius) - 8px);
    }
  }
  .annonce-concern {
    display: block;
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 0.5);
  }
  .annonce-concern.sz-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .annonce-concern.sz-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .annonce-concern.sz-md {
    padding-inline: calc(var(--spacing) * 2.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .annonce-concern.sz-lg {
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 1);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .annonce-concern.variant-primary {
    background-color: var(--color-primary-600);
    color: var(--color-white);
  }
  .annonce-concern.variant-neutral {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-gray-500) 15%, transparent);
    }
    background-color: var(--color-gray-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-500) 15%, transparent);
    }
    color: var(--color-gray-950);
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .progress {
    overflow: hidden;
    border-radius: calc(infinity * 1px);
    background-color: --ui-soft-bg;
  }
  .progress.sz-xs {
    height: calc(var(--spacing) * 0.5);
  }
  .progress.sz-sm {
    height: calc(var(--spacing) * 1);
  }
  .progress.sz-md {
    height: calc(var(--spacing) * 1.5);
  }
  .progress.sz-lg {
    height: calc(var(--spacing) * 2.5);
  }
  .progress.sz-xl {
    height: calc(var(--spacing) * 3.5);
  }
  .progress-indicator {
    height: 100%;
    border-radius: calc(infinity * 1px);
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 660ms;
    transition-duration: 660ms;
    --tw-ease: cubic-bezier(0.65,0,0.35,1);
    transition-timing-function: cubic-bezier(0.65,0,0.35,1);
  }
  .progress-indicator.variant-primary {
    background-color: var(--color-primary-600);
  }
  .progress-indicator.variant-danger {
    background-color: var(--color-secondary-600);
  }
  .progress-indicator.variant-success {
    background-color: var(--color-success-600);
  }
  .progress-indicator.variant-warning {
    background-color: var(--color-warning-600);
  }
  .progress-indicator.variant-gray {
    background-color: var(--color-gray-600);
  }
  .progress-indicator.variant-neutral {
    background-color: var(--color-gray-950);
    &:where(.dark, .dark *) {
      background-color: var(--color-white);
    }
  }
  .avatar {
    position: relative;
    display: block;
    border-radius: --avatar-radius;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-950);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-gray-950) 5%, transparent);
    }
    :is(& > *) {
      border-radius: --avatar-radius;
    }
    &::before {
      content: var(--tw-content);
      display: none;
    }
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .avatar img {
    width: 100%;
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }
  .avatar.avatar-status {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
    &::before {
      content: var(--tw-content);
      right: 1px;
    }
    &::before {
      content: var(--tw-content);
      z-index: 1;
    }
    &::before {
      content: var(--tw-content);
      display: block;
    }
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
    &::before {
      content: var(--tw-content);
      border-color: var(--color-white);
    }
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        border-color: var(--color-gray-950);
      }
    }
  }
  .avatar.sz-xs, .avatar.sz-sm {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 2);
      height: calc(var(--spacing) * 2);
    }
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .avatar.sz-xxs {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 1.5);
      height: calc(var(--spacing) * 1.5);
    }
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .avatar.sz-xs {
    width: calc(var(--spacing) * 7);
    height: calc(var(--spacing) * 7);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .avatar.sz-sm {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .avatar.sz-md {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    &::before {
      content: var(--tw-content);
      right: 1px;
    }
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 2.5);
      height: calc(var(--spacing) * 2.5);
    }
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
  .avatar.sz-lg {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0.5);
    }
    &::before {
      content: var(--tw-content);
      right: calc(var(--spacing) * 0.5);
    }
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 2.5);
      height: calc(var(--spacing) * 2.5);
    }
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
  .avatar.sz-xl {
    width: calc(var(--spacing) * 12);
    height: calc(var(--spacing) * 12);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    &::before {
      content: var(--tw-content);
      top: 3px;
    }
    &::before {
      content: var(--tw-content);
      right: 3px;
    }
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 2.5);
      height: calc(var(--spacing) * 2.5);
    }
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
  .avatar.sz-xxl {
    width: calc(var(--spacing) * 16);
    height: calc(var(--spacing) * 16);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 1);
    }
    &::before {
      content: var(--tw-content);
      right: calc(var(--spacing) * 1);
    }
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 3);
      height: calc(var(--spacing) * 3);
    }
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
  .avatar.sz-xxxl {
    width: calc(var(--spacing) * 20);
    height: calc(var(--spacing) * 20);
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 1.5);
    }
    &::before {
      content: var(--tw-content);
      right: calc(var(--spacing) * 1.5);
    }
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
  .avatar.status-online {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-success-600);
    }
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-success-400);
      }
    }
  }
  .avatar.status-offline {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-gray-600);
    }
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-gray-400);
      }
    }
  }
  .avatar.status-away {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-warning-600);
    }
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-warning-500);
      }
    }
  }
  .avatar.status-busy {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-secondary-600);
    }
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-secondary-400);
      }
    }
  }
  .avatar.fallback-neutral, .avatar.fallback-primary {
    display: flex;
    align-items: center;
    justify-content: center;
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .avatar.fallback-neutral {
    border-color: var(--color-gray-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-gray-500) 15%, transparent);
    }
    background-color: var(--color-gray-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-500) 15%, transparent);
    }
    color: var(--color-gray-800);
    &:where(.dark, .dark *) {
      color: var(--color-gray-300);
    }
  }
  .avatar.fallback-primary {
    border-color: var(--color-primary-500);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-primary-500) 15%, transparent);
    }
    background-color: var(--color-primary-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary-500) 15%, transparent);
    }
    color: var(--color-primary-800);
    &:where(.dark, .dark *) {
      color: var(--color-primary-300);
    }
  }
  .callout {
    border-radius: --card-radius;
    border-style: var(--tw-border-style);
    border-width: 1px;
    padding: var(--spacing-5);
  }
  .callout-title {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: --title-text-color;
  }
  .callout-description {
    margin-top: calc(var(--spacing) * 1);
    color: --body-text-color;
  }
  .callout-link {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: --title-text-color;
    text-decoration-line: underline;
  }
  .callout.variant-warning {
    background-color: var(--color-warning-50);
    --title-text-color: var(--warning-950);
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-warning-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-warning-500) 5%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      --title-text-color: #fff;
    }
  }
  .callout.variant-danger {
    background-color: var(--color-secondary-50);
    --title-text-color: var(--secondary-950);
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-secondary-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-secondary-500) 5%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      --title-text-color: #fff;
    }
  }
  .callout.variant-neutral {
    background-color: var(--color-gray-50);
    --title-text-color: var(--neutral-950);
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-500) 5%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      --title-text-color: #fff;
    }
  }
}
.btn-feature {
  animation-timing-function: cubic-bezier(0, 0, .2, 1);
  animation-duration: .2s;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0, 0, .2, 1);
  transition-duration: .2s;
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-shadow: 0 16px 8px rgba(31, 31, 31, .01),
      0 12px 6px rgba(31, 31, 31, .04),
      0 4px 4px rgba(31, 31, 31, .07),
      0 1.5px 3px rgba(31, 31, 31, .08),
      0 0 0 1px #0f0f0f,
      inset 0 1px 2px hsla(0, 0%, 100%, .12);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
  font-size: 14px;
  line-height: 20px;
  letter-spacing: -.006em;
  font-weight: 500;
  white-space: nowrap;
  padding-left: 18px;
  padding-right: 18px;
  border-radius: 13px;
  height: 2.75rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: .875rem;
  position: relative;
  --tw-bg-opacity: 1;
  background-color: rgb(46 46 46 / var(--tw-bg-opacity));
}
.btn {
  display: inline-flex;
  flex-shrink: 0;
  cursor: pointer;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: center;
  gap: calc(var(--spacing) * 2);
  text-align: center;
  vertical-align: middle;
  font-size: var(--text-base);
  line-height: var(--tw-leading, var(--text-base--line-height));
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  text-decoration-line: none;
  -webkit-user-select: none;
  -moz-user-select: none;
       user-select: none;
  @media (prefers-reduced-motion: reduce) {
    transition-property: none;
  }
  padding-inline: var(--btn-p);
  color: var(--btn-fg);
  height: var(--size);
  outline-color: var(--btn-color, var(--color-neutral));
  @supports (color: color-mix(in lab, red, red)) {
    outline-color: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, var(--color-base-100));
  }
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: cubic-bezier(0, 0, 0.96, 1.03);
  transition-duration: 0.25s;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  background-color: var(--btn-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--btn-noise);
  border: var(--border) solid var(--btn-border);
  box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 8%)) inset, var(--btn-shadow);
  --size: calc(var(--size-field, 0.25rem) * 9.5);
  --btn-bg: var(--btn-color, var(--color-neutral));
  --btn-fg: var(--color-neutral-content);
  --btn-p: 1rem;
  --btn-border: var(--btn-bg);
  @supports (color: color-mix(in lab, red, red)) {
    --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
  }
  --btn-shadow: 0px 1px 3px 0px var(--color-base-300),
    0px 1px 2px -1px var(--color-base-300);
  @supports (color: color-mix(in lab, red, red)) {
    --btn-shadow: 0px 1px 3px 0px color-mix(in oklab, var(--color-base-300) 40%, #0000),
    0px 1px 2px -1px color-mix(in oklab, var(--color-base-300) 40%, #0000);
  }
  --btn-noise: var(--fx-noise);
  @media (hover: hover) {
    &:hover {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 90%, #000);
      }
    }
  }
  &:active:hover:not(.btn-active), &:active:focus:not(.btn-active) {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    transition-timing-function: ease-out;
  }
  &:focus-visible {
    --btn-bg: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)), #000 10%);
    }
    outline-width: 2px;
    outline-style: solid;
  }
  &:is(:disabled, [disabled], .btn-disabled) {
    pointer-events: none;
    opacity: 50%;
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  &:is(input[type="checkbox"], input[type="radio"]) {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    &::after {
      content: attr(aria-label);
    }
    &:checked {
      background: var(--color-primary);
      color: var(--color-primary-content);
      outline-color: var(--color-primary);
      --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
      isolation: isolate;
    }
  }
}
.btn-active {
  --btn-bg: var(--btn-color, var(--color-neutral));
  @supports (color: color-mix(in lab, red, red)) {
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 90%, #000);
  }
  isolation: isolate;
}
.btn-primary {
  --btn-color: var(--color-primary);
  --btn-fg: var(--color-primary-content);
}
.btn-secondary {
  --btn-color: var(--color-secondary);
  --btn-fg: var(--color-secondary-content);
}
.btn-accent {
  --btn-color: var(--color-accent);
  --btn-fg: var(--color-accent-content);
}
.btn-neutral {
  --btn-color: var(--color-neutral);
  --btn-fg: var(--color-neutral-content);
}
.btn-info {
  --btn-color: var(--color-info);
  --btn-fg: var(--color-info-content);
}
.btn-success {
  --btn-color: var(--color-success);
  --btn-fg: var(--color-success-content);
}
.btn-warning {
  --btn-color: var(--color-warning);
  --btn-fg: var(--color-warning-content);
}
.btn-error {
  --btn-color: var(--color-error);
  --btn-fg: var(--color-error-content);
}
.btn-soft {
  --btn-shadow: "";
  color: var(--btn-color, var(--color-neutral));
  --btn-bg: var(--btn-color, var(--color-neutral));
  @supports (color: color-mix(in lab, red, red)) {
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, var(--color-base-100));
  }
  border-width: 0;
  --btn-noise: none;
  &:focus-visible {
    --btn-bg: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
    }
  }
  @media (hover: hover) {
    &:hover {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
      }
    }
  }
}
.btn-soft.btn-active {
  --btn-bg: var(--btn-color, var(--color-neutral));
  @supports (color: color-mix(in lab, red, red)) {
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
  }
}
.btn-outline {
  --btn-shadow: "";
  --btn-bg: "";
  color: var(--btn-color, var(--color-neutral));
  --btn-border: var(--btn-color, var(--color-neutral));
  --btn-noise: none;
  outline-color: var(--btn-color, var(--color-neutral));
  @media (hover: hover) {
    &:hover {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
  }
  &:focus-visible {
    --btn-bg: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
    }
  }
  &:focus-visible {
    outline-width: 1px;
  }
}
.btn-outline.btn-active {
  --btn-bg: var(--btn-color, var(--color-neutral));
  @supports (color: color-mix(in lab, red, red)) {
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
  }
}
.btn-text {
  --btn-shadow: "";
  color: var(--btn-color, var(--color-neutral));
  --btn-bg: "";
  --btn-border: "";
  --btn-noise: none;
  border-width: 0;
  outline-color: var(--btn-color, var(--color-neutral));
  @media (hover: hover) {
    &:hover {
      --btn-bg: var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
      }
    }
  }
  &:focus-visible {
    --btn-bg: var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
    }
  }
}
.btn-text.btn-active {
  --btn-bg: var(--btn-color, var(--color-neutral));
  @supports (color: color-mix(in lab, red, red)) {
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
  }
}
.btn-gradient {
  border-width: 2px;
  transition-property: background-position, box-shadow;
  transition-timing-function: ease-in-out;
  transition-duration: 0.4s;
  background-color: transparent;
  --btn-shadow: 0px 1px 3px 0px var(--btn-color, var(--color-neutral)),
    0px 1px 2px -1px var(--btn-color, var(--color-neutral));
  @supports (color: color-mix(in lab, red, red)) {
    --btn-shadow: 0px 1px 3px 0px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
    0px 1px 2px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
  }
  --btn-border: var(--btn-color, var(--color-neutral));
  --dark-shade: var(--btn-color, var(--color-neutral));
  @supports (color: color-mix(in lab, red, red)) {
    --dark-shade: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 80%, black);
  }
  background-size: 200% auto;
  background-image: linear-gradient( 102deg, var(--btn-color, var(--color-neutral)) 0%, var(--dark-shade) 51%, var(--btn-color, var(--color-neutral)) 100% );
  @media (hover: hover) {
    &:hover {
      --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
        0px 2px 4px -2px var(--btn-color, var(--color-neutral));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
        0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
      }
      background-position: 99% center;
    }
  }
  &:focus-visible {
    --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
      0px 2px 4px -2px var(--btn-color, var(--color-neutral));
    @supports (color: color-mix(in lab, red, red)) {
      --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
      0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
    }
    background-position: 99% center;
  }
}
.btn-gradient.btn-active {
  --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
    0px 2px 4px -2px var(--btn-color, var(--color-neutral));
  @supports (color: color-mix(in lab, red, red)) {
    --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
    0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
  }
  background-position: 99% center;
}
.btn-xs {
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
  --btn-p: 0.5rem;
  --size: calc(var(--size-field, 0.25rem) * 6);
}
.btn-sm {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --btn-p: 0.75rem;
  --size: calc(var(--size-field, 0.25rem) * 7.5);
}
.btn-md {
  font-size: var(--text-base);
  line-height: var(--tw-leading, var(--text-base--line-height));
  --btn-p: 1rem;
  --size: calc(var(--size-field, 0.25rem) * 9.5);
}
.btn-lg {
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
  --btn-p: 1.25rem;
  --size: calc(var(--size-field, 0.25rem) * 11.5);
}
.btn-xl {
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
  --btn-p: 1.5rem;
  --size: calc(var(--size-field, 0.25rem) * 14);
}
.btn-square {
  padding-inline: calc(var(--spacing) * 0);
  width: var(--size);
  height: var(--size);
}
.btn-circle {
  border-radius: calc(infinity * 1px);
  padding-inline: calc(var(--spacing) * 0);
  width: var(--size);
  height: var(--size);
}
.btn-wide {
  width: 100%;
  max-width: calc(var(--spacing) * 64);
}
.btn-block {
  width: 100%;
}
:root {
  --base-100: oklch(20% 0.01 260);
  --base-200: oklch(26% 0.015 260);
  --base-300: oklch(33% 0.02 260);
  --base-content: oklch(95.5% 0.015 270);
  --primary: oklch(0.72 0.19 149.57);
  --primary-content: oklch(98% .022 95.277);
  --secondary: oklch(66.8% 0.0184 304.67);
  --accent: oklch(71.37% 0.1434 254.62);
  --accent-content: oklch(98% .022 95.277);
  --neutral: rgba(191, 193, 201, 1);
  --neutral-content: oklch(98% .022 95.277);
  --info: oklch(79.71% 0.1339 211.53);
  --info-content: oklch(98% .022 95.277);
  --success: oklch(77.29% 0.1535 163.22);
  --success-content: oklch(98% .022 95.277);
  --warning: oklch(75.76% 0.159 55.93);
  --warning-content: oklch(98% .022 95.277);
  --error: oklch(75.88% 0.1385 31.29);
  --error-content: oklch(98% .022 95.277);
  --avocado-500: oklch(75.88% 0.1385 31.29);
  --header: oklch(23.2% .006 285.95);
  --body: oklch(20% 0.01 260);
  --border-color: oklch(98% 0.005 270 / 0.08);
  --gradient-decoration: oklch(98% 0.005 270 / 0.06);
  --svg-decoration: oklch(98% 0.005 270 / 0.06);
  --sub-content-code: oklch(0.24 0.01 0 / 0.19);
  --radius-selector: 1rem;
  --radius-field: 14px;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}
.svg-color-main svg {
  width: 100%;
  height: 100%;
}
.text-\[var\(--title-text-color\)\] {
  color: var(--color-base-content);
}
.text-\[--body-text-color\] {
  color: var(--color-base-content);
}
.to-primary\/10 {
  --tw-gradient-to: var(--color-primary);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-primary\/10 {
  --tw-gradient-to: var(--color-primary);
  @supports (color: color-mix(in lab, red, red)) {
    --tw-gradient-to: color-mix(in oklab, var(--color-primary) 10%, transparent);
  }
}
.from-base-100\/10 {
  --tw-gradient-from: var(--color-base-100);
  @supports (color: color-mix(in lab, red, red)) {
    --tw-gradient-from: color-mix(in oklab, var(--color-base-100) 10%, transparent);
  }
}
.from-base-100\/10 {
  --tw-gradient-from: var(--color-base-100);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.bg-gradient-to-br {
  --tw-gradient-position: to bottom right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.ring-primary\/20 {
  --tw-ring-color: var(--color-primary);
  @supports (color: color-mix(in lab, red, red)) {
    --tw-ring-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
  }
}
.text-base-content\/90 {
  color: var(--color-base-content);
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-base-content) 90%, transparent);
  }
}
.text-base-content\/80 {
  color: var(--color-base-content);
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
  }
}
.space-y-20 h2 {
  margin-block-end: 0;
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(97.8% 0.005 297.73);
    --color-base-300: oklch(37.01% 0.0069 297.49);
    --color-base-content: oklch(37.57% 0.022 281.8);
    --color-primary: oklch(57.59% 0.247 287.24);
    --color-primary-content: oklch(96.57% 0.017 289.61);
    --color-secondary: oklch(55.79% 0.022 301.91);
    --color-secondary-content: oklch(97.64% 0.001 286.38);
    --color-accent: oklch(62.31% 0.188 259.81);
    --color-accent-content: oklch(97.05% 0.014 254.6);
    --color-neutral: oklch(37.57% 0.0222 281.8);
    --color-neutral-content: oklch(0.98 0.0013 286.38);
    --color-info: oklch(71.48% 0.126 215.22);
    --color-info-content: oklch(98.41% 0.019 200.87);
    --color-success: oklch(73.11% 0.217 147.04);
    --color-success-content: oklch(98.1% 0.014 174.18);
    --color-warning: oklch(79.87% 0.164 73.09);
    --color-warning-content: oklch(99.34% 0.011 95.16);
    --color-error: oklch(65.39% 0.222 25.86);
    --color-error-content: oklch(98.76% 0.009 67.73);
    --radius-selector: 0.25rem;
    --radius-field: 0.375rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: oklch(31.23% 0.026 301.24);
      --color-base-200: oklch(25.39% 0.025 298.72);
      --color-base-300: oklch(23.44% 0.0194 298.63);
      --color-base-content: oklch(84.98% 0.014 295.28);
      --color-primary: oklch(53.93% 0.271 286.75);
      --color-primary-content: oklch(88.22% 0.062 290.17);
      --color-secondary: oklch(49.12% 0.021 303.05);
      --color-secondary-content: oklch(88.83% 0.007 304.23);
      --color-accent: oklch(54.61% 0.215 262.88);
      --color-accent-content: oklch(88.23% 0.057 254.13);
      --color-neutral: oklch(65.75% 0.022 294.95);
      --color-neutral-content: oklch(18.51% 0.017 301.92);
      --color-info: oklch(60.89% 0.111 221.72);
      --color-info-content: oklch(91.67% 0.077 205.04);
      --color-success: oklch(67.35% 0.201 146.84);
      --color-success-content: oklch(91.38% 0.069 168.24);
      --color-warning: oklch(72.59% 0.152 69.05);
      --color-warning-content: oklch(96.07% 0.057 93.2);
      --color-error: oklch(59.54% 0.208 26.28);
      --color-error-content: oklch(93.4% 0.039 54.86);
      --radius-selector: 0.25rem;
      --radius-field: 0.375rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 0;
      --noise: 0;
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(97.8% 0.005 297.73);
    --color-base-300: oklch(37.01% 0.0069 297.49);
    --color-base-content: oklch(37.57% 0.022 281.8);
    --color-primary: oklch(57.59% 0.247 287.24);
    --color-primary-content: oklch(96.57% 0.017 289.61);
    --color-secondary: oklch(55.79% 0.022 301.91);
    --color-secondary-content: oklch(97.64% 0.001 286.38);
    --color-accent: oklch(62.31% 0.188 259.81);
    --color-accent-content: oklch(97.05% 0.014 254.6);
    --color-neutral: oklch(37.57% 0.0222 281.8);
    --color-neutral-content: oklch(0.98 0.0013 286.38);
    --color-info: oklch(71.48% 0.126 215.22);
    --color-info-content: oklch(98.41% 0.019 200.87);
    --color-success: oklch(73.11% 0.217 147.04);
    --color-success-content: oklch(98.1% 0.014 174.18);
    --color-warning: oklch(79.87% 0.164 73.09);
    --color-warning-content: oklch(99.34% 0.011 95.16);
    --color-error: oklch(65.39% 0.222 25.86);
    --color-error-content: oklch(98.76% 0.009 67.73);
    --radius-selector: 0.25rem;
    --radius-field: 0.375rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
    color-scheme: dark;
    --color-base-100: oklch(31.23% 0.026 301.24);
    --color-base-200: oklch(25.39% 0.025 298.72);
    --color-base-300: oklch(23.44% 0.0194 298.63);
    --color-base-content: oklch(84.98% 0.014 295.28);
    --color-primary: oklch(53.93% 0.271 286.75);
    --color-primary-content: oklch(88.22% 0.062 290.17);
    --color-secondary: oklch(49.12% 0.021 303.05);
    --color-secondary-content: oklch(88.83% 0.007 304.23);
    --color-accent: oklch(54.61% 0.215 262.88);
    --color-accent-content: oklch(88.23% 0.057 254.13);
    --color-neutral: oklch(65.75% 0.022 294.95);
    --color-neutral-content: oklch(18.51% 0.017 301.92);
    --color-info: oklch(60.89% 0.111 221.72);
    --color-info-content: oklch(91.67% 0.077 205.04);
    --color-success: oklch(67.35% 0.201 146.84);
    --color-success-content: oklch(91.38% 0.069 168.24);
    --color-warning: oklch(72.59% 0.152 69.05);
    --color-warning-content: oklch(96.07% 0.057 93.2);
    --color-error: oklch(59.54% 0.208 26.28);
    --color-error-content: oklch(93.4% 0.039 54.86);
    --radius-selector: 0.25rem;
    --radius-field: 0.375rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=black]:checked),[data-theme=black] {
    color-scheme: dark;
    --color-base-100: oklch(23.2% 0.006 285.95);
    --color-base-200: oklch(14% 0.005 285.823);
    --color-base-300: oklch(14% 0 0);
    --color-base-content: oklch(96% 0.001 286.375);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(98% 0.022 95.277);
    --color-secondary: oklch(60% 0.118 184.704);
    --color-secondary-content: oklch(98% 0.014 180.72);
    --color-accent: oklch(0.51 0.27 271.36);
    --color-accent-content: oklch(100% 0 0);
    --color-neutral: oklch(98% 0 0);
    --color-neutral-content: oklch(37% 0.044 257.287);
    --color-info: oklch(58% 0.158 241.966);
    --color-info-content: oklch(97% 0.013 236.62);
    --color-success: oklch(64% 0.2 131.684);
    --color-success-content: oklch(98% 0.031 120.757);
    --color-warning: oklch(55% 0.163 48.998);
    --color-warning-content: oklch(98% 0.026 102.212);
    --color-error: oklch(63% 0.237 25.331);
    --color-error-content: oklch(97% 0.013 17.38);
    --radius-selector: 2rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 2px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=claude]:checked),[data-theme=claude] {
    color-scheme: "light";
    --color-base-100: oklch(98% 0.01 93.48);
    --color-base-200: oklch(94.95% 0.01 87.47);
    --color-base-300: oklch(0.8685 0.0109 100.85);
    --color-base-content: oklch(34% 0.03 94.42);
    --color-primary: oklch(62% 0.14 39.15);
    --color-primary-content: oklch(100% 0 0);
    --color-secondary: oklch(69% 0.16 290.41);
    --color-secondary-content: oklch(14% 0 0);
    --color-accent: oklch(42.621% 0.074 224.389);
    --color-accent-content: oklch(88.524% 0.014 224.389);
    --color-neutral: oklch(20% 0 0);
    --color-neutral-content: oklch(98% 0 0);
    --color-info: oklch(56% 0.13 42.95);
    --color-info-content: oklch(100% 0 0);
    --color-success: oklch(60% 0.1 120.29);
    --color-success-content: oklch(100% 0 0);
    --color-warning: oklch(85% 0.12 80.65);
    --color-warning-content: oklch(0% 0 0);
    --color-error: oklch(64% 0.25 19.69);
    --color-error-content: oklch(100% 0 0);
    --radius-selector: 1rem;
    --radius-field: 1rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=corporate]:checked),[data-theme=corporate] {
    color-scheme: light;
    --color-base-100: oklch(99.43% 0.001 286.38);
    --color-base-200: oklch(97.33% 0.008 271.33);
    --color-base-300: oklch(48.52% 0.0225 279.09);
    --color-base-content: oklch(42.06% 0.049 276.53);
    --color-primary: oklch(62.31% 0.188 259.81);
    --color-primary-content: oklch(97.05% 0.014 254.6);
    --color-secondary: oklch(55.79% 0.022 301.91);
    --color-secondary-content: oklch(95.05% 0.003 308.43);
    --color-accent: oklch(65.59% 0.212 354.31);
    --color-accent-content: oklch(97.14% 0.014 343.2);
    --color-neutral: oklch(0.447 0.0732 274.26);
    --color-neutral-content: oklch(82.15% 0.055 277.12);
    --color-info: oklch(70.38% 0.123 182.5);
    --color-info-content: oklch(98.36% 0.014 180.72);
    --color-success: oklch(76.81% 0.204 130.85);
    --color-success-content: oklch(98.57% 0.031 120.76);
    --color-warning: oklch(79.52% 0.162 86.05);
    --color-warning-content: oklch(98.73% 0.026 102.21);
    --color-error: oklch(64.5% 0.215 16.44);
    --color-error-content: oklch(96.94% 0.015 12.42);
    --radius-selector: 0.125rem;
    --radius-field: 0.25rem;
    --radius-box: 0.375rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=ghibli]:checked),[data-theme=ghibli] {
    color-scheme: light;
    --color-base-100: oklch(0.94 0.0262 82.38);
    --color-base-200: oklch(0.91 0.0326 80.99);
    --color-base-300: oklch(0.34 0.0131 81.73 / 20%);
    --color-base-content: oklch(41% 0.077 79.04);
    --color-primary: oklch(0.62 0.0868 111.8);
    --color-primary-content: oklch(97% 0.009 106.57);
    --color-secondary: oklch(44% 0.043 257.281);
    --color-secondary-content: oklch(92% 0.013 255.508);
    --color-accent: oklch(70% 0.14 182.503);
    --color-accent-content: oklch(98% 0.014 180.72);
    --color-neutral: oklch(41% 0.025 282.21);
    --color-neutral-content: oklch(98% 0.001 286.38);
    --color-info: oklch(62% 0.214 259.815);
    --color-info-content: oklch(97% 0.014 254.604);
    --color-success: oklch(64% 0.2 131.684);
    --color-success-content: oklch(98% 0.031 120.757);
    --color-warning: oklch(68% 0.162 75.834);
    --color-warning-content: oklch(28% 0.066 53.813);
    --color-error: oklch(63% 0.237 25.331);
    --color-error-content: oklch(97% 0.013 17.38);
    --radius-selector: 0.25rem;
    --radius-field: 1rem;
    --radius-box: 2rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=gourmet]:checked),[data-theme=gourmet] {
    color-scheme: light;
    --color-base-100: oklch(99.45% 0.002 67.8);
    --color-base-200: oklch(98.19% 0.008 61.46);
    --color-base-300: oklch(47% 0.0131 54.28);
    --color-base-content: oklch(32.38% 0.009 67.5);
    --color-primary: oklch(70.49% 0.187 47.6);
    --color-primary-content: oklch(97.96% 0.016 73.68);
    --color-secondary: oklch(55.79% 0.022 301.91);
    --color-secondary-content: oklch(95.05% 0.003 308.43);
    --color-accent: oklch(65.59% 0.212 354.31);
    --color-accent-content: oklch(97.14% 0.014 343.2);
    --color-neutral: oklch(32.38% 0.009 67.5);
    --color-neutral-content: oklch(99.45% 0.002 67.8);
    --color-info: oklch(68.47% 0.148 237.32);
    --color-info-content: oklch(97.71% 0.012 236.62);
    --color-success: oklch(69.59% 0.149 162.48);
    --color-success-content: oklch(97.93% 0.021 166.11);
    --color-warning: oklch(57.59% 0.247 287.24);
    --color-warning-content: oklch(96.57% 0.017 289.61);
    --color-error: oklch(65.39% 0.222 25.86);
    --color-error-content: oklch(98.76% 0.009 67.73);
    --radius-selector: 2rem;
    --radius-field: 2rem;
    --radius-box: 0.75rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=luxury]:checked),[data-theme=luxury] {
    color-scheme: dark;
    --color-base-100: oklch(24.97% 0.0235 60.71);
    --color-base-200: oklch(20.19% 0.0212 56.18);
    --color-base-300: oklch(13.67% 0.0208 68.4);
    --color-base-content: oklch(89.79% 0.0323 68.91);
    --color-primary: oklch(68.75% 0.0948 67.23);
    --color-primary-content: oklch(92.24% 0.0235 69.59);
    --color-secondary: oklch(55.79% 0.0221 301.91);
    --color-secondary-content: oklch(97.64% 0.0013 286.38);
    --color-accent: oklch(64.45% 0.1596 354.64);
    --color-accent-content: oklch(89.57% 0.0416 348.79);
    --color-neutral: oklch(0.51 0.0449 70.29);
    --color-neutral-content: oklch(16.74% 0.0325 59.58);
    --color-info: oklch(55.75% 0.0746 234.15);
    --color-info-content: oklch(87.94% 0.0196 230.73);
    --color-success: oklch(52.65% 0.0537 188.98);
    --color-success-content: oklch(84.44% 0.0185 192.54);
    --color-warning: oklch(57.37% 0.149 296.3);
    --color-warning-content: oklch(88.26% 0.0392 300.25);
    --color-error: oklch(50.81% 0.097 4.98);
    --color-error-content: oklch(87.99% 0.021 358.74);
    --radius-selector: 0.1875rem;
    --radius-field: 0.375rem;
    --radius-box: 0.5625rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=mintlify]:checked),[data-theme=mintlify] {
    color-scheme: light;
    --color-base-100: oklch(98.69% 0.007 145.52);
    --color-base-200: oklch(95.89% 0.019 145.43);
    --color-base-300: oklch(48.75% 0.0326 146.64);
    --color-base-content: oklch(21% 0.006 56.043);
    --color-primary: oklch(62% 0.194 149.214);
    --color-primary-content: oklch(98% 0.018 155.826);
    --color-secondary: oklch(84.42% 0.172 84.934);
    --color-secondary-content: oklch(47% 0.137 46.201);
    --color-accent: oklch(55% 0.016 285.938);
    --color-accent-content: oklch(98% 0 0);
    --color-neutral: oklch(26% 0.007 34.298);
    --color-neutral-content: oklch(97% 0.001 106.424);
    --color-info: oklch(65.52% 0.111 212.17);
    --color-info-content: oklch(39% 0.07 227.392);
    --color-success: oklch(64.01% 0.175 146.74);
    --color-success-content: oklch(26% 0.065 152.934);
    --color-warning: oklch(77.03% 0.174 64.05);
    --color-warning-content: oklch(47% 0.137 46.201);
    --color-error: oklch(59.15% 0.202 21.24);
    --color-error-content: oklch(97% 0.014 343.198);
    --radius-selector: 2rem;
    --radius-field: 1rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=pastel]:checked),[data-theme=pastel] {
    color-scheme: "dark";
    --color-base-100: oklch(0.28 0.0292 308.75);
    --color-base-200: oklch(0.2182 0.0098 52.95);
    --color-base-300: oklch(0.3467 0.0053 301.25);
    --color-base-content: oklch(98% 0.003 247.858);
    --color-primary: oklch(79% 0.12 295.97);
    --color-primary-content: oklch(100% 0 0);
    --color-secondary: oklch(91% 0.05 306.07);
    --color-secondary-content: oklch(45% 0.03 257.68);
    --color-accent: oklch(72% 0.2 210);
    --color-accent-content: oklch(37% 0.03 259.73);
    --color-neutral: oklch(1 0 0);
    --color-neutral-content: oklch(14% 0.004 49.25);
    --color-info: oklch(50% 0.25 255.25);
    --color-info-content: oklch(100% 0 0);
    --color-success: oklch(69% 0.17 162.48);
    --color-success-content: oklch(100% 0 0);
    --color-warning: oklch(79% 0.184 86.047);
    --color-warning-content: oklch(0% 0 0);
    --color-error: oklch(64% 0.246 16.439);
    --color-error-content: oklch(100% 0 0);
    --radius-selector: 2rem;
    --radius-field: 2rem;
    --radius-box: 2rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=perplexity]:checked),[data-theme=perplexity] {
    color-scheme: "light";
    --color-base-100: oklch(95.36% 0.011 196.98);
    --color-base-200: oklch(0.9393 0.0096 196.99);
    --color-base-300: oklch(85.94% 0.009 258.34);
    --color-base-content: oklch(23.72% 0.034 208.26);
    --color-primary: oklch(72% 0.12 210.36);
    --color-primary-content: oklch(100% 0 0);
    --color-secondary: oklch(66.11% 0.123 228.63);
    --color-secondary-content: oklch(98% 0 0);
    --color-accent: oklch(67% 0.182 276.935);
    --color-accent-content: oklch(25% 0.09 281.288);
    --color-neutral: oklch(14% 0 0);
    --color-neutral-content: oklch(100% 0 0);
    --color-info: oklch(58% 0.1 218.29);
    --color-info-content: oklch(100% 0 0);
    --color-success: oklch(73% 0.14 118.63);
    --color-success-content: oklch(100% 0 0);
    --color-warning: oklch(85% 0.16 72.74);
    --color-warning-content: oklch(0% 0 0);
    --color-error: oklch(64% 0.21 25.39);
    --color-error-content: oklch(100% 0 0);
    --radius-selector: 1rem;
    --radius-field: 1rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=shadcn]:checked),[data-theme=shadcn] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(96.74% 0.0013 286.38);
    --color-base-300: oklch(0% 0 0);
    --color-base-content: oklch(21.03% 0.0059 285.89);
    --color-primary: oklch(27.39% 0.0055 286.03);
    --color-primary-content: oklch(98.51% 0 0);
    --color-secondary: oklch(55.79% 0.0221 301.91);
    --color-secondary-content: oklch(97.64% 0.0013 286.38);
    --color-accent: oklch(62.31% 0.188 259.81);
    --color-accent-content: oklch(97.05% 0.0142 254.6);
    --color-neutral: oklch(40.66% 0.0251 282.21);
    --color-neutral-content: oklch(97.64% 0.0013 286.38);
    --color-info: oklch(71.48% 0.1257 215.22);
    --color-info-content: oklch(98.41% 0.0189 200.87);
    --color-success: oklch(69.59% 0.1491 162.48);
    --color-success-content: oklch(97.93% 0.0207 166.11);
    --color-warning: oklch(70.49% 0.1867 47.6);
    --color-warning-content: oklch(97.96% 0.0158 73.68);
    --color-error: oklch(65.39% 0.2221 25.86);
    --color-error-content: oklch(98.76% 0.0085 67.73);
    --radius-selector: 0.125rem;
    --radius-field: 0.25rem;
    --radius-box: 0.375rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=slack]:checked),[data-theme=slack] {
    color-scheme: light;
    --color-base-100: oklch(97.31% 0 0);
    --color-base-200: oklch(93.7% 0 0);
    --color-base-300: oklch(38.87% 0.0052 301.28);
    --color-base-content: oklch(21% 0.006 56.043);
    --color-primary: oklch(30.65% 0.108 327.06);
    --color-primary-content: oklch(97% 0.014 254.604);
    --color-secondary: oklch(0% 0 0);
    --color-secondary-content: oklch(100% 0 0);
    --color-accent: oklch(55% 0.016 285.938);
    --color-accent-content: oklch(98% 0 0);
    --color-neutral: oklch(14% 0.004 49.25);
    --color-neutral-content: oklch(98% 0.001 106.423);
    --color-info: oklch(76.8% 0.131 223.2);
    --color-info-content: oklch(45% 0.085 224.283);
    --color-success: oklch(69.11% 0.142 160.24);
    --color-success-content: oklch(39% 0.095 152.535);
    --color-warning: oklch(79.66% 0.152 82.65);
    --color-warning-content: oklch(47% 0.137 46.201);
    --color-error: oklch(58.8% 0.222 11.49);
    --color-error-content: oklch(97% 0.014 343.198);
    --radius-selector: 2rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=soft]:checked),[data-theme=soft] {
    color-scheme: light;
    --color-base-100: oklch(98.8% 0.0069 304.24);
    --color-base-200: oklch(96.95% 0.0114 308.33);
    --color-base-300: oklch(40.47% 0.0142 308.07);
    --color-base-content: oklch(32.61% 0.0705 305.29);
    --color-primary: oklch(62.68% 0.2325 303.9);
    --color-primary-content: oklch(97.68% 0.0142 308.3);
    --color-secondary: oklch(55.79% 0.0221 301.91);
    --color-secondary-content: oklch(97.64% 0.0013 286.38);
    --color-accent: oklch(62.31% 0.188 259.81);
    --color-accent-content: oklch(97.05% 0.0142 254.6);
    --color-neutral: oklch(32.61% 0.0705 305.29);
    --color-neutral-content: oklch(99.54% 0.0028 308.43);
    --color-info: oklch(71.48% 0.1257 215.22);
    --color-info-content: oklch(98.41% 0.0189 200.87);
    --color-success: oklch(69.59% 0.1491 162.48);
    --color-success-content: oklch(97.93% 0.0207 166.11);
    --color-warning: oklch(70.49% 0.1867 47.6);
    --color-warning-content: oklch(97.96% 0.0158 73.68);
    --color-error: oklch(65.39% 0.2221 25.86);
    --color-error-content: oklch(98.76% 0.0085 67.73);
    --radius-selector: 0.5rem;
    --radius-field: 0.75rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=spotify]:checked),[data-theme=spotify] {
    color-scheme: "dark";
    --color-base-100: oklch(0.1964 0.0168 268.77);
    --color-base-200: oklch(9.3% 0.007 145);
    --color-base-300: oklch(55% 0.046 257.417);
    --color-base-content: oklch(98% 0.003 247.858);
    --color-primary: oklch(70% 0.18 153.85);
    --color-primary-content: oklch(1 0 0);
    --color-secondary: oklch(98% 0.031 120.757);
    --color-secondary-content: oklch(27% 0.072 132.109);
    --color-accent: oklch(45% 0.05 250.05);
    --color-accent-content: oklch(95% 0.01 238.46);
    --color-neutral: oklch(1 0 0);
    --color-neutral-content: oklch(14% 0 0);
    --color-info: oklch(60% 0.1 269.83);
    --color-info-content: oklch(95% 0.01 238.46);
    --color-success: oklch(72% 0.12 201.79);
    --color-success-content: oklch(95% 0.01 238.46);
    --color-warning: oklch(80% 0.1 100.65);
    --color-warning-content: oklch(0% 0 0);
    --color-error: oklch(64% 0.25 19.69);
    --color-error-content: oklch(95% 0.01 238.46);
    --radius-selector: 1rem;
    --radius-field: 1rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=valorant]:checked),[data-theme=valorant] {
    color-scheme: light;
    --color-base-100: oklch(99.14% 0.0044 359.99);
    --color-base-200: oklch(96.72% 0.0163 12.78);
    --color-base-300: oklch(27.67% 0.0779 19.29);
    --color-base-content: oklch(21% 0.006 56.043);
    --color-primary: oklch(66.77% 0.2199 21.34);
    --color-primary-content: oklch(97% 0.013 17.38);
    --color-secondary: oklch(30.12% 0 0);
    --color-secondary-content: oklch(100% 0 0);
    --color-accent: oklch(55% 0.016 285.938);
    --color-accent-content: oklch(98% 0 0);
    --color-neutral: oklch(20.89% 0.0248 249.09);
    --color-neutral-content: oklch(98% 0.001 106.423);
    --color-info: oklch(58% 0.158 241.966);
    --color-info-content: oklch(98% 0.019 200.873);
    --color-success: oklch(76.82% 0.1855 152.24);
    --color-success-content: oklch(39% 0.095 152.535);
    --color-warning: oklch(80.16% 0.1705 73.27);
    --color-warning-content: oklch(47% 0.137 46.201);
    --color-error: oklch(67.08% 0.2165 25.19);
    --color-error-content: oklch(97% 0.014 343.198);
    --radius-selector: 0rem;
    --radius-field: 0rem;
    --radius-box: 0rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 1;
  }
}
@layer base {
  :root:has(input.theme-controller[value=vscode]:checked),[data-theme=vscode] {
    color-scheme: "dark";
    --color-base-100: oklch(0.18 0.02 271.27);
    --color-base-200: oklch(0.22 0.02 271.67);
    --color-base-300: oklch(0.28 0.03 270.91);
    --color-base-content: oklch(0.994 0 0);
    --color-primary: oklch(0.71 0.15 239.15);
    --color-primary-content: oklch(0.94 0.03 232.39);
    --color-secondary: oklch(88% 0.059 254.128);
    --color-secondary-content: oklch(0 0 0);
    --color-accent: oklch(0.5636 0.0173 273.66);
    --color-accent-content: oklch(86% 0.022 252.894);
    --color-neutral: oklch(86% 0.022 252.894);
    --color-neutral-content: oklch(14% 0 0);
    --color-info: oklch(0.6 0.1 269.83);
    --color-info-content: oklch(0.9 0.01 238.47);
    --color-success: oklch(0.7 0.15 159.83);
    --color-success-content: oklch(0.9 0.01 238.47);
    --color-warning: oklch(0.8 0.1 100.65);
    --color-warning-content: oklch(0 0 0);
    --color-error: oklch(0.64 0.25 19.69);
    --color-error-content: oklch(0.9 0.01 238.47);
    --radius-selector: 0rem;
    --radius-field: 0rem;
    --radius-box: 0rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
  .chat {
    --mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
  }
  .tooltip {
    --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
  }
}
@layer base {
  button:not(:disabled), [role="button"]:not(:disabled) {
    cursor: pointer;
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor #0000;
    @supports (color: color-mix(in lab, red, red)) {
      scrollbar-color: color-mix(in oklch, currentColor 20%, #0000) #0000;
    }
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes radio-inset {
  0% {
    padding: 1px;
  }
  50% {
    padding: 4px;
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes indeterminate-progress {
  0% {
    background-position-x: -75%;
  }
  50% {
    background-position-x: 125%;
  }
  100% {
    background-position-x: -75%;
  }
}
@keyframes progress-bar-stripes {
  0% {
    background-position-x: 0.75rem;
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=maintheme]:checked),[data-theme="maintheme"] {
    color-scheme: light;
    --color-base-100: var(--base-100);
    --color-base-200: var(--base-200);
    --color-base-300: var(--base-300);
    --color-base-content: var(--base-content);
    --color-primary: var(--primary);
    --color-primary-content: var(--primary-content);
    --color-secondary: var(--secondary);
    --color-accent: var(--accent);
    --color-accent-content: var(--accent-content);
    --color-neutral: var(--neutral);
    --color-neutral-content: var(--neutral-content);
    --color-info: var(--info);
    --color-info-content: var(--info-content);
    --color-success: var(--success);
    --color-success-content: var(--success-content);
    --color-warning: var(--warning);
    --color-warning-content: var(--warning-content);
    --color-error: var(--error);
    --color-error-content: var(--error-content);
    --radius-selector: var(--radius-selector);
    --radius-field: var(--radius-field);
    --radius-box: var(--radius-box);
    --size-selector: var(--size-selector);
    --size-field: var(--size-field);
    --border: var(--border);
    --depth: var(--depth);
    --noise: var(--noise);
    --color-avocado-500: var(--avocado-500);
    --color-header: var(--header);
    --color-body: var(--body);
    --color-border: var(--border-color);
    --color-gradient-decoration: var(--gradient-decoration);
    --color-svg-decoration: var(--svg-decoration);
    --color-sub-content-code: var(--sub-content-code);
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: var(--base-100);
      --color-base-200: var(--base-200);
      --color-base-300: var(--base-300);
      --color-base-content: var(--base-content);
      --color-primary: var(--primary);
      --color-primary-content: var(--primary-content);
      --color-secondary: var(--secondary);
      --color-accent: var(--accent);
      --color-accent-content: var(--accent-content);
      --color-neutral: var(--neutral);
      --color-neutral-content: var(--neutral-content);
      --color-info: var(--info);
      --color-info-content: var(--info-content);
      --color-success: var(--success);
      --color-success-content: var(--success-content);
      --color-warning: var(--warning);
      --color-warning-content: var(--warning-content);
      --color-error: var(--error);
      --color-error-content: var(--error-content);
      --radius-selector: var(--radius-selector);
      --radius-field: var(--radius-field);
      --radius-box: var(--radius-box);
      --size-selector: var(--size-selector);
      --size-field: var(--size-field);
      --border: var(--border);
      --depth: var(--depth);
      --noise: var(--noise);
      --color-avocado-500: var(--avocado-500);
      --color-header: var(--header);
      --color-body: var(--body);
      --color-border: var(--border-color);
      --color-gradient-decoration: var(--gradient-decoration);
      --color-svg-decoration: var(--svg-decoration);
      --color-sub-content-code: var(--sub-content-code);
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=maintheme-dark]:checked),[data-theme="maintheme-dark"] {
    color-scheme: dark;
    --color-base-100: var(--base-100);
    --color-base-200: var(--base-200);
    --color-base-300: var(--base-300);
    --color-base-content: var(--base-content);
    --color-primary: var(--primary);
    --color-primary-content: var(--primary-content);
    --color-secondary: var(--secondary);
    --color-accent: var(--accent);
    --color-accent-content: var(--accent-content);
    --color-neutral: var(--neutral);
    --color-neutral-content: var(--neutral-content);
    --color-info: var(--info);
    --color-info-content: var(--info-content);
    --color-success: var(--success);
    --color-success-content: var(--success-content);
    --color-warning: var(--warning);
    --color-warning-content: var(--warning-content);
    --color-error: var(--error);
    --color-error-content: var(--error-content);
    --radius-selector: var(--radius-selector);
    --radius-field: var(--radius-field);
    --radius-box: var(--radius-box);
    --size-selector: var(--size-selector);
    --size-field: var(--size-field);
    --border: var(--border);
    --depth: var(--depth);
    --noise: var(--noise);
    --color-avocado-500: var(--avocado-500);
    --color-header: var(--header);
    --color-body: var(--body);
    --color-border: var(--border-color);
    --color-gradient-decoration: var(--gradient-decoration);
    --color-svg-decoration: var(--svg-decoration);
    --color-sub-content-code: var(--sub-content-code);
  }
}
@property --tw-border-spacing-x {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-spacing-y {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-scroll-snap-strictness {
  syntax: "*";
  inherits: false;
  initial-value: proximity;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-spacing-x: 0;
      --tw-border-spacing-y: 0;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-scroll-snap-strictness: proximity;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-x-reverse: 0;
      --tw-border-style: solid;
      --tw-divide-y-reverse: 0;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }
  }
}